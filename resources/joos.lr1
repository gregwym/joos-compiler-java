68
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
NEW
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
87
S
arglist
arrayaccess
arraycreate
arraytype
addiexpr
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
castexpr
classbody
classbodydecl
classbodydecls
classcreateexpr
classdecl
classmemberdecl
condexpr
constructordecl
constructordeclor
dim
dims
dimexpr
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntwotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
fornoshort
forinit
forupdate
ifthen
ifthenelse
ifthenelsenoshort
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
multiexpr
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmntnoshort
stmnt
super
type
typedecl
unaryexpr
variabledeclor
variabledeclid
variabledeclors
variableinit
while
whilenoshort
S
166
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayaccess primnoarray LBRACK expr RBRACK
arraycreate NEW primitivetype dimexpr
arraycreate NEW name dimexpr
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
constructordecl modifiers constructordeclor block
constructordeclor simplename LPAREN params RPAREN
dimexpr LBRACK expr RBRACK
dims
dims dim
dim LBRACK RBRACK
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interfacelist
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
classcreateexpr NEW name LPAREN arglist RPAREN
emptystmnt SEMI
expr assignexpr
fieldaccess primary DOT ID
fielddecl modifiers type variabledeclors SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit
forinit stmntexprlst
forinit localvardecl
forupdate
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnoshort ELSE stmnt
ifthenelsenoshort IF LPAREN expr RPAREN stmntnoshort ELSE stmntnoshort
stmntnoshort stmntwotrail
stmntnoshort ifthenelsenoshort
stmntnoshort whilenoshort
stmntnoshort fornoshort
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledeclors
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray literal
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray classcreateexpr
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntwotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexpr classcreateexpr
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntwotrail block
stmntwotrail emptystmnt
stmntwotrail exprstmnt
stmntwotrail retstmnt
exprstmnt stmntexpr SEMI
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
unaryexpr primary
unaryexpr name
unaryexpr NOT unaryexpr
unaryexpr castexpr
castexpr LPAREN primitivetype dims RPAREN unaryexpr
castexpr LPAREN expr RPAREN unaryexpr
castexpr LPAREN name dim RPAREN unaryexpr
multiexpr unaryexpr
multiexpr multiexpr STAR unaryexpr
multiexpr multiexpr SLASH unaryexpr
multiexpr multiexpr PERCENT unaryexpr
addiexpr multiexpr
addiexpr addiexpr PLUS multiexpr
addiexpr addiexpr MINUS multiexpr
variabledeclor variabledeclid
variabledeclor variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledeclors variabledeclor
variabledeclors variabledeclors COMMA variabledeclor
variableinit expr
while WHILE LPAREN expr RPAREN stmnt
whilenoshort WHILE LPAREN expr RPAREN stmntnoshort
239
2243
211 RETURN shift 1
186 RBRACE reduce 119
142 lefthand shift 2
234 retstmnt shift 3
112 FINAL reduce 99
117 block shift 4
6 assign shift 5
234 LPAREN shift 6
154 DOT reduce 41
167 literal shift 7
234 block shift 4
63 BOOLEAN reduce 54
182 dimexpr shift 8
236 ABSTRACT reduce 63
154 RBRACE reduce 41
126 RETURN reduce 17
54 THIS reduce 164
48 simplename shift 9
91 CHAR reduce 47
158 ID reduce 14
158 IF reduce 14
117 exprstmnt shift 10
4 RETURN reduce 132
22 lefthand shift 2
3 INTLIT reduce 135
201 assign shift 5
3 FOR reduce 135
48 primnoarray shift 11
169 whilenoshort shift 12
106 condexpr shift 13
169 NULL shift 14
225 INT reduce 18
126 INT reduce 17
90 DOT reduce 111
233 primitivetype shift 15
169 emptystmnt shift 16
208 name shift 17
211 classcreateexpr shift 18
208 primary shift 19
175 THIS shift 20
46 DOT shift 21
17 BECOME reduce 65
196 INTLIT reduce 16
130 ELSE shift 22
214 BOOLEAN reduce 39
211 SEMI shift 23
123 ID reduce 83
63 THIS reduce 54
88 LPAREN reduce 122
87 BOOLEAN reduce 86
234 methodinvoke shift 24
234 ifthenelsenoshort shift 25
211 primary shift 19
100 SHORT reduce 122
4 SEMI reduce 132
100 NULL reduce 122
54 RBRACE reduce 164
181 LPAREN reduce 120
133 STRINGLIT shift 26
106 THIS shift 20
214 INT reduce 39
144 COMMA reduce 158
99 BOOLEAN reduce 89
64 NEW reduce 124
217 WHILE shift 27
190 COMMA reduce 3
234 stmntnoshort shift 28
233 LPAREN shift 6
208 fieldaccess shift 29
73 primnoarray shift 11
121 assign shift 5
205 STATIC reduce 76
42 SHORT reduce 23
187 fieldaccess shift 29
121 NEW shift 30
178 modifier shift 31
128 numerictype shift 32
136 RBRACE shift 33
22 BOOLLIT shift 34
230 arraycreate shift 35
238 BYTE reduce 20
230 INTLIT shift 36
121 qualifiedname shift 37
167 NEW shift 30
78 singletypeimport shift 38
225 BOOLLIT reduce 18
61 RBRACE reduce 125
171 ID reduce 9
138 SEMI reduce 15
15 ID reduce 137
56 ID shift 39
41 arraycreate shift 35
142 primary shift 19
201 arglist shift 40
166 BECOME shift 41
155 assign shift 5
95 condexpr shift 13
181 ELSE reduce 120
22 SEMI shift 23
117 LPAREN shift 6
42 RBRACE reduce 23
155 condexpr shift 13
92 qualifiedname shift 37
157 LBRACE shift 42
200 BOOLLIT reduce 136
65 stmntexpr shift 43
186 LPAREN reduce 119
105 FINAL reduce 87
128 ID shift 44
105 ABSTRACT reduce 87
187 classcreateexpr shift 45
117 simplename shift 9
167 name shift 46
42 PUBLIC reduce 23
234 primary shift 19
106 lefthand shift 2
1 simplename shift 9
117 WHILE shift 27
170 PUBLIC reduce 22
100 IF reduce 122
127 ID reduce 108
195 BOOLLIT shift 34
63 STRINGLIT reduce 54
100 ID reduce 122
142 methodinvoke shift 47
92 RPAREN reduce 102
1 condexpr shift 13
97 FINAL reduce 100
172 COMMA reduce 161
183 COMMA shift 48
53 LBRACK reduce 94
175 condexpr shift 13
205 BOOLEAN reduce 76
36 DOT reduce 68
133 arrayaccess shift 49
31 FINAL reduce 90
233 simplename shift 9
30 name shift 50
162 numerictype shift 32
73 name shift 46
191 CLASS reduce 88
92 CHAR shift 51
205 INT reduce 76
44 IMPLEMENTS reduce 93
99 STATIC reduce 89
23 SEMI reduce 42
142 LPAREN shift 6
201 THIS shift 20
87 PUBLIC reduce 86
167 CHARLIT shift 52
9 DOT reduce 91
133 assign shift 5
48 INTLIT shift 36
225 CHARLIT reduce 18
201 INTLIT shift 36
201 classcreateexpr shift 45
233 NEW shift 30
162 BYTE shift 53
234 stmnt shift 54
128 INT shift 55
178 INTERFACE shift 56
176 CHAR reduce 74
195 qualifiedname shift 37
117 CHARLIT shift 52
112 PROTECTED reduce 99
112 packagedecl shift 57
64 BOOLLIT reduce 124
199 SEMI reduce 82
211 block shift 4
138 WHILE reduce 15
6 CHARLIT shift 52
230 assignexpr shift 58
201 arraycreate shift 35
159 ID shift 59
187 primnoarray shift 11
54 BYTE reduce 164
200 INTLIT reduce 136
234 fieldaccess shift 29
230 BOOLLIT shift 34
112 NATIVE reduce 99
121 NULL shift 14
106 COMMA reduce 1
187 NEW shift 30
158 CHAR reduce 14
9 LPAREN reduce 91
104 COMMA shift 48
10 THIS reduce 134
156 ID shift 44
86 LBRACE reduce 80
99 VOID reduce 89
80 BOOLEAN reduce 123
180 THIS reduce 53
99 BYTE reduce 89
180 BYTE reduce 53
128 param shift 60
201 lefthand shift 2
64 FOR reduce 124
187 name shift 46
17 DOT shift 21
230 name shift 46
201 qualifiedname shift 37
219 qualifiedname shift 37
207 SHORT reduce 26
41 fieldaccess shift 29
152 INTERFACE reduce 61
91 BYTE reduce 47
201 CHARLIT shift 52
123 INT reduce 83
48 NEW shift 30
208 while shift 61
208 arrayaccess shift 49
219 name shift 62
81 LBRACE reduce 37
84 PROTECTED reduce 40
121 name shift 46
169 RETURN shift 1
173 ABSTRACT reduce 121
158 NATIVE reduce 14
117 stmnt shift 63
37 LPAREN reduce 92
195 NEW shift 30
117 NULL shift 14
189 ABSTRACT reduce 98
180 LBRACE reduce 53
169 ifthenelse shift 64
134 SHORT reduce 77
124 LPAREN shift 6
173 IMPORT reduce 121
88 INT reduce 122
124 INTLIT shift 36
110 PROTECTED reduce 84
106 ID shift 44
23 CHAR reduce 42
211 simplename shift 9
6 methodinvoke shift 47
76 LPAREN reduce 126
124 fieldaccess shift 29
176 CHARLIT reduce 74
63 LBRACE reduce 54
38 PROTECTED reduce 62
48 primary shift 19
65 classcreateexpr shift 18
234 STRINGLIT shift 26
44 DOT reduce 93
126 BOOLLIT reduce 17
145 SEMI shift 65
1 expr shift 66
80 LBRACE reduce 123
117 arraycreate shift 35
73 lefthand shift 2
89 qualifiedname shift 37
30 qualifiedname shift 37
97 STATIC reduce 100
128 type shift 67
210 SHORT reduce 75
201 methodinvoke shift 47
106 name shift 46
23 CHARLIT reduce 42
87 INT reduce 86
151 BECOME reduce 160
234 stmntexpr shift 68
195 ID shift 44
1 assign shift 5
115 RPAREN reduce 2
236 PROTECTED reduce 63
9 SEMI reduce 91
195 IF shift 69
89 INTLIT shift 36
76 INT reduce 126
191 VOID reduce 88
217 FOR shift 70
176 LPAREN reduce 74
142 CHARLIT shift 52
89 ID shift 44
163 DOT reduce 5
195 lefthand shift 2
157 classbody shift 71
230 RPAREN reduce 1
167 primnoarray shift 11
4 FOR reduce 132
95 BOOLLIT shift 34
152 STATIC reduce 61
54 INTLIT reduce 164
140 ID reduce 45
4 RBRACE reduce 132
48 LPAREN shift 6
134 ID reduce 77
133 arraycreate shift 35
208 WHILE shift 72
205 SHORT reduce 76
210 INT reduce 75
230 methodinvoke shift 47
165 INT reduce 21
175 NEW shift 30
167 simplename shift 9
22 RETURN shift 1
89 NEW shift 30
208 exprstmnt shift 10
80 IF reduce 123
133 classcreateexpr shift 45
80 ID reduce 123
69 LPAREN shift 73
80 BYTE reduce 123
222 LBRACK reduce 91
105 INTERFACE reduce 87
67 variabledeclid shift 74
225 NULL reduce 18
167 primary shift 19
175 expr shift 75
91 STRINGLIT reduce 47
181 RETURN reduce 120
22 for shift 76
140 INT reduce 45
116 ID reduce 117
184 IMPLEMENTS shift 77
23 BOOLLIT reduce 42
140 PROTECTED reduce 45
117 NEW shift 30
233 CHARLIT shift 52
117 ifthenelse shift 64
195 CHARLIT shift 52
99 FINAL reduce 89
186 NULL reduce 119
76 ID reduce 126
112 STATIC reduce 99
76 IF reduce 126
234 SEMI shift 23
16 CHARLIT reduce 133
124 THIS shift 20
54 SHORT reduce 164
57 importdecls shift 78
3 SEMI reduce 135
177 PUBLIC reduce 85
177 CLASS reduce 85
61 SEMI reduce 125
89 name shift 46
135 LBRACE reduce 38
101 SEMI reduce 116
95 STRINGLIT shift 26
131 LBRACE reduce 78
105 SHORT reduce 87
29 LBRACK reduce 113
176 WHILE reduce 74
41 NEW shift 30
200 THIS reduce 136
54 BOOLLIT reduce 164
106 methodinvoke shift 47
48 literal shift 7
16 STRINGLIT reduce 133
134 RBRACE reduce 77
173 CLASS reduce 121
225 NEW reduce 18
181 FOR reduce 120
64 NULL reduce 124
169 CHARLIT shift 52
233 localvardecl shift 79
73 ID shift 44
10 WHILE reduce 134
142 ID shift 44
175 name shift 46
181 LBRACE reduce 120
73 INTLIT shift 36
89 simplename shift 9
234 for shift 76
44 LBRACK reduce 93
187 LPAREN shift 6
155 lefthand shift 2
100 BOOLEAN reduce 122
37 DOT reduce 92
142 fieldaccess shift 29
197 ABSTRACT reduce 0
234 RETURN shift 1
200 LBRACE reduce 136
65 ID shift 44
44 LBRACE reduce 93
106 qualifiedname shift 37
189 INTERFACE reduce 98
110 INTERFACE reduce 84
36 LBRACK reduce 68
122 ID shift 59
6 ID shift 44
234 ifthen shift 80
234 INTLIT shift 36
196 FOR reduce 16
230 qualifiedname shift 37
13 RBRACE reduce 11
88 CHAR reduce 122
224 interface shift 81
13 RBRACK reduce 11
195 methodinvoke shift 24
233 referencetype shift 82
233 fieldaccess shift 29
196 STRINGLIT reduce 16
102 LBRACK reduce 44
128 referencetype shift 82
24 COMMA reduce 128
208 NEW shift 30
117 classcreateexpr shift 18
99 ABSTRACT reduce 89
217 assign shift 83
186 BYTE reduce 119
26 LBRACK reduce 71
158 RETURN reduce 14
79 SEMI reduce 50
80 INT reduce 123
99 methoddecl shift 84
200 CHARLIT reduce 136
169 retstmnt shift 3
23 ELSE reduce 42
100 CHARLIT reduce 122
155 expr shift 85
31 PUBLIC reduce 90
190 RPAREN reduce 3
89 condexpr shift 13
57 EOF reduce 60
41 name shift 46
210 VOID reduce 75
113 RPAREN shift 86
89 assignexpr shift 58
177 BOOLEAN reduce 85
186 BOOLLIT reduce 119
9 ID reduce 91
124 name shift 46
1 NEW shift 30
95 literal shift 7
187 arrayaccess shift 49
155 BOOLLIT shift 34
106 classcreateexpr shift 45
126 BOOLEAN reduce 17
121 primary shift 19
233 INT shift 55
211 IF shift 69
53 ID reduce 94
180 IF reduce 53
211 ID shift 44
180 ID reduce 53
54 CHAR reduce 164
138 RETURN reduce 15
84 ID reduce 40
138 RBRACE reduce 15
30 numerictype shift 32
77 ID reduce 36
187 arraycreate shift 35
178 ABSTRACT shift 87
155 methodinvoke shift 47
196 WHILE reduce 16
165 NATIVE reduce 21
121 condexpr shift 13
207 PROTECTED reduce 26
158 STATIC reduce 14
110 CHAR reduce 84
6 primnoarray shift 11
126 NULL reduce 17
61 STRINGLIT reduce 125
117 stmntwotrail shift 88
54 RETURN reduce 164
195 RETURN shift 1
27 LPAREN shift 89
140 FINAL reduce 45
88 THIS reduce 122
97 EOF reduce 100
180 INTLIT reduce 53
105 BYTE reduce 87
217 NEW shift 30
111 COMMA reduce 131
193 RPAREN shift 90
238 BOOLEAN reduce 20
208 primnoarray shift 11
207 FINAL reduce 26
155 LPAREN shift 6
4 ELSE reduce 132
84 NATIVE reduce 40
201 primary shift 19
142 BOOLLIT shift 34
41 simplename shift 9
152 NATIVE reduce 61
233 lefthand shift 2
76 THIS reduce 126
134 INT reduce 77
126 CHARLIT reduce 17
88 NEW reduce 122
22 methodinvoke shift 24
211 stmnt shift 91
196 CHARLIT reduce 16
194 LPAREN shift 92
1 INTLIT shift 36
186 ELSE reduce 119
230 COMMA reduce 1
133 primnoarray shift 11
73 assignexpr shift 58
170 BOOLEAN reduce 22
124 BOOLLIT shift 34
20 LBRACK reduce 110
124 qualifiedname shift 37
76 INTLIT reduce 126
200 CHAR reduce 136
169 simplename shift 9
167 expr shift 93
224 LBRACE reduce 35
140 SHORT reduce 45
30 SHORT shift 94
234 ifthenelse shift 64
50 LBRACK shift 95
100 INT reduce 122
49 LBRACK reduce 115
133 assignexpr shift 58
178 CLASS shift 96
181 STRINGLIT reduce 120
227 SEMI reduce 79
110 NATIVE reduce 84
225 RBRACE reduce 18
236 EOF reduce 63
77 LBRACE reduce 36
170 STATIC reduce 22
199 LBRACK reduce 82
217 retstmnt shift 3
176 SHORT reduce 74
3 SHORT reduce 135
23 FOR reduce 42
55 ID reduce 96
208 FOR shift 70
16 RBRACE reduce 133
87 VOID reduce 86
80 SHORT reduce 123
100 RETURN reduce 122
138 SHORT reduce 15
88 BYTE reduce 122
63 BOOLLIT reduce 54
1 NULL shift 14
169 assign shift 83
179 SHORT shift 94
3 WHILE reduce 135
44 LPAREN reduce 93
38 IMPORT reduce 62
208 numerictype shift 32
48 CHARLIT shift 52
108 SEMI shift 97
118 THIS reduce 13
95 expr shift 98
208 BYTE shift 53
84 VOID reduce 40
217 classcreateexpr shift 18
23 NEW reduce 42
217 literal shift 7
167 qualifiedname shift 37
217 stmntwotrail shift 88
6 arraycreate shift 35
142 NULL shift 14
42 classbodydecls shift 99
124 arraycreate shift 35
58 RPAREN reduce 43
89 STRINGLIT shift 26
208 LPAREN shift 6
208 stmntwotrail shift 100
84 FINAL reduce 40
208 referencetype shift 82
110 CLASS reduce 84
143 ID reduce 8
100 BYTE reduce 122
110 BYTE reduce 84
16 SEMI reduce 133
196 NEW reduce 16
117 name shift 46
95 THIS shift 20
188 ID shift 101
238 STATIC reduce 20
42 ABSTRACT reduce 23
117 for shift 76
186 INTLIT reduce 119
41 THIS shift 20
238 PROTECTED reduce 20
6 literal shift 7
1 LPAREN shift 6
176 FOR reduce 74
185 ID shift 102
233 BYTE shift 53
117 retstmnt shift 3
106 NEW shift 30
87 INTERFACE reduce 86
134 FINAL reduce 77
233 arraycreate shift 35
58 RBRACK reduce 43
155 arrayaccess shift 49
23 ID reduce 42
23 IF reduce 42
78 SEMI shift 103
65 stmntexprlst shift 104
155 primary shift 19
234 WHILE shift 27
91 LPAREN reduce 47
31 STATIC reduce 90
87 ID reduce 86
177 NATIVE reduce 85
108 DOT shift 21
187 simplename shift 9
121 INTLIT shift 36
167 LPAREN shift 6
22 stmntwotrail shift 100
152 ABSTRACT reduce 61
169 FOR shift 70
178 FINAL shift 105
118 INTLIT reduce 13
142 assign shift 5
177 CHAR reduce 85
187 qualifiedname shift 37
17 LPAREN shift 106
10 BOOLEAN reduce 134
176 NEW reduce 74
84 RBRACE reduce 40
176 RETURN reduce 74
180 NEW reduce 53
138 THIS reduce 15
63 CHAR reduce 54
210 PUBLIC reduce 75
233 forinit shift 107
214 BYTE reduce 39
206 name shift 108
177 PROTECTED reduce 85
94 LBRACK reduce 95
180 BOOLEAN reduce 53
105 STATIC reduce 87
1 THIS shift 20
65 BOOLLIT shift 34
217 fornoshort shift 109
31 NATIVE reduce 90
23 RBRACE reduce 42
199 RBRACE reduce 82
178 PROTECTED shift 110
124 primnoarray shift 11
133 primary shift 19
155 INTLIT shift 36
138 LPAREN reduce 15
50 DOT shift 21
124 assign shift 5
106 arrayaccess shift 49
61 CHARLIT reduce 125
48 stmntexpr shift 111
133 BOOLLIT shift 34
41 assignexpr shift 58
201 RPAREN reduce 1
138 LBRACE reduce 15
65 arraycreate shift 35
57 ABSTRACT reduce 60
225 SEMI reduce 18
180 CHARLIT reduce 53
23 LBRACE reduce 42
124 CHARLIT shift 52
211 assign shift 83
183 SEMI reduce 49
64 STRINGLIT reduce 124
158 CHARLIT reduce 14
200 BYTE reduce 136
233 name shift 17
124 NULL shift 14
142 literal shift 7
210 ID reduce 75
189 EOF reduce 98
106 STRINGLIT shift 26
61 IF reduce 125
6 arrayaccess shift 49
217 ifthenelse shift 64
0 BOF shift 112
175 arraycreate shift 35
61 ID reduce 125
121 primnoarray shift 11
80 STRINGLIT reduce 123
48 STRINGLIT shift 26
169 LPAREN shift 6
211 fieldaccess shift 29
142 assignexpr shift 58
99 PROTECTED reduce 89
233 stmntexpr shift 43
106 NULL shift 14
3 RBRACE reduce 135
158 PUBLIC reduce 14
117 whilenoshort shift 12
52 LBRACK reduce 70
65 methodinvoke shift 24
88 SEMI reduce 122
200 RETURN reduce 136
163 LBRACK reduce 5
195 classcreateexpr shift 18
92 param shift 60
123 CHAR reduce 83
22 stmntexpr shift 68
169 INTLIT shift 36
1 CHARLIT shift 52
92 params shift 113
234 ID shift 44
76 NEW reduce 126
191 SHORT reduce 88
234 IF shift 114
89 fieldaccess shift 29
169 ifthenelsenoshort shift 25
148 LBRACE reduce 33
233 numerictype shift 32
207 BYTE reduce 26
95 methodinvoke shift 47
201 expr shift 115
38 CLASS reduce 62
187 THIS shift 20
92 name shift 116
207 PUBLIC reduce 26
84 STATIC reduce 40
230 expr shift 115
22 assign shift 83
212 ELSE shift 117
6 STRINGLIT shift 26
196 CHAR reduce 16
170 ABSTRACT reduce 22
2 BECOME shift 118
63 FOR reduce 54
189 CLASS reduce 98
60 COMMA reduce 103
3 BOOLLIT reduce 135
191 INT reduce 88
181 SEMI reduce 120
181 INTLIT reduce 120
117 THIS shift 20
41 INTLIT shift 36
162 constructordeclor shift 119
87 CLASS reduce 86
92 arraytype shift 120
40 COMMA shift 121
117 assign shift 83
110 INT reduce 84
230 THIS shift 20
187 STRINGLIT shift 26
167 arraycreate shift 35
84 CHAR reduce 40
10 INTLIT reduce 134
160 COMMA shift 122
162 PUBLIC shift 123
22 emptystmnt shift 16
207 ABSTRACT reduce 26
233 THIS shift 20
30 ID shift 44
22 IF shift 69
152 PROTECTED reduce 61
95 assignexpr shift 58
10 LBRACE reduce 134
195 arraycreate shift 35
42 INT reduce 23
217 CHARLIT shift 52
175 arrayaccess shift 49
64 SEMI reduce 124
83 SEMI reduce 127
155 ID shift 44
16 BOOLEAN reduce 133
230 assign shift 5
155 NEW shift 30
117 INTLIT shift 36
107 SEMI shift 124
216 RPAREN reduce 10
230 lefthand shift 2
230 literal shift 7
169 name shift 46
196 IF reduce 16
176 BOOLEAN reduce 74
22 primnoarray shift 11
196 ID reduce 16
16 CHAR reduce 133
170 INT reduce 22
112 IMPORT reduce 99
96 ID shift 125
95 ID shift 44
133 THIS shift 20
222 DOT reduce 91
195 primnoarray shift 11
48 assign shift 83
158 NULL reduce 14
25 ELSE reduce 57
60 RPAREN reduce 103
80 CHAR reduce 123
54 INT reduce 164
42 STATIC reduce 23
141 LBRACE shift 126
134 CHAR reduce 77
165 PUBLIC reduce 21
170 VOID reduce 22
65 qualifiedname shift 37
207 VOID reduce 26
162 BOOLEAN shift 127
152 FINAL reduce 61
97 PUBLIC reduce 100
105 INT reduce 87
38 ABSTRACT reduce 62
88 RBRACE reduce 122
234 exprstmnt shift 10
89 arrayaccess shift 49
80 SEMI reduce 123
234 qualifiedname shift 37
175 CHARLIT shift 52
88 FOR reduce 122
236 PUBLIC reduce 63
76 BYTE reduce 126
105 CHAR reduce 87
58 COMMA reduce 43
57 CLASS reduce 60
169 SEMI shift 23
211 exprstmnt shift 10
23 STRINGLIT reduce 42
78 FINAL reduce 89
80 INTLIT reduce 123
214 RBRACE reduce 39
137 BECOME reduce 4
57 SEMI reduce 60
87 BYTE reduce 86
170 SHORT reduce 22
22 ID shift 44
14 LBRACK reduce 72
208 LBRACE shift 126
117 BOOLLIT shift 34
220 DOT reduce 81
49 BECOME reduce 67
22 block shift 4
123 STATIC reduce 83
175 LPAREN shift 6
205 PUBLIC reduce 76
91 LBRACE reduce 47
233 INTLIT shift 36
128 BOOLEAN shift 127
222 LPAREN shift 128
181 CHARLIT reduce 120
61 WHILE reduce 125
38 STATIC reduce 62
1 STRINGLIT shift 26
54 LPAREN reduce 164
3 BYTE reduce 135
179 qualifiedname shift 37
42 FINAL reduce 23
215 SEMI reduce 73
88 STRINGLIT reduce 122
186 THIS reduce 119
155 literal shift 7
118 BOOLLIT reduce 13
116 LBRACK shift 129
42 BOOLEAN reduce 23
73 methodinvoke shift 47
234 lefthand shift 2
225 RETURN reduce 18
233 arraytype shift 120
100 CHAR reduce 122
78 STATIC reduce 89
207 BOOLEAN reduce 26
24 RBRACE reduce 128
126 SEMI reduce 17
43 COMMA reduce 130
95 NEW shift 30
16 RETURN reduce 133
140 RBRACE reduce 45
217 block shift 4
65 LPAREN shift 6
134 BOOLEAN reduce 77
59 LBRACK reduce 159
201 COMMA reduce 1
189 PUBLIC reduce 98
180 NULL reduce 53
48 fieldaccess shift 29
176 NULL reduce 74
10 SHORT reduce 134
217 ifthenelsenoshort shift 25
21 ID shift 101
1 arraycreate shift 35
140 ABSTRACT reduce 45
225 ID reduce 18
225 IF reduce 18
65 primary shift 19
220 RBRACE reduce 81
1 BOOLLIT shift 34
54 WHILE reduce 164
151 LBRACK reduce 160
187 ID shift 44
23 RETURN reduce 42
191 BOOLEAN reduce 88
208 SEMI shift 23
208 for shift 76
37 LBRACK reduce 92
80 BOOLLIT reduce 123
195 LBRACE shift 126
217 stmntnoshort shift 130
126 STRINGLIT reduce 17
37 LBRACE reduce 92
147 methoddeclor shift 131
169 block shift 4
15 LBRACK shift 132
201 primnoarray shift 11
112 EOF reduce 99
205 FINAL reduce 76
23 BYTE reduce 42
10 CHAR reduce 134
128 name shift 116
106 primary shift 19
217 arrayaccess shift 49
11 LBRACK shift 133
184 LBRACE reduce 34
166 SEMI reduce 157
191 ID reduce 88
165 PROTECTED reduce 21
179 BYTE shift 53
103 EOF reduce 142
204 ABSTRACT reduce 24
30 BOOLEAN shift 127
165 ABSTRACT reduce 21
63 SEMI reduce 54
141 methodbody shift 134
204 STATIC reduce 24
55 LBRACK reduce 96
59 RPAREN reduce 159
230 primnoarray shift 11
179 CHAR shift 51
124 assignexpr shift 58
133 LPAREN shift 6
24 DOT reduce 114
65 lefthand shift 2
42 NATIVE reduce 23
216 RBRACE reduce 10
106 assign shift 5
13 SEMI reduce 11
216 RBRACK reduce 10
211 NULL shift 14
230 arrayaccess shift 49
217 for shift 76
175 BOOLLIT shift 34
199 COMMA reduce 82
87 SHORT reduce 86
16 BOOLLIT reduce 133
180 INT reduce 53
121 arraycreate shift 35
238 VOID reduce 20
180 CHAR reduce 53
91 SHORT reduce 47
208 INTLIT shift 36
22 CHARLIT shift 52
179 BOOLEAN shift 127
88 BOOLEAN reduce 122
200 SHORT reduce 136
10 FOR reduce 134
1 assignexpr shift 58
64 INTLIT reduce 124
65 CHARLIT shift 52
1 qualifiedname shift 37
88 ELSE reduce 56
41 STRINGLIT shift 26
177 ID reduce 85
45 LBRACK reduce 112
100 INTLIT reduce 122
176 BYTE reduce 74
83 RBRACE reduce 127
191 INTERFACE reduce 88
181 INT reduce 120
217 THIS shift 20
65 RBRACE reduce 51
6 LPAREN shift 6
196 LBRACE reduce 16
48 qualifiedname shift 37
224 name shift 135
198 LBRACE shift 136
88 LBRACE reduce 122
175 literal shift 7
169 fornoshort shift 109
22 literal shift 7
146 COMMA reduce 159
128 simplename shift 9
4 LPAREN reduce 132
73 condexpr shift 13
196 INT reduce 16
4 BOOLLIT reduce 132
106 CHARLIT shift 52
95 primary shift 19
12 ELSE reduce 58
195 literal shift 7
219 ID shift 44
89 NULL shift 14
76 RETURN reduce 126
48 lefthand shift 2
217 primnoarray shift 11
123 VOID reduce 83
41 condexpr shift 13
61 INTLIT reduce 125
195 emptystmnt shift 16
170 RBRACE reduce 22
237 RPAREN reduce 104
165 CHAR reduce 21
22 INTLIT shift 36
124 methodinvoke shift 47
200 ELSE reduce 136
205 ID reduce 76
233 methodinvoke shift 24
16 ID reduce 133
16 IF reduce 133
210 PROTECTED reduce 75
76 CHAR reduce 126
233 qualifiedname shift 37
169 arraycreate shift 35
179 simplename shift 9
65 THIS shift 20
234 NULL shift 14
177 INT reduce 85
75 RBRACK shift 137
173 PROTECTED reduce 121
20 DOT reduce 110
233 literal shift 7
87 FINAL reduce 86
175 assign shift 5
101 ID reduce 116
61 SHORT reduce 125
169 qualifiedname shift 37
162 ABSTRACT shift 87
3 CHAR reduce 135
22 arraycreate shift 35
162 PROTECTED shift 110
41 NULL shift 14
95 primnoarray shift 11
233 STRINGLIT shift 26
181 CHAR reduce 120
167 BOOLLIT shift 34
211 NEW shift 30
110 VOID reduce 84
208 localvardeclstmnt shift 138
88 ID reduce 122
208 block shift 4
211 lefthand shift 2
88 IF reduce 122
128 params shift 139
97 PROTECTED reduce 100
187 INTLIT shift 36
133 condexpr shift 13
126 LBRACE reduce 17
117 emptystmnt shift 16
200 FOR reduce 136
92 COMMA reduce 102
152 CLASS reduce 61
234 primnoarray shift 11
29 DOT reduce 113
152 PUBLIC reduce 61
170 ID reduce 22
208 ifthen shift 80
222 ID reduce 91
30 INT shift 55
10 BYTE reduce 134
217 stmntexpr shift 68
65 assign shift 83
67 ID shift 59
196 LPAREN reduce 16
160 SEMI shift 140
196 SEMI reduce 16
142 arrayaccess shift 49
124 primary shift 19
134 NATIVE reduce 77
99 methodhead shift 141
135 DOT shift 21
189 STATIC reduce 98
163 BECOME reduce 5
22 retstmnt shift 3
63 RBRACE reduce 54
33 EOF reduce 64
230 primary shift 19
54 NULL reduce 164
105 PUBLIC reduce 87
46 LBRACK shift 142
76 FOR reduce 126
204 INT reduce 24
189 FINAL reduce 98
231 SEMI reduce 162
205 NATIVE reduce 76
204 NATIVE reduce 24
132 RBRACK shift 143
91 SEMI reduce 47
238 ABSTRACT reduce 20
187 condexpr shift 13
89 classcreateexpr shift 45
100 SEMI reduce 122
121 arrayaccess shift 49
234 stmntwotrail shift 88
206 qualifiedname shift 37
106 expr shift 115
78 ABSTRACT reduce 89
230 LPAREN shift 6
6 INTLIT shift 36
165 RBRACE reduce 21
99 PUBLIC reduce 89
41 variableinit shift 144
4 THIS reduce 132
195 retstmnt shift 3
151 RPAREN reduce 160
124 expr shift 145
147 ID shift 146
186 CHAR reduce 119
106 arraycreate shift 35
73 assign shift 5
89 primary shift 19
106 literal shift 7
48 classcreateexpr shift 18
110 FINAL reduce 84
155 NULL shift 14
158 ABSTRACT reduce 14
200 STRINGLIT reduce 136
236 IMPORT reduce 63
181 RBRACE reduce 120
162 type shift 147
37 SEMI reduce 92
100 WHILE reduce 122
117 primnoarray shift 11
44 ID reduce 93
238 CHAR reduce 20
158 SHORT reduce 14
121 classcreateexpr shift 45
5 RPAREN reduce 12
230 ID shift 44
84 PUBLIC reduce 40
217 LBRACE shift 126
142 primnoarray shift 11
156 name shift 148
16 WHILE reduce 133
64 RBRACE reduce 124
89 CHARLIT shift 52
158 SEMI reduce 14
234 whilenoshort shift 12
208 literal shift 7
54 SEMI reduce 164
78 PROTECTED reduce 89
117 stmntnoshort shift 149
65 literal shift 7
152 SEMI reduce 61
167 lefthand shift 2
139 RPAREN shift 150
195 while shift 61
100 LBRACE reduce 122
42 PROTECTED reduce 23
115 COMMA reduce 2
155 THIS shift 20
59 SEMI reduce 159
208 arraytype shift 120
180 WHILE reduce 53
220 COMMA reduce 81
6 THIS shift 20
175 simplename shift 9
234 THIS shift 20
61 THIS reduce 125
162 INT shift 55
217 arraycreate shift 35
175 assignexpr shift 58
76 RBRACE reduce 126
140 PUBLIC reduce 45
174 RBRACK shift 151
117 stmntexpr shift 68
234 simplename shift 9
126 RBRACE reduce 17
30 CHAR shift 51
1 arrayaccess shift 49
134 STATIC reduce 77
105 NATIVE reduce 87
10 NEW reduce 134
200 BOOLEAN reduce 136
200 IF reduce 136
128 BYTE shift 53
46 BECOME reduce 65
44 BECOME reduce 93
236 INTERFACE reduce 63
92 ID shift 44
87 NATIVE reduce 86
200 ID reduce 136
88 CHARLIT reduce 122
48 ID shift 44
204 ID reduce 24
186 IF reduce 119
151 COMMA reduce 160
78 importdecl shift 152
186 ID reduce 119
112 file shift 153
22 ifthenelse shift 64
180 LPAREN reduce 53
232 EOF reduce 46
211 arrayaccess shift 49
99 INT reduce 89
97 SEMI reduce 100
180 BOOLLIT reduce 53
217 INTLIT shift 36
206 ID shift 44
40 RPAREN shift 154
225 BOOLEAN reduce 18
76 BOOLEAN reduce 126
140 BOOLEAN reduce 45
95 CHARLIT shift 52
233 classcreateexpr shift 18
89 methodinvoke shift 47
119 LBRACE shift 126
100 BOOLLIT reduce 122
225 SHORT reduce 18
41 BOOLLIT shift 34
123 ABSTRACT reduce 83
4 INTLIT reduce 132
234 arraycreate shift 35
80 NULL reduce 123
124 STRINGLIT shift 26
201 NEW shift 30
175 lefthand shift 2
114 LPAREN shift 155
205 CHAR reduce 76
152 EOF reduce 61
9 LBRACK reduce 91
73 fieldaccess shift 29
217 name shift 46
201 name shift 46
84 BOOLEAN reduce 40
125 EXTENDS shift 156
230 NEW shift 30
211 THIS shift 20
217 ifthen shift 80
187 CHARLIT shift 52
211 STRINGLIT shift 26
61 NULL reduce 125
184 interfaces shift 157
208 SHORT shift 94
234 emptystmnt shift 16
170 BYTE reduce 22
180 SEMI reduce 53
9 LBRACE reduce 91
234 name shift 46
169 primnoarray shift 11
162 name shift 116
211 retstmnt shift 3
208 RETURN shift 1
101 LPAREN reduce 116
3 INT reduce 135
208 RBRACE shift 158
201 condexpr shift 13
219 simplename shift 9
176 LBRACE reduce 74
121 lefthand shift 2
10 SEMI reduce 134
230 NULL shift 14
31 INT reduce 90
133 qualifiedname shift 37
207 ID reduce 26
173 NATIVE reduce 121
186 WHILE reduce 119
158 BOOLLIT reduce 14
117 while shift 61
105 VOID reduce 87
211 LBRACE shift 126
10 RBRACE reduce 134
176 INT reduce 74
59 COMMA reduce 159
181 BOOLEAN reduce 120
142 expr shift 75
169 fieldaccess shift 29
37 BECOME reduce 92
179 INT shift 55
211 arraycreate shift 35
76 NULL reduce 126
208 type shift 159
224 qualifiedname shift 37
8 DOT reduce 6
214 SHORT reduce 39
26 DOT reduce 71
158 VOID reduce 14
37 IMPLEMENTS reduce 92
162 ID shift 44
92 BOOLEAN shift 127
63 INT reduce 54
89 lefthand shift 2
173 FINAL reduce 121
117 primary shift 19
158 ELSE reduce 14
110 ID reduce 84
134 PUBLIC reduce 77
88 WHILE reduce 122
7 LBRACK reduce 109
73 THIS shift 20
124 lefthand shift 2
140 STATIC reduce 45
64 LPAREN reduce 124
225 INTLIT reduce 18
128 arraytype shift 120
147 variabledeclors shift 160
117 fieldaccess shift 29
144 SEMI reduce 158
65 primnoarray shift 11
95 fieldaccess shift 29
201 LPAREN shift 6
63 CHARLIT reduce 54
63 WHILE reduce 54
76 CHARLIT reduce 126
41 methodinvoke shift 47
217 IF shift 114
22 LBRACE shift 126
166 COMMA reduce 157
217 ID shift 44
48 THIS shift 20
233 SHORT shift 94
6 name shift 46
195 stmntwotrail shift 100
91 BOOLEAN reduce 47
63 ID reduce 54
57 PROTECTED reduce 60
97 NATIVE reduce 100
195 INTLIT shift 36
63 IF reduce 54
175 fieldaccess shift 29
65 INTLIT shift 36
208 STRINGLIT shift 26
41 literal shift 7
177 INTERFACE reduce 85
23 INT reduce 42
73 CHARLIT shift 52
91 RBRACE reduce 47
117 FOR shift 70
225 LBRACE reduce 18
186 FOR reduce 119
200 RBRACE reduce 136
41 expr shift 161
142 simplename shift 9
63 SHORT reduce 54
155 classcreateexpr shift 45
73 BOOLLIT shift 34
105 BOOLEAN reduce 87
91 NULL reduce 47
123 CLASS reduce 83
186 STRINGLIT reduce 119
165 FINAL reduce 21
211 stmntexpr shift 68
87 PROTECTED reduce 86
117 qualifiedname shift 37
167 assign shift 5
207 NATIVE reduce 26
158 STRINGLIT reduce 14
233 NULL shift 14
200 LPAREN reduce 136
124 literal shift 7
138 INT reduce 15
101 BECOME reduce 116
102 BECOME reduce 44
101 DOT reduce 116
84 BYTE reduce 40
110 STATIC reduce 84
217 STRINGLIT shift 26
99 modifiers shift 162
131 SEMI reduce 78
208 CHAR shift 51
233 primary shift 19
63 NEW reduce 54
64 THIS reduce 124
87 CHAR reduce 86
10 BOOLLIT reduce 134
80 FOR reduce 123
186 BOOLEAN reduce 119
73 NEW shift 30
41 ID shift 44
199 DOT reduce 82
233 BOOLLIT shift 34
54 CHARLIT reduce 164
168 RBRACK shift 163
88 NULL reduce 122
89 BOOLLIT shift 34
205 BYTE reduce 76
57 FINAL reduce 60
214 STATIC reduce 39
151 SEMI reduce 160
112 SEMI reduce 99
162 FINAL shift 105
208 classcreateexpr shift 18
179 arraytype shift 120
208 localvardecl shift 164
48 name shift 46
99 staticinit shift 165
175 qualifiedname shift 37
210 STATIC reduce 75
220 SEMI reduce 81
117 lefthand shift 2
196 RETURN reduce 16
208 IF shift 69
208 ID shift 44
45 DOT reduce 112
196 SHORT reduce 16
112 INTERFACE reduce 99
179 primitivetype shift 15
169 stmntexpr shift 68
59 BECOME reduce 159
165 STATIC reduce 21
203 EOF reduce 140
205 PROTECTED reduce 76
63 LPAREN reduce 54
92 primitivetype shift 15
196 BOOLLIT reduce 16
204 BYTE reduce 24
128 primitivetype shift 15
73 NULL shift 14
204 PUBLIC reduce 24
133 literal shift 7
41 arrayaccess shift 49
189 PROTECTED reduce 98
43 RBRACE reduce 130
3 RETURN reduce 135
48 arrayaccess shift 49
74 RPAREN reduce 101
159 variabledeclid shift 166
1 literal shift 7
158 THIS reduce 14
28 ELSE reduce 165
217 exprstmnt shift 10
72 LPAREN shift 167
234 assign shift 83
138 BOOLLIT reduce 15
150 LBRACE reduce 27
162 modifier shift 31
138 CHARLIT reduce 15
135 ID reduce 38
34 LBRACK reduce 69
238 RBRACE reduce 20
18 SEMI reduce 129
117 RETURN shift 1
14 DOT reduce 72
133 expr shift 168
206 simplename shift 9
123 BYTE reduce 83
217 qualifiedname shift 37
161 SEMI reduce 163
23 INTLIT reduce 42
211 FOR shift 70
97 ABSTRACT reduce 100
73 literal shift 7
85 RPAREN shift 169
205 RBRACE reduce 76
217 NULL shift 14
181 WHILE reduce 120
180 FOR reduce 53
99 constructordecl shift 170
211 WHILE shift 72
7 DOT reduce 109
64 RETURN reduce 124
175 primary shift 19
118 STRINGLIT reduce 13
89 assign shift 5
117 LBRACE shift 126
204 FINAL reduce 24
155 qualifiedname shift 37
80 NEW reduce 123
169 methodinvoke shift 24
205 ABSTRACT reduce 76
18 RBRACE reduce 129
208 primitivetype shift 15
16 LPAREN reduce 133
87 STATIC reduce 86
169 WHILE shift 27
3 ID reduce 135
117 literal shift 7
3 IF reduce 135
195 for shift 76
217 BOOLLIT shift 34
47 LBRACK reduce 114
158 INTLIT reduce 14
3 THIS reduce 135
179 type shift 67
38 INTERFACE reduce 62
201 fieldaccess shift 29
121 literal shift 7
95 assign shift 5
167 NULL shift 14
42 ID reduce 23
177 STATIC reduce 85
175 RBRACK shift 171
1 primary shift 19
43 SEMI reduce 130
16 ELSE reduce 133
201 STRINGLIT shift 26
133 INTLIT shift 36
187 assign shift 5
5 COMMA reduce 12
207 STATIC reduce 26
117 STRINGLIT shift 26
10 LPAREN reduce 134
76 STRINGLIT reduce 126
42 VOID reduce 23
41 qualifiedname shift 37
4 WHILE reduce 132
224 simplename shift 9
92 INT shift 55
41 CHARLIT shift 52
134 PROTECTED reduce 77
10 ELSE reduce 134
97 CLASS reduce 100
159 variabledeclor shift 172
177 BYTE reduce 85
100 RBRACE reduce 122
195 ifthen shift 80
54 NEW reduce 164
24 SEMI reduce 128
196 BOOLEAN reduce 16
155 STRINGLIT shift 26
238 SHORT reduce 20
91 CHARLIT reduce 47
64 CHARLIT reduce 124
105 CLASS reduce 87
38 EOF reduce 62
162 qualifiedname shift 37
129 RBRACK shift 171
4 BYTE reduce 132
6 NEW shift 30
31 CHAR reduce 90
230 STRINGLIT shift 26
38 NATIVE reduce 62
147 variabledeclid shift 166
142 condexpr shift 13
154 SEMI reduce 41
62 SEMI shift 173
213 DOT reduce 7
3 ELSE reduce 135
200 SEMI reduce 136
140 CHAR reduce 45
175 STRINGLIT shift 26
64 CHAR reduce 124
166 LBRACK shift 174
196 RBRACE reduce 16
16 FOR reduce 133
179 ID shift 44
23 BOOLEAN reduce 42
138 BYTE reduce 15
73 classcreateexpr shift 45
214 ID reduce 39
121 fieldaccess shift 29
208 emptystmnt shift 16
167 arrayaccess shift 49
16 INTLIT reduce 133
18 LBRACK reduce 112
217 fieldaccess shift 29
156 simplename shift 9
17 LBRACK shift 175
133 CHARLIT shift 52
170 CHAR reduce 22
138 ID reduce 15
229 EOF reduce 141
91 IF reduce 47
138 IF reduce 15
158 BYTE reduce 14
65 NEW shift 30
91 ID reduce 47
31 CLASS reduce 90
95 NULL shift 14
91 NEW reduce 47
187 literal shift 7
175 INTLIT shift 36
22 THIS shift 20
22 NULL shift 14
54 FOR reduce 164
167 condexpr shift 13
81 ID reduce 37
86 SEMI reduce 80
121 STRINGLIT shift 26
95 simplename shift 9
126 SHORT reduce 17
176 THIS reduce 74
10 INT reduce 134
164 SEMI shift 176
78 INTERFACE reduce 89
64 IF reduce 124
92 referencetype shift 82
110 ABSTRACT reduce 84
44 SEMI reduce 93
64 ID reduce 124
178 STATIC shift 177
78 modifiers shift 178
124 ID shift 44
177 ABSTRACT reduce 85
106 assignexpr shift 58
111 SEMI reduce 131
64 BYTE reduce 124
125 LBRACE reduce 32
214 NATIVE reduce 39
6 condexpr shift 13
10 STRINGLIT reduce 134
18 DOT reduce 112
117 fornoshort shift 109
104 RBRACE reduce 52
139 COMMA shift 179
57 NATIVE reduce 60
169 for shift 76
204 SHORT reduce 24
167 THIS shift 20
10 IF reduce 134
35 DOT reduce 106
10 ID reduce 134
210 BOOLEAN reduce 75
191 CHAR reduce 88
1 primnoarray shift 11
211 while shift 61
187 primary shift 19
169 stmnt shift 180
128 RPAREN reduce 102
22 fieldaccess shift 29
208 ifthenelse shift 64
147 variabledeclor shift 172
38 PUBLIC reduce 62
30 simplename shift 9
169 IF shift 114
99 CHAR reduce 89
169 ID shift 44
66 SEMI shift 181
187 methodinvoke shift 47
233 SEMI reduce 48
30 primitivetype shift 182
233 stmntexprlst shift 183
92 SHORT shift 94
106 LPAREN shift 6
1 ID shift 44
217 lefthand shift 2
214 FINAL reduce 39
217 primary shift 19
4 IF reduce 132
217 emptystmnt shift 16
91 INTLIT reduce 47
125 super shift 184
169 LBRACE shift 126
19 DOT shift 185
181 IF reduce 120
181 ID reduce 120
126 ID reduce 17
4 ID reduce 132
126 IF reduce 17
134 ABSTRACT reduce 77
13 COMMA reduce 11
124 classcreateexpr shift 45
22 while shift 61
54 STRINGLIT reduce 164
31 SHORT reduce 90
80 WHILE reduce 123
189 IMPORT reduce 98
235 COMMA shift 121
51 LBRACK reduce 97
137 DOT reduce 4
210 ABSTRACT reduce 75
165 ID reduce 21
133 NEW shift 30
128 SHORT shift 94
121 THIS shift 20
80 RBRACE reduce 123
191 ABSTRACT reduce 88
63 NULL reduce 54
57 INTERFACE reduce 60
195 THIS shift 20
181 NULL reduce 120
23 SHORT reduce 42
3 STRINGLIT reduce 135
49 DOT reduce 115
48 methodinvoke shift 24
121 LPAREN shift 6
22 stmnt shift 63
112 ABSTRACT reduce 99
216 SEMI reduce 10
195 fieldaccess shift 29
158 LBRACE reduce 14
102 DOT reduce 44
217 LPAREN shift 6
175 ID shift 44
80 RETURN reduce 123
142 classcreateexpr shift 45
23 THIS reduce 42
196 THIS reduce 16
65 name shift 46
124 condexpr shift 13
201 BOOLLIT shift 34
195 arrayaccess shift 49
61 BOOLLIT reduce 125
32 ID reduce 107
211 ifthenelse shift 64
228 EOF reduce 19
162 SHORT shift 94
158 FINAL reduce 14
158 FOR reduce 14
73 primary shift 19
173 INTERFACE reduce 121
152 IMPORT reduce 61
3 CHARLIT reduce 135
121 ID shift 44
41 primary shift 19
90 LBRACK reduce 111
126 FOR reduce 17
165 BYTE reduce 21
52 DOT reduce 70
176 STRINGLIT reduce 74
16 NEW reduce 133
10 CHARLIT reduce 134
95 name shift 46
1 SEMI shift 186
2 assignop shift 187
1 fieldaccess shift 29
126 INTLIT reduce 17
191 FINAL reduce 88
62 DOT shift 188
87 ABSTRACT reduce 86
65 simplename shift 9
10 NULL reduce 134
80 CHARLIT reduce 123
118 ID reduce 13
74 LBRACK shift 174
211 methodinvoke shift 24
100 NEW reduce 122
146 LPAREN shift 92
63 INTLIT reduce 54
5 RBRACK reduce 12
238 INT reduce 20
173 PUBLIC reduce 121
5 RBRACE reduce 12
218 SEMI shift 189
173 EOF reduce 121
95 qualifiedname shift 37
201 NULL shift 14
169 while shift 61
169 NEW shift 30
89 primnoarray shift 11
5 SEMI reduce 12
97 INTERFACE reduce 100
133 methodinvoke shift 47
195 stmnt shift 54
214 PUBLIC reduce 39
120 ID reduce 118
191 PROTECTED reduce 88
238 ID reduce 20
225 STRINGLIT reduce 18
84 ABSTRACT reduce 40
121 expr shift 190
186 LBRACE reduce 119
155 assignexpr shift 58
57 PUBLIC reduce 60
201 ID shift 44
178 NATIVE shift 191
234 literal shift 7
210 CHAR reduce 75
189 SEMI reduce 98
169 literal shift 7
117 methodinvoke shift 24
167 ID shift 44
121 simplename shift 9
225 WHILE reduce 18
170 NATIVE reduce 22
186 RETURN reduce 119
162 STATIC shift 177
117 ifthenelsenoshort shift 25
91 INT reduce 47
140 BYTE reduce 45
41 lefthand shift 2
214 ABSTRACT reduce 39
61 LPAREN reduce 125
76 LBRACE reduce 126
126 CHAR reduce 17
48 NULL shift 14
95 arrayaccess shift 49
101 IMPLEMENTS reduce 116
78 NATIVE reduce 89
3 LBRACE reduce 135
236 CLASS reduce 63
234 while shift 61
31 BYTE reduce 90
169 stmntwotrail shift 88
95 classcreateexpr shift 45
195 stmntexpr shift 68
177 VOID reduce 85
195 SEMI shift 23
110 BOOLEAN reduce 84
98 RBRACK shift 192
11 DOT reduce 105
195 FOR shift 70
234 classcreateexpr shift 18
195 exprstmnt shift 10
88 SHORT reduce 122
169 primary shift 19
214 PROTECTED reduce 39
158 INT reduce 14
116 DOT shift 21
158 PROTECTED reduce 14
211 qualifiedname shift 37
37 ID reduce 92
17 ID reduce 117
217 while shift 61
201 assignexpr shift 58
236 NATIVE reduce 63
6 expr shift 193
179 numerictype shift 32
214 CHAR reduce 39
221 ID shift 194
6 classcreateexpr shift 45
34 DOT reduce 69
93 RPAREN shift 195
169 arrayaccess shift 49
146 SEMI reduce 159
167 methodinvoke shift 47
170 PROTECTED reduce 22
16 INT reduce 133
3 NULL reduce 135
99 SHORT reduce 89
225 FOR reduce 18
117 SEMI shift 23
211 BOOLLIT shift 34
233 ID shift 44
176 INTLIT reduce 74
208 stmnt shift 196
65 NULL shift 14
210 BYTE reduce 75
101 LBRACK reduce 116
201 simplename shift 9
186 CHARLIT reduce 119
101 LBRACE reduce 116
88 BOOLLIT reduce 122
9 BECOME reduce 91
41 LPAREN shift 6
195 assign shift 83
142 INTLIT shift 36
153 EOF shift 197
126 LPAREN reduce 17
39 extendsinterfaces shift 198
195 name shift 46
224 ID shift 44
48 arraycreate shift 35
162 arraytype shift 120
126 BYTE reduce 17
233 assign shift 83
106 BOOLLIT shift 34
177 FINAL reduce 85
22 STRINGLIT shift 26
3 LPAREN reduce 135
191 STATIC reduce 88
126 NEW reduce 17
204 RBRACE reduce 24
31 ID reduce 90
61 BYTE reduce 125
234 CHARLIT shift 52
142 STRINGLIT shift 26
191 NATIVE reduce 88
235 RPAREN shift 199
73 arrayaccess shift 49
128 qualifiedname shift 37
138 STRINGLIT reduce 15
179 referencetype shift 82
68 SEMI shift 200
204 CHAR reduce 24
6 assignexpr shift 58
78 PUBLIC reduce 89
234 LBRACE shift 126
196 NULL reduce 16
165 SHORT reduce 21
200 WHILE reduce 136
50 LPAREN shift 201
225 THIS reduce 18
76 WHILE reduce 126
169 exprstmnt shift 10
22 NEW shift 30
173 STATIC reduce 121
84 INT reduce 40
230 fieldaccess shift 29
121 assignexpr shift 58
187 NULL shift 14
211 emptystmnt shift 16
99 ID reduce 89
1 name shift 46
173 SEMI reduce 121
65 forupdate shift 202
23 WHILE reduce 42
78 classdecl shift 203
155 simplename shift 9
181 BYTE reduce 120
154 COMMA reduce 41
125 IMPLEMENTS reduce 32
95 INTLIT shift 36
158 RBRACE reduce 14
158 WHILE reduce 14
99 classbodydecl shift 204
216 COMMA reduce 10
141 SEMI shift 205
61 NEW reduce 125
46 LPAREN shift 106
211 LPAREN shift 6
76 SEMI reduce 126
231 COMMA reduce 162
65 STRINGLIT shift 26
117 arrayaccess shift 49
200 NEW reduce 136
237 COMMA reduce 104
214 VOID reduce 39
38 FINAL reduce 62
54 ID reduce 164
6 primary shift 19
123 SHORT reduce 83
123 PUBLIC reduce 83
54 IF reduce 164
180 RETURN reduce 53
73 STRINGLIT shift 26
208 BOOLLIT shift 34
225 CHAR reduce 18
89 THIS shift 20
172 SEMI reduce 161
4 LBRACE reduce 132
233 arrayaccess shift 49
236 STATIC reduce 63
208 simplename shift 9
192 DOT reduce 28
215 COMMA shift 122
167 STRINGLIT shift 26
112 PACKAGE shift 206
22 simplename shift 9
167 assignexpr shift 58
133 name shift 46
181 BOOLLIT reduce 120
118 CHARLIT reduce 13
134 VOID reduce 77
64 WHILE reduce 124
233 primnoarray shift 11
92 BYTE shift 53
13 RPAREN reduce 11
119 block shift 207
186 SEMI reduce 119
100 LPAREN reduce 122
186 SHORT reduce 119
91 RETURN reduce 47
211 literal shift 7
121 BOOLLIT shift 34
31 BOOLEAN reduce 90
169 ifthen shift 80
200 INT reduce 136
22 primary shift 19
10 RETURN reduce 134
233 type shift 159
208 retstmnt shift 3
146 BECOME reduce 159
126 blockstmnts shift 208
22 qualifiedname shift 37
73 expr shift 209
180 STRINGLIT reduce 53
83 COMMA reduce 127
191 PUBLIC reduce 88
95 arraycreate shift 35
141 block shift 210
202 RBRACE shift 211
80 THIS reduce 123
187 BOOLLIT shift 34
113 COMMA shift 179
91 THIS reduce 47
169 stmntnoshort shift 212
167 classcreateexpr shift 45
117 ID shift 44
238 PUBLIC reduce 20
4 CHARLIT reduce 132
162 NATIVE shift 191
176 RBRACE reduce 74
73 arraycreate shift 35
106 fieldaccess shift 29
31 INTERFACE reduce 90
178 PUBLIC shift 123
154 LBRACK reduce 41
211 ifthen shift 80
176 BOOLLIT reduce 74
110 SHORT reduce 84
117 IF shift 114
16 THIS reduce 133
23 LPAREN reduce 42
16 LBRACE reduce 133
50 dimexpr shift 213
181 NEW reduce 120
95 LPAREN shift 6
146 LBRACK reduce 159
208 stmntexpr shift 68
167 fieldaccess shift 29
61 CHAR reduce 125
106 simplename shift 9
234 arrayaccess shift 49
208 CHARLIT shift 52
73 qualifiedname shift 37
122 variabledeclid shift 166
99 fielddecl shift 214
117 ifthen shift 80
207 INT reduce 26
176 ID reduce 74
159 variabledeclors shift 215
187 assignexpr shift 216
176 IF reduce 74
158 LPAREN reduce 14
47 DOT reduce 114
109 ELSE reduce 59
61 INT reduce 125
238 NATIVE reduce 20
208 lefthand shift 2
208 THIS shift 20
165 BOOLEAN reduce 21
148 DOT shift 21
124 arrayaccess shift 49
170 FINAL reduce 22
41 assign shift 5
112 PUBLIC reduce 99
32 LBRACK reduce 107
209 RPAREN shift 217
208 methodinvoke shift 24
31 VOID reduce 90
156 qualifiedname shift 37
188 STAR shift 218
195 simplename shift 9
142 THIS shift 20
208 arraycreate shift 35
211 CHARLIT shift 52
133 lefthand shift 2
138 NEW reduce 15
78 IMPORT shift 219
123 NATIVE reduce 83
207 CHAR reduce 26
161 COMMA reduce 163
195 primary shift 19
210 FINAL reduce 75
142 name shift 46
22 exprstmnt shift 10
226 RPAREN shift 220
121 methodinvoke shift 47
73 simplename shift 9
64 SHORT reduce 124
142 arraycreate shift 35
162 VOID shift 221
41 classcreateexpr shift 45
158 BOOLEAN reduce 14
92 type shift 67
123 FINAL reduce 83
71 EOF reduce 25
134 BYTE reduce 77
208 assign shift 83
195 WHILE shift 72
167 INTLIT shift 36
112 CLASS reduce 99
29 BECOME reduce 66
175 methodinvoke shift 47
162 simplename shift 222
31 PROTECTED reduce 90
78 EOF reduce 139
105 ID reduce 87
234 BOOLLIT shift 34
61 BOOLEAN reduce 125
217 stmnt shift 180
57 STATIC reduce 60
89 expr shift 223
61 FOR reduce 125
1 lefthand shift 2
76 BOOLLIT reduce 126
236 SEMI reduce 63
42 CHAR reduce 23
6 NULL shift 14
77 interfacelist shift 224
207 RBRACE reduce 26
99 NATIVE reduce 89
142 qualifiedname shift 37
225 BYTE reduce 18
225 LPAREN reduce 18
138 BOOLEAN reduce 15
217 methodinvoke shift 24
140 VOID reduce 45
111 RBRACE reduce 131
140 NATIVE reduce 45
1 classcreateexpr shift 45
208 blockstmnt shift 225
227 LBRACE reduce 79
88 RETURN reduce 122
92 simplename shift 9
204 VOID reduce 24
76 SHORT reduce 126
230 classcreateexpr shift 45
148 IMPLEMENTS reduce 33
133 simplename shift 9
6 simplename shift 9
181 SHORT reduce 120
195 STRINGLIT shift 26
100 STRINGLIT reduce 122
38 SEMI reduce 62
234 NEW shift 30
64 LBRACE reduce 124
57 IMPORT reduce 60
78 CLASS reduce 89
176 SEMI reduce 74
211 stmntwotrail shift 100
204 BOOLEAN reduce 24
74 COMMA reduce 101
126 WHILE reduce 17
106 arglist shift 226
22 arrayaccess shift 49
6 lefthand shift 2
155 CHARLIT shift 52
51 ID reduce 97
195 ifthenelse shift 64
91 BOOLLIT reduce 47
234 fornoshort shift 109
123 BOOLEAN reduce 83
133 fieldaccess shift 29
187 lefthand shift 2
6 BOOLLIT shift 34
208 BOOLEAN shift 127
208 INT shift 55
138 NULL reduce 15
217 SEMI shift 23
4 NEW reduce 132
22 ifthen shift 80
221 methoddeclor shift 227
169 classcreateexpr shift 18
138 FOR reduce 15
4 STRINGLIT reduce 132
238 FINAL reduce 20
22 name shift 46
89 LPAREN shift 6
73 LPAREN shift 6
31 ABSTRACT reduce 90
175 primnoarray shift 11
91 FOR reduce 47
155 primnoarray shift 11
165 VOID reduce 21
186 INT reduce 119
210 RBRACE reduce 75
16 NULL reduce 133
118 NULL reduce 13
99 RBRACE shift 228
124 simplename shift 9
22 FOR shift 70
210 NATIVE reduce 75
162 primitivetype shift 15
180 RBRACE reduce 53
78 interfacedecl shift 229
169 BOOLLIT shift 34
61 LBRACE reduce 125
233 BOOLEAN shift 127
63 RETURN reduce 54
102 LPAREN shift 230
106 primnoarray shift 11
123 PROTECTED reduce 83
94 ID reduce 95
24 LBRACK reduce 114
92 numerictype shift 32
158 NEW reduce 14
217 whilenoshort shift 12
123 INTERFACE reduce 83
122 variabledeclor shift 231
95 lefthand shift 2
205 VOID reduce 76
155 arraycreate shift 35
110 PUBLIC reduce 84
175 classcreateexpr shift 45
217 RETURN shift 1
16 BYTE reduce 133
217 simplename shift 9
78 typedecl shift 232
182 LBRACK shift 95
138 INTLIT reduce 15
169 THIS shift 20
63 BYTE reduce 54
195 block shift 4
208 qualifiedname shift 37
41 primnoarray shift 11
138 CHAR reduce 15
208 NULL shift 14
179 name shift 116
181 THIS reduce 120
4 SHORT reduce 132
175 NULL shift 14
155 fieldaccess shift 29
220 LBRACK reduce 81
127 LBRACK reduce 108
23 NULL reduce 42
133 ID shift 44
106 INTLIT shift 36
48 BOOLLIT shift 34
58 SEMI reduce 43
3 NEW reduce 135
42 BYTE reduce 23
22 LPAREN shift 6
70 LBRACE shift 233
65 fieldaccess shift 29
230 CHARLIT shift 52
91 WHILE reduce 47
230 simplename shift 9
6 fieldaccess shift 29
4 CHAR reduce 132
84 SHORT reduce 40
189 NATIVE reduce 98
118 NEW reduce 13
196 BYTE reduce 16
211 name shift 46
64 BOOLEAN reduce 124
124 NEW shift 30
126 THIS reduce 17
128 CHAR shift 51
169 STRINGLIT shift 26
223 RPAREN shift 234
18 COMMA reduce 129
105 PROTECTED reduce 87
121 CHARLIT shift 52
54 BOOLEAN reduce 164
80 LPAREN reduce 123
100 FOR reduce 122
230 arglist shift 235
234 FOR shift 70
180 SHORT reduce 53
82 ID reduce 138
142 NEW shift 30
195 LPAREN shift 6
88 INTLIT reduce 122
201 arrayaccess shift 49
233 CHAR shift 51
78 ondemandimport shift 236
65 arrayaccess shift 49
6 qualifiedname shift 37
89 arraycreate shift 35
128 COMMA reduce 102
211 primnoarray shift 11
204 PROTECTED reduce 24
162 referencetype shift 82
133 NULL shift 14
137 LBRACK reduce 4
54 LBRACE reduce 164
201 literal shift 7
195 NULL shift 14
200 NULL reduce 136
118 LPAREN reduce 13
4 BOOLEAN reduce 132
226 COMMA shift 121
22 WHILE shift 72
155 name shift 46
162 CHAR shift 51
4 NULL reduce 132
169 lefthand shift 2
149 ELSE reduce 55
186 NEW reduce 119
30 BYTE shift 53
211 INTLIT shift 36
61 RETURN reduce 125
191 BYTE reduce 88
1 methodinvoke shift 47
89 literal shift 7
4 INT reduce 132
179 param shift 237
22 classcreateexpr shift 18
106 RPAREN reduce 1
16 SHORT reduce 133
97 IMPORT reduce 100
177 SHORT reduce 85
230 condexpr shift 13
236 FINAL reduce 63
211 for shift 76
3 BOOLEAN reduce 135
9 IMPLEMENTS reduce 91
99 classmemberdecl shift 238
100 THIS reduce 122
64 INT reduce 124
