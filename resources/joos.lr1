67
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
80
S
arglist
arrayaccess
arraycreate
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classcreateexpr
classdecl
classmemberdecl
condexpr
constructordecl
constructordeclor
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntwotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
fornoshort
forinit
forupdate
ifthen
ifthenelse
ifthenelsenoshort
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmntnoshort
stmnt
super
type
typedecl
variabledeclor
variabledeclid
variabledeclors
variableinit
while
whilenoshort
S
142
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
constructordecl modifiers constructordeclor block
constructordeclor simplename LPAREN params RPAREN
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interfacelist
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
fieldaccess
fielddecl modifiers type variabledeclors SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit
forinit stmntexprlst
forinit localvardecl
forupdate
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnoshort ELSE stmnt
ifthenelsenoshort IF LPAREN expr RPAREN stmntnoshort ELSE stmntnoshort
stmntnoshort stmntwotrail
stmntnoshort ifthenelsenoshort
stmntnoshort whilenoshort
stmntnoshort fornoshort
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledeclors
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntwotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexpr classcreateexpr
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntwotrail block
stmntwotrail emptystmnt
stmntwotrail exprstmnt
stmntwotrail retstmnt
exprstmnt stmntexpr SEMI
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledeclor variabledeclid
variabledeclor variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledeclors variabledeclor
variabledeclors variabledeclors COMMA variabledeclor
variableinit expr
while WHILE LPAREN expr RPAREN stmnt
whilenoshort WHILE LPAREN expr RPAREN stmntnoshort
220
1768
85 FINAL reduce 92
21 LPAREN reduce 84
114 lefthand shift 1
37 LBRACK reduce 136
76 DOT reduce 125
88 ID reduce 89
26 RETURN reduce 115
91 ID shift 2
110 name shift 3
192 LBRACE shift 4
17 RPAREN reduce 8
37 BECOME reduce 136
57 variabledeclor shift 5
64 lefthand shift 1
200 CHAR reduce 21
158 simplename shift 6
90 SHORT reduce 19
91 IF shift 7
91 WHILE shift 8
131 LBRACE reduce 25
190 BYTE reduce 11
119 name shift 9
219 VOID reduce 17
150 simplename shift 6
62 BYTE reduce 123
216 BOOLEAN shift 10
85 ABSTRACT reduce 92
1 assignop shift 11
59 RBRACK shift 12
166 fieldaccess shift 13
115 LBRACK shift 14
214 IMPORT reduce 53
18 stmntexpr shift 15
124 BYTE reduce 13
204 arraycreate shift 16
64 condexpr shift 17
79 LBRACE shift 18
128 ID shift 2
205 IMPORT reduce 91
170 LBRACE shift 19
190 WHILE reduce 11
129 RBRACE reduce 140
36 LPAREN reduce 124
34 simplename shift 6
134 IMPLEMENTS reduce 106
114 ID shift 2
204 methodinvoke shift 20
181 qualifiedname shift 21
219 ID reduce 17
206 PUBLIC reduce 23
209 BECOME reduce 109
38 INTERFACE reduce 90
24 COMMA reduce 7
55 RETURN reduce 116
23 IF reduce 113
23 ID reduce 113
181 BECOME reduce 36
147 arraycreate shift 16
11 simplename shift 6
91 stmntwotrail shift 22
61 INT reduce 122
204 ifthen shift 23
11 assignexpr shift 24
175 ID shift 2
76 BYTE reduce 125
195 RBRACE reduce 67
181 SEMI shift 25
204 while shift 26
51 VOID reduce 33
159 BECOME reduce 135
152 THIS shift 27
197 IF reduce 15
189 lefthand shift 1
206 SHORT reduce 23
42 RBRACK reduce 35
1 BECOME shift 28
213 PROTECTED reduce 69
197 ID reduce 15
55 IF reduce 116
189 whilenoshort shift 29
55 ID reduce 116
20 COMMA reduce 118
205 STATIC reduce 91
75 condexpr shift 17
140 LPAREN reduce 110
54 DOT reduce 103
38 IMPORT reduce 90
200 RBRACE reduce 21
175 BECOME reduce 36
200 NATIVE reduce 21
167 ABSTRACT reduce 82
87 COMMA reduce 94
179 THIS reduce 45
166 arrayaccess shift 30
36 RBRACE reduce 124
111 FINAL reduce 79
167 SHORT reduce 82
76 CHAR reduce 125
204 stmntexpr shift 31
34 ID shift 2
18 primitivetype shift 32
61 SEMI reduce 122
197 BECOME reduce 15
152 name shift 3
18 arrayaccess shift 33
74 SEMI reduce 121
26 CHAR reduce 115
155 simplename shift 6
87 primitivetype shift 32
189 RETURN shift 34
200 ID reduce 21
175 lefthand shift 1
179 FOR reduce 45
18 forinit shift 35
197 RETURN reduce 15
156 PROTECTED reduce 77
168 BECOME reduce 39
211 FINAL reduce 55
209 THIS reduce 109
62 RBRACE reduce 123
23 BECOME reduce 113
129 THIS reduce 140
177 SEMI reduce 134
206 STATIC reduce 23
18 qualifiedname shift 21
76 RETURN reduce 125
147 exprstmnt shift 36
26 RBRACE reduce 115
6 ID reduce 83
132 STATIC reduce 32
204 arrayaccess shift 33
61 SHORT reduce 122
213 ID reduce 69
188 LBRACE shift 4
114 simplename shift 6
140 FOR reduce 110
108 RBRACK shift 37
111 INT reduce 79
193 SEMI shift 38
51 PUBLIC reduce 33
159 COMMA reduce 135
136 SEMI reduce 70
190 CHAR reduce 11
214 EOF reduce 53
144 CHAR reduce 80
181 primnoarray shift 39
192 classcreateexpr shift 40
90 PROTECTED reduce 19
168 RETURN reduce 39
76 LPAREN reduce 125
140 BECOME reduce 110
50 DOT shift 41
189 ifthen shift 23
34 assignexpr shift 42
87 SHORT shift 43
189 stmntexpr shift 31
15 SEMI reduce 120
189 ifthenelsenoshort shift 44
91 simplename shift 6
203 BOOLEAN reduce 81
100 SHORT reduce 78
140 LBRACE reduce 110
36 BOOLEAN reduce 124
18 simplename shift 6
197 WHILE reduce 15
173 VOID reduce 18
52 qualifiedname shift 21
86 INTERFACE reduce 111
178 INT reduce 20
118 SEMI reduce 41
217 arraytype shift 45
87 params shift 46
182 LPAREN shift 47
6 LPAREN reduce 83
209 ID reduce 109
97 primitivetype shift 32
78 primary shift 48
209 IF reduce 109
189 BECOME reduce 36
213 SHORT reduce 69
124 DOT reduce 13
55 BOOLEAN reduce 116
205 FINAL reduce 91
60 LBRACK reduce 86
83 importdecls shift 49
86 SEMI reduce 111
194 name shift 50
67 LBRACK reduce 135
95 ABSTRACT reduce 75
143 LPAREN reduce 46
203 methoddecl shift 51
111 PUBLIC reduce 79
161 LBRACE reduce 126
157 ID reduce 6
34 name shift 9
189 THIS shift 27
205 NATIVE reduce 91
8 LPAREN shift 52
105 VOID reduce 37
216 primitivetype shift 32
36 WHILE reduce 124
195 STATIC reduce 67
33 DOT reduce 105
205 PROTECTED reduce 91
62 BOOLEAN reduce 123
36 DOT reduce 124
216 SHORT shift 43
97 SHORT shift 43
21 DOT reduce 84
190 SEMI reduce 11
168 RBRACE reduce 39
80 SHORT reduce 112
61 LPAREN reduce 122
192 fornoshort shift 53
119 condexpr shift 17
78 fieldaccess shift 54
195 FINAL reduce 67
211 STATIC reduce 55
167 NATIVE reduce 82
116 SEMI reduce 12
36 BYTE reduce 124
168 LBRACE reduce 39
110 BECOME reduce 36
86 NATIVE reduce 111
91 for shift 55
104 simplename shift 6
56 SEMI reduce 114
110 fieldaccess shift 54
68 SHORT reduce 68
169 qualifiedname shift 21
62 ELSE reduce 123
147 arrayaccess shift 33
181 RETURN shift 34
56 ID reduce 114
56 IF reduce 114
105 RBRACE reduce 37
4 WHILE reduce 14
100 VOID reduce 78
140 THIS reduce 110
44 ELSE reduce 49
34 BECOME reduce 36
167 BYTE reduce 82
76 IF reduce 125
20 SEMI reduce 118
195 SHORT reduce 67
134 LBRACK reduce 106
147 ifthenelse shift 56
91 type shift 57
84 RBRACE reduce 117
67 BECOME reduce 135
200 STATIC reduce 21
166 expr shift 58
76 ID reduce 125
147 for shift 55
78 ID shift 2
38 FINAL reduce 90
91 DOT reduce 36
104 expr shift 59
3 DOT shift 41
216 simplename shift 6
25 DOT reduce 34
43 LBRACK reduce 87
110 methodinvoke shift 20
75 assignexpr shift 42
129 RETURN reduce 140
21 IMPLEMENTS reduce 84
38 STATIC reduce 90
216 BYTE shift 60
29 ELSE reduce 50
150 arrayaccess shift 30
131 IMPLEMENTS reduce 25
110 block shift 61
26 WHILE reduce 115
132 PROTECTED reduce 32
168 BOOLEAN reduce 39
204 emptystmnt shift 62
166 qualifiedname shift 21
126 ELSE reduce 141
62 IF reduce 123
167 PUBLIC reduce 82
62 ID reduce 123
134 LBRACE reduce 106
135 LBRACE reduce 26
18 SHORT shift 43
2 DOT reduce 85
23 DOT reduce 113
185 SEMI reduce 138
52 assign shift 63
51 STATIC reduce 33
119 fieldaccess shift 13
132 VOID reduce 32
103 FINAL reduce 76
196 LBRACE reduce 27
35 SEMI shift 64
194 qualifiedname shift 21
206 NATIVE reduce 23
36 INT reduce 124
192 ifthenelsenoshort shift 44
78 name shift 3
4 CHAR reduce 14
140 SHORT reduce 110
179 BECOME reduce 45
56 RBRACE reduce 114
203 PUBLIC reduce 81
155 lefthand shift 1
166 name shift 9
4 FOR reduce 14
95 VOID reduce 75
86 EOF reduce 111
158 name shift 65
145 COMMA reduce 3
166 simplename shift 6
21 BECOME reduce 84
202 RPAREN shift 66
96 ID shift 67
18 lefthand shift 1
91 while shift 26
188 SEMI shift 68
134 BECOME reduce 106
34 expr shift 69
68 ABSTRACT reduce 68
78 stmntexprlst shift 70
206 FINAL reduce 23
63 COMMA reduce 9
103 PUBLIC reduce 76
40 COMMA reduce 119
92 RPAREN shift 71
51 BYTE reduce 33
97 ID shift 2
64 simplename shift 6
190 LPAREN reduce 11
182 while shift 26
57 variabledeclors shift 72
182 WHILE shift 73
152 stmntexpr shift 74
9 BECOME reduce 57
139 ID reduce 30
107 LPAREN shift 75
192 retstmnt shift 76
49 PUBLIC reduce 81
175 assign shift 63
182 arrayaccess shift 33
52 name shift 9
173 ABSTRACT reduce 18
129 DOT reduce 140
91 qualifiedname shift 21
56 RETURN reduce 114
192 simplename shift 6
110 whilenoshort shift 29
165 DOT shift 77
215 SEMI shift 78
91 ifthen shift 23
203 CHAR reduce 81
189 block shift 61
166 assignexpr shift 42
168 BYTE reduce 39
83 PUBLIC reduce 52
200 FINAL reduce 21
178 PUBLIC reduce 20
179 CHAR reduce 45
6 DOT reduce 83
204 name shift 3
204 FOR shift 79
192 BECOME reduce 36
55 LPAREN reduce 116
189 methodinvoke shift 20
189 stmntwotrail shift 80
120 COMMA reduce 2
42 RPAREN reduce 35
192 ifthen shift 23
182 DOT reduce 36
124 INT reduce 13
182 qualifiedname shift 21
181 stmntexpr shift 31
148 RPAREN shift 81
155 name shift 9
48 DOT shift 82
100 ID reduce 78
25 SHORT reduce 34
56 BOOLEAN reduce 114
211 EOF reduce 55
91 SEMI shift 25
205 packagedecl shift 83
190 SHORT reduce 11
179 SHORT reduce 45
147 assign shift 84
66 LBRACE reduce 24
143 ID reduce 46
124 BECOME reduce 13
178 FINAL reduce 20
18 methodinvoke shift 20
52 simplename shift 6
68 BOOLEAN reduce 68
145 RPAREN reduce 3
204 WHILE shift 8
130 SEMI reduce 66
209 DOT reduce 109
65 SEMI shift 85
192 THIS shift 27
165 SEMI shift 86
213 STATIC reduce 69
144 BOOLEAN reduce 80
25 LBRACE reduce 34
209 INT reduce 109
4 BYTE reduce 14
86 PROTECTED reduce 111
110 arrayaccess shift 33
181 ID shift 2
182 primnoarray shift 39
194 ID shift 2
181 IF shift 7
81 SEMI reduce 73
167 FINAL reduce 82
111 VOID reduce 79
189 DOT reduce 36
189 simplename shift 6
203 SHORT reduce 81
143 IF reduce 46
161 FOR reduce 126
186 LPAREN shift 87
23 LBRACE reduce 113
18 CHAR shift 88
150 name shift 9
82 ID shift 89
115 ID reduce 107
214 CLASS reduce 53
152 LPAREN shift 47
213 BOOLEAN reduce 69
55 SHORT reduce 116
204 block shift 61
68 VOID reduce 68
181 emptystmnt shift 62
124 LBRACE reduce 13
36 IF reduce 124
36 ID reduce 124
103 CHAR reduce 76
95 INT reduce 75
75 arrayaccess shift 30
91 SHORT shift 43
11 assign shift 63
219 PROTECTED reduce 17
49 ABSTRACT reduce 81
78 LPAREN shift 47
203 constructordecl shift 90
39 DOT reduce 97
80 FOR reduce 112
144 INT reduce 80
18 BECOME reduce 36
190 DOT reduce 11
56 DOT reduce 114
147 primnoarray shift 39
103 BYTE reduce 76
156 PUBLIC reduce 77
110 primnoarray shift 39
114 name shift 9
132 BYTE reduce 32
132 ABSTRACT reduce 32
110 for shift 55
147 primary shift 48
149 COMMA reduce 139
80 RETURN reduce 112
190 FOR reduce 11
87 simplename shift 6
36 LBRACE reduce 124
4 blockstmnts shift 91
103 ID reduce 76
11 fieldaccess shift 13
55 WHILE reduce 116
14 assignexpr shift 42
175 arglist shift 92
117 SEMI reduce 54
209 LPAREN reduce 109
24 RBRACK reduce 7
94 CLASS shift 93
214 PUBLIC reduce 53
161 RETURN reduce 126
49 modifiers shift 94
189 WHILE shift 73
155 arrayaccess shift 30
83 EOF reduce 52
187 RPAREN reduce 95
25 RETURN reduce 34
54 BECOME reduce 58
195 NATIVE reduce 67
75 BECOME reduce 36
18 primary shift 48
182 name shift 3
217 PUBLIC shift 95
103 CLASS reduce 76
103 SHORT reduce 76
116 INT reduce 12
25 BYTE reduce 34
181 ifthen shift 23
213 CHAR reduce 69
72 COMMA shift 96
26 ID reduce 115
202 COMMA shift 97
152 arraycreate shift 16
147 block shift 61
62 DOT reduce 123
76 INT reduce 125
110 DOT reduce 36
26 IF reduce 115
204 LPAREN shift 47
199 ID reduce 29
61 ELSE reduce 122
87 RPAREN reduce 94
83 FINAL reduce 52
111 PROTECTED reduce 79
95 SHORT reduce 75
132 CHAR reduce 32
80 ID reduce 112
36 RETURN reduce 124
90 PUBLIC reduce 19
74 RBRACE reduce 121
18 referencetype shift 98
110 lefthand shift 1
47 fieldaccess shift 13
100 PUBLIC reduce 78
130 RETURN reduce 66
91 methodinvoke shift 20
105 BYTE reduce 37
140 IF reduce 110
140 ID reduce 110
80 IF reduce 112
47 name shift 9
106 LBRACK shift 99
217 ABSTRACT shift 100
204 stmntwotrail shift 22
110 stmntnoshort shift 101
132 SHORT reduce 32
62 BECOME reduce 123
124 WHILE reduce 13
216 type shift 102
55 BECOME reduce 116
105 CHAR reduce 37
173 PROTECTED reduce 18
135 IMPLEMENTS reduce 26
190 VOID reduce 11
61 BOOLEAN reduce 122
90 VOID reduce 19
94 PROTECTED shift 103
2 BECOME reduce 85
63 RBRACE reduce 9
90 BYTE reduce 19
203 BYTE reduce 81
63 RBRACK reduce 9
25 CHAR reduce 34
179 RBRACE reduce 45
110 while shift 26
76 ELSE reduce 125
24 RBRACE reduce 7
135 DOT shift 41
47 qualifiedname shift 21
23 INT reduce 113
156 BYTE reduce 77
22 THIS reduce 112
130 ID reduce 66
130 IF reduce 66
47 arrayaccess shift 30
51 CHAR reduce 33
119 ID shift 2
190 PROTECTED reduce 11
152 fieldaccess shift 54
204 SEMI shift 25
61 FOR reduce 122
175 simplename shift 6
3 LBRACK shift 104
114 fieldaccess shift 13
160 SEMI shift 105
206 INT reduce 23
161 ELSE reduce 126
103 ABSTRACT reduce 76
83 STATIC reduce 52
49 PROTECTED reduce 81
175 COMMA reduce 1
97 name shift 106
182 ID shift 2
185 COMMA reduce 138
182 IF shift 107
195 ABSTRACT reduce 67
138 LBRACK shift 108
22 BOOLEAN reduce 112
104 arrayaccess shift 30
152 qualifiedname shift 21
178 ID reduce 20
23 THIS reduce 113
94 INTERFACE shift 109
86 STATIC reduce 111
217 BYTE shift 60
24 RPAREN reduce 7
100 CLASS reduce 78
58 RPAREN shift 110
204 for shift 55
189 arrayaccess shift 33
140 INT reduce 110
217 FINAL shift 111
179 SEMI reduce 45
129 LBRACE reduce 140
14 arrayaccess shift 30
147 THIS shift 27
204 qualifiedname shift 21
81 RBRACE reduce 73
147 BECOME reduce 36
125 COMMA reduce 96
61 BYTE reduce 122
214 PROTECTED reduce 53
119 expr shift 112
175 assignexpr shift 42
22 SHORT reduce 112
21 SEMI reduce 84
134 ID reduce 106
192 whilenoshort shift 29
90 ID reduce 19
49 STATIC reduce 81
143 SHORT reduce 46
110 classcreateexpr shift 40
37 COMMA reduce 136
4 THIS reduce 14
56 WHILE reduce 114
75 expr shift 113
168 DOT reduce 39
192 fieldaccess shift 54
166 ID shift 2
105 PUBLIC reduce 37
156 FINAL reduce 77
24 SEMI reduce 7
22 WHILE reduce 112
68 STATIC reduce 68
85 CLASS reduce 92
80 ELSE reduce 48
147 IF shift 7
147 ID shift 2
76 SHORT reduce 125
84 SEMI reduce 117
147 lefthand shift 1
115 DOT shift 41
138 BECOME shift 114
213 RBRACE reduce 69
104 condexpr shift 17
167 INTERFACE reduce 82
100 FINAL reduce 78
211 PUBLIC reduce 55
181 assign shift 84
168 SHORT reduce 39
181 for shift 55
42 SEMI reduce 35
47 assign shift 63
110 ID shift 2
110 IF shift 107
26 SHORT reduce 115
117 FINAL reduce 54
209 WHILE reduce 109
91 name shift 115
90 NATIVE reduce 19
147 retstmnt shift 76
138 COMMA reduce 133
189 classcreateexpr shift 40
97 BYTE shift 60
23 BYTE reduce 113
219 SHORT reduce 17
91 localvardeclstmnt shift 116
116 THIS reduce 12
204 ifthenelse shift 56
161 ID reduce 126
150 qualifiedname shift 21
161 IF reduce 126
190 PUBLIC reduce 11
138 SEMI reduce 133
49 singletypeimport shift 117
87 CHAR shift 88
189 fornoshort shift 53
51 PROTECTED reduce 33
40 SEMI reduce 119
179 LBRACE reduce 45
172 EOF reduce 130
182 stmntexpr shift 31
190 ID reduce 11
192 DOT reduce 36
190 IF reduce 11
117 STATIC reduce 54
25 THIS reduce 34
182 emptystmnt shift 62
18 fieldaccess shift 54
26 DOT reduce 115
203 INT reduce 81
190 ABSTRACT reduce 11
68 NATIVE reduce 68
192 IF shift 107
18 stmntexprlst shift 118
192 ID shift 2
10 ID reduce 100
87 type shift 102
181 lefthand shift 1
173 INT reduce 18
182 primary shift 48
73 LPAREN shift 119
22 LPAREN reduce 112
217 PROTECTED shift 103
26 BECOME reduce 115
155 expr shift 120
91 emptystmnt shift 62
95 PROTECTED reduce 75
119 qualifiedname shift 21
36 CHAR reduce 124
129 INT reduce 140
52 fieldaccess shift 13
52 ID shift 2
209 BYTE reduce 109
217 BOOLEAN shift 10
217 simplename shift 121
150 BECOME reduce 36
206 ABSTRACT reduce 23
62 LPAREN reduce 123
189 emptystmnt shift 62
80 INT reduce 112
18 numerictype shift 122
177 COMMA reduce 134
144 INTERFACE reduce 80
49 CLASS reduce 81
124 RBRACE reduce 13
124 CHAR reduce 13
71 SEMI reduce 74
110 primary shift 48
161 SEMI reduce 126
181 arraycreate shift 16
80 LPAREN reduce 112
116 RBRACE reduce 12
218 RPAREN reduce 93
143 RETURN reduce 46
80 SEMI reduce 112
179 LPAREN reduce 45
22 FOR reduce 112
181 classcreateexpr shift 40
133 classbody shift 123
130 DOT reduce 66
192 RETURN shift 34
85 PUBLIC reduce 92
91 stmnt shift 124
218 LBRACK shift 108
85 SEMI reduce 92
22 CHAR reduce 112
91 referencetype shift 98
121 LBRACK reduce 83
76 RBRACE reduce 125
153 ELSE reduce 47
149 SEMI reduce 139
55 DOT reduce 116
182 SEMI shift 25
78 lefthand shift 1
97 param shift 125
84 COMMA reduce 117
100 ABSTRACT reduce 78
173 NATIVE reduce 18
124 LPAREN reduce 13
144 NATIVE reduce 80
18 SEMI reduce 40
192 ifthenelse shift 56
47 simplename shift 6
81 COMMA reduce 73
43 ID reduce 87
214 ABSTRACT reduce 53
182 stmntnoshort shift 126
23 CHAR reduce 113
68 CHAR reduce 68
190 BOOLEAN reduce 11
45 ID reduce 108
94 ABSTRACT shift 100
184 ID reduce 5
85 EOF reduce 92
62 WHILE reduce 123
64 fieldaccess shift 13
83 CLASS reduce 52
52 assignexpr shift 42
161 SHORT reduce 126
197 LBRACE reduce 15
192 arrayaccess shift 33
143 INT reduce 46
189 for shift 55
91 INT shift 127
23 RBRACE reduce 113
156 CHAR reduce 77
131 EXTENDS shift 128
26 SEMI reduce 115
27 DOT reduce 101
91 LPAREN shift 47
168 THIS reduce 39
173 ID reduce 18
181 stmnt shift 129
87 referencetype shift 98
116 LPAREN reduce 12
130 WHILE reduce 66
155 COMMA reduce 1
176 SEMI shift 130
128 qualifiedname shift 21
197 LPAREN reduce 15
95 BOOLEAN reduce 75
46 COMMA shift 97
111 CLASS reduce 79
75 name shift 9
110 RETURN shift 34
140 BYTE reduce 110
116 SHORT reduce 12
104 qualifiedname shift 21
212 EOF reduce 56
47 BECOME reduce 36
36 SEMI reduce 124
203 FINAL reduce 81
103 VOID reduce 76
95 ID reduce 75
161 LPAREN reduce 126
93 ID shift 131
87 numerictype shift 122
156 INTERFACE reduce 77
110 retstmnt shift 76
203 fielddecl shift 132
56 INT reduce 114
30 BECOME reduce 59
197 RBRACE reduce 15
196 interfaces shift 133
179 BOOLEAN reduce 45
67 RPAREN reduce 135
64 assignexpr shift 42
216 qualifiedname shift 21
86 IMPORT reduce 111
156 BOOLEAN reduce 77
168 INT reduce 39
34 fieldaccess shift 13
88 LBRACK reduce 89
182 ifthenelsenoshort shift 44
77 ID shift 134
211 PROTECTED reduce 55
119 BECOME reduce 36
155 fieldaccess shift 13
152 methodinvoke shift 20
114 condexpr shift 17
128 name shift 135
173 BOOLEAN reduce 18
83 ABSTRACT reduce 52
207 methoddeclor shift 136
105 PROTECTED reduce 37
168 IF reduce 39
168 ID reduce 39
213 NATIVE reduce 69
12 BECOME reduce 4
76 SEMI reduce 125
182 for shift 55
62 THIS reduce 123
18 LPAREN shift 47
20 DOT reduce 104
141 SEMI reduce 72
146 EOF reduce 131
147 DOT reduce 36
192 methodinvoke shift 20
203 RBRACE shift 137
143 THIS reduce 46
197 THIS reduce 15
21 ID reduce 84
214 SEMI reduce 53
71 RBRACE reduce 74
104 name shift 9
62 SHORT reduce 123
139 LBRACE reduce 30
22 BYTE reduce 112
36 SHORT reduce 124
57 variabledeclid shift 138
189 ifthenelse shift 56
217 SHORT shift 43
52 condexpr shift 17
201 SEMI reduce 42
194 interface shift 139
192 block shift 61
189 LBRACE shift 4
69 SEMI shift 140
102 ID shift 67
3 BECOME reduce 57
117 ABSTRACT reduce 54
175 fieldaccess shift 13
181 block shift 61
116 RETURN reduce 12
217 name shift 106
78 stmntexpr shift 15
14 fieldaccess shift 13
124 SEMI reduce 13
182 assign shift 84
190 BECOME reduce 11
205 EOF reduce 91
115 BECOME reduce 57
98 ID reduce 128
46 RPAREN shift 141
155 RPAREN reduce 1
175 condexpr shift 17
132 ID reduce 32
204 assign shift 84
78 forupdate shift 142
144 PUBLIC reduce 80
134 SEMI reduce 106
209 RETURN reduce 109
182 classcreateexpr shift 40
91 primitivetype shift 32
116 WHILE reduce 12
192 stmnt shift 143
192 stmntexpr shift 31
216 CHAR shift 88
217 NATIVE shift 144
150 expr shift 145
67 SEMI reduce 135
91 ifthenelse shift 56
117 PROTECTED reduce 54
6 LBRACK reduce 83
14 lefthand shift 1
100 CHAR reduce 78
209 FOR reduce 109
6 LBRACE reduce 83
17 SEMI reduce 8
64 assign shift 63
76 FOR reduce 125
214 NATIVE reduce 53
156 VOID reduce 77
159 LPAREN shift 87
49 FINAL reduce 81
52 BECOME reduce 36
90 CHAR reduce 19
49 interfacedecl shift 146
56 SHORT reduce 114
206 VOID reduce 23
101 ELSE shift 147
197 BOOLEAN reduce 15
111 BOOLEAN reduce 79
200 VOID reduce 21
121 ID reduce 83
198 ABSTRACT reduce 0
147 classcreateexpr shift 40
161 WHILE reduce 126
32 ID reduce 127
192 arraycreate shift 16
155 arglist shift 148
116 ID reduce 12
80 WHILE reduce 112
76 WHILE reduce 125
129 LPAREN reduce 140
103 INTERFACE reduce 76
11 name shift 9
97 type shift 102
90 ABSTRACT reduce 19
206 PROTECTED reduce 23
144 PROTECTED reduce 80
195 VOID reduce 67
208 LBRACE reduce 71
190 RETURN reduce 11
14 simplename shift 6
116 IF reduce 12
110 stmntexpr shift 31
114 expr shift 149
78 BECOME reduce 36
18 arraytype shift 45
67 COMMA reduce 135
129 SHORT reduce 140
211 SEMI reduce 55
38 EOF reduce 90
144 ID reduce 80
175 expr shift 120
209 ELSE reduce 109
178 ABSTRACT reduce 20
62 INT reduce 123
51 NATIVE reduce 33
92 COMMA shift 150
25 BECOME reduce 34
47 expr shift 151
105 ID reduce 37
129 BOOLEAN reduce 140
181 FOR shift 79
110 SEMI shift 25
155 assign shift 63
147 stmnt shift 143
130 BOOLEAN reduce 66
70 COMMA shift 152
192 stmntnoshort shift 153
192 lefthand shift 1
219 RBRACE reduce 17
197 SHORT reduce 15
90 INT reduce 19
160 COMMA shift 96
18 DOT reduce 36
51 ABSTRACT reduce 33
4 LPAREN reduce 14
105 SHORT reduce 37
36 FOR reduce 124
213 ABSTRACT reduce 69
206 RBRACE reduce 23
103 STATIC reduce 76
122 ID reduce 99
217 VOID shift 154
18 BOOLEAN shift 10
125 RPAREN reduce 96
3 LPAREN shift 155
22 RETURN reduce 112
140 RETURN reduce 110
116 BOOLEAN reduce 12
124 ID reduce 13
159 SEMI reduce 135
97 numerictype shift 122
179 WHILE reduce 45
26 THIS reduce 115
189 fieldaccess shift 54
78 arrayaccess shift 33
169 simplename shift 6
47 assignexpr shift 42
124 IF reduce 13
214 STATIC reduce 53
78 THIS shift 27
166 BECOME reduce 36
38 ABSTRACT reduce 90
4 INT reduce 14
182 exprstmnt shift 36
18 assign shift 84
94 STATIC shift 156
23 SHORT reduce 113
197 DOT reduce 15
99 RBRACK shift 157
14 name shift 9
182 fornoshort shift 53
2 LBRACK reduce 85
25 LPAREN reduce 34
64 ID shift 2
2 LBRACE reduce 85
211 NATIVE reduce 55
105 BOOLEAN reduce 37
100 PROTECTED reduce 78
209 SEMI reduce 109
205 PACKAGE shift 158
110 THIS shift 27
207 ID shift 159
152 simplename shift 6
91 primnoarray shift 39
150 lefthand shift 1
178 BOOLEAN reduce 20
190 THIS reduce 11
80 BECOME reduce 112
130 SHORT reduce 66
25 RBRACE reduce 34
197 INT reduce 15
147 stmntwotrail shift 22
207 variabledeclors shift 160
91 FOR shift 79
83 IMPORT reduce 52
150 assign shift 63
31 SEMI shift 161
147 fieldaccess shift 54
152 ID shift 2
161 BECOME reduce 126
182 arraycreate shift 16
62 SEMI reduce 123
216 INT shift 127
132 NATIVE reduce 32
129 BECOME reduce 140
124 FOR reduce 13
103 INT reduce 76
181 exprstmnt shift 36
18 BYTE shift 60
204 fieldaccess shift 54
49 typedecl shift 162
166 condexpr shift 17
55 CHAR reduce 116
216 arraytype shift 45
217 STATIC shift 156
119 simplename shift 6
129 CHAR reduce 140
219 PUBLIC reduce 17
217 constructordeclor shift 163
147 LBRACE shift 4
143 WHILE reduce 46
22 DOT reduce 112
217 referencetype shift 98
94 PUBLIC shift 95
143 BOOLEAN reduce 46
55 BYTE reduce 116
182 stmntwotrail shift 80
127 ID reduce 88
91 retstmnt shift 76
155 qualifiedname shift 21
116 CHAR reduce 12
200 SHORT reduce 21
4 LBRACE reduce 14
167 CLASS reduce 82
111 CHAR reduce 79
218 COMMA reduce 93
95 CHAR reduce 75
147 LPAREN shift 47
205 SEMI reduce 91
205 ABSTRACT reduce 91
116 FOR reduce 12
4 DOT reduce 14
14 qualifiedname shift 21
32 LBRACK shift 164
26 BOOLEAN reduce 115
47 ID shift 2
110 WHILE shift 73
61 RBRACE reduce 122
85 INTERFACE reduce 92
169 name shift 165
64 qualifiedname shift 21
110 ifthen shift 23
86 ABSTRACT reduce 111
178 BYTE reduce 20
168 LPAREN reduce 39
7 LPAREN shift 166
209 LBRACE reduce 109
34 arrayaccess shift 30
181 ifthenelse shift 56
13 BECOME reduce 58
78 assign shift 84
104 assign shift 63
80 RBRACE reduce 112
94 modifier shift 167
62 RETURN reduce 123
161 INT reduce 126
75 qualifiedname shift 21
155 ID shift 2
204 stmnt shift 168
91 stmntexpr shift 31
90 RBRACE reduce 19
190 NATIVE reduce 11
56 BYTE reduce 114
49 IMPORT shift 169
203 ABSTRACT reduce 81
91 assign shift 84
178 PROTECTED reduce 20
75 simplename shift 6
87 arraytype shift 45
206 ID reduce 23
34 lefthand shift 1
28 ID reduce 10
156 STATIC reduce 77
91 BOOLEAN shift 10
195 INT reduce 67
143 LBRACE reduce 46
75 assign shift 63
203 NATIVE reduce 81
191 extendsinterfaces shift 170
211 ABSTRACT reduce 55
62 CHAR reduce 123
182 FOR shift 79
213 BYTE reduce 69
204 DOT reduce 36
38 NATIVE reduce 90
219 FINAL reduce 17
132 INT reduce 32
90 FINAL reduce 19
197 BYTE reduce 15
178 RBRACE reduce 20
144 CLASS reduce 80
34 assign shift 63
200 BYTE reduce 21
213 VOID reduce 69
38 SEMI reduce 90
4 BECOME reduce 14
38 PUBLIC reduce 90
105 STATIC reduce 37
80 BYTE reduce 112
182 lefthand shift 1
6 BECOME reduce 83
205 file shift 171
122 LBRACK reduce 99
204 exprstmnt shift 36
2 SEMI reduce 85
182 RETURN shift 34
111 SHORT reduce 79
49 classdecl shift 172
68 BYTE reduce 68
91 lefthand shift 1
37 RPAREN reduce 136
95 FINAL reduce 75
140 DOT reduce 110
207 variabledeclor shift 5
25 FOR reduce 34
158 ID shift 2
158 qualifiedname shift 21
189 while shift 26
203 staticinit shift 173
50 LBRACE reduce 31
152 lefthand shift 1
192 LPAREN shift 47
195 CHAR reduce 67
204 primnoarray shift 39
152 primnoarray shift 39
182 whilenoshort shift 29
147 simplename shift 6
200 ABSTRACT reduce 21
216 ID shift 2
111 ID reduce 79
86 PUBLIC reduce 111
70 RBRACE reduce 44
63 SEMI reduce 9
211 CLASS reduce 55
151 RPAREN shift 174
204 BECOME reduce 36
152 assign shift 84
61 THIS reduce 122
219 BYTE reduce 17
15 COMMA reduce 120
17 COMMA reduce 8
203 PROTECTED reduce 81
207 variabledeclid shift 138
195 ID reduce 67
110 LPAREN shift 47
89 LPAREN shift 175
150 condexpr shift 17
47 lefthand shift 1
91 localvardecl shift 176
132 BOOLEAN reduce 32
169 ID shift 2
114 variableinit shift 177
61 WHILE reduce 122
144 VOID reduce 80
75 lefthand shift 1
114 assign shift 63
192 stmntwotrail shift 80
51 INT reduce 33
105 ABSTRACT reduce 37
17 RBRACK reduce 8
41 ID shift 134
130 BECOME reduce 66
61 BECOME reduce 122
156 SHORT reduce 77
129 SEMI reduce 140
83 INTERFACE reduce 52
17 RBRACE reduce 8
130 INT reduce 66
133 LBRACE shift 178
128 simplename shift 6
216 referencetype shift 98
166 assign shift 63
120 RPAREN reduce 2
11 ID shift 2
80 DOT reduce 112
189 arraycreate shift 16
51 SHORT reduce 33
36 BECOME reduce 124
130 LBRACE reduce 66
4 BOOLEAN reduce 14
95 CLASS reduce 75
49 INTERFACE reduce 81
26 BYTE reduce 115
189 stmnt shift 179
105 FINAL reduce 37
190 FINAL reduce 11
124 BOOLEAN reduce 13
204 primary shift 48
147 emptystmnt shift 62
213 PUBLIC reduce 69
195 PROTECTED reduce 67
26 INT reduce 115
61 DOT reduce 122
182 simplename shift 6
117 INTERFACE reduce 54
11 condexpr shift 17
124 SHORT reduce 13
189 assign shift 84
78 methodinvoke shift 20
143 FOR reduce 46
104 lefthand shift 1
167 ID reduce 82
152 classcreateexpr shift 40
53 ELSE reduce 51
219 BOOLEAN reduce 17
161 BYTE reduce 126
91 RETURN shift 34
140 RBRACE reduce 110
83 NATIVE reduce 52
181 THIS shift 27
152 DOT reduce 36
91 classcreateexpr shift 40
23 FOR reduce 113
55 RBRACE reduce 116
9 DOT shift 41
192 SEMI shift 25
156 ABSTRACT reduce 77
51 FINAL reduce 33
56 BECOME reduce 114
91 exprstmnt shift 36
94 NATIVE shift 144
110 arraycreate shift 16
26 LPAREN reduce 115
161 BOOLEAN reduce 126
181 WHILE shift 8
167 BOOLEAN reduce 82
216 RPAREN reduce 94
147 SEMI shift 25
217 primitivetype shift 32
83 PROTECTED reduce 52
85 PROTECTED reduce 92
34 condexpr shift 17
52 lefthand shift 1
4 SEMI reduce 14
87 qualifiedname shift 21
189 stmntnoshort shift 180
210 RPAREN shift 181
203 VOID reduce 81
140 CHAR reduce 110
181 stmntwotrail shift 22
178 VOID reduce 20
34 qualifiedname shift 21
56 THIS reduce 114
22 LBRACE reduce 112
134 DOT reduce 106
219 STATIC reduce 17
179 INT reduce 45
219 CHAR reduce 17
192 WHILE shift 73
104 BECOME reduce 36
179 DOT reduce 45
178 CHAR reduce 20
161 DOT reduce 126
182 block shift 61
81 DOT reduce 73
23 RETURN reduce 113
112 RPAREN shift 182
209 RBRACE reduce 109
192 exprstmnt shift 36
38 PROTECTED reduce 90
111 STATIC reduce 79
203 ID reduce 81
56 LBRACE reduce 114
189 FOR shift 79
182 BECOME reduce 36
181 LPAREN shift 47
61 RETURN reduce 122
190 RBRACE reduce 11
144 BYTE reduce 80
4 ID reduce 14
4 IF reduce 14
209 SHORT reduce 109
129 FOR reduce 140
217 numerictype shift 122
182 stmnt shift 129
152 BECOME reduce 36
216 numerictype shift 122
87 BOOLEAN shift 10
18 type shift 57
56 FOR reduce 114
85 IMPORT reduce 92
23 BOOLEAN reduce 113
147 ifthen shift 23
155 condexpr shift 17
203 STATIC reduce 81
25 WHILE reduce 34
190 LBRACE reduce 11
168 WHILE reduce 39
209 BOOLEAN reduce 109
100 INTERFACE reduce 78
219 ABSTRACT reduce 17
42 COMMA reduce 35
110 stmnt shift 179
25 BOOLEAN reduce 34
49 SEMI shift 183
33 BECOME reduce 59
164 RBRACK shift 184
161 THIS reduce 126
97 simplename shift 6
78 qualifiedname shift 21
97 BOOLEAN shift 10
96 variabledeclor shift 185
154 ID shift 186
206 BYTE reduce 23
2 ID reduce 85
178 STATIC reduce 20
173 RBRACE reduce 18
64 name shift 9
204 IF shift 7
111 BYTE reduce 79
62 FOR reduce 123
216 param shift 187
76 BECOME reduce 125
204 ID shift 2
25 ID reduce 34
25 IF reduce 34
86 CLASS reduce 111
140 WHILE reduce 110
147 methodinvoke shift 20
127 LBRACK reduce 88
14 condexpr shift 17
211 INTERFACE reduce 55
9 LBRACK shift 104
175 name shift 9
167 INT reduce 82
168 FOR reduce 39
80 THIS reduce 112
104 ID shift 2
64 BECOME reduce 36
14 assign shift 63
68 ID reduce 68
100 BOOLEAN reduce 78
205 INTERFACE reduce 91
10 LBRACK reduce 100
167 VOID reduce 82
181 DOT reduce 36
129 IF reduce 140
167 CHAR reduce 82
129 ID reduce 140
21 LBRACE reduce 84
204 LBRACE shift 4
162 EOF reduce 38
21 LBRACK reduce 84
203 methodhead shift 188
38 CLASS reduce 90
209 CHAR reduce 109
20 RBRACE reduce 118
208 SEMI reduce 71
51 BOOLEAN reduce 33
106 ID reduce 107
200 PUBLIC reduce 21
152 primary shift 48
117 NATIVE reduce 54
113 RPAREN shift 189
87 ID shift 2
168 SEMI reduce 39
2 IMPLEMENTS reduce 85
155 BECOME reduce 36
192 while shift 26
110 qualifiedname shift 21
119 assignexpr shift 42
103 BOOLEAN reduce 76
91 RBRACE shift 190
22 SEMI reduce 112
189 qualifiedname shift 21
91 THIS shift 27
110 exprstmnt shift 36
181 methodinvoke shift 20
111 NATIVE reduce 79
143 CHAR reduce 46
216 COMMA reduce 94
68 PROTECTED reduce 68
182 ifthenelse shift 56
61 CHAR reduce 122
200 PROTECTED reduce 21
91 BYTE shift 60
148 COMMA shift 150
130 RBRACE reduce 66
200 INT reduce 21
204 THIS shift 27
49 NATIVE reduce 81
87 param shift 187
194 simplename shift 6
156 CLASS reduce 77
40 RBRACE reduce 119
110 ifthenelsenoshort shift 44
116 LBRACE reduce 12
23 SEMI reduce 113
6 SEMI reduce 83
192 primary shift 48
213 INT reduce 69
4 SHORT reduce 14
109 ID shift 191
192 FOR shift 79
114 assignexpr shift 42
130 BYTE reduce 66
61 ID reduce 122
61 IF reduce 122
97 referencetype shift 98
91 CHAR shift 88
199 LBRACE reduce 29
36 ELSE reduce 124
161 CHAR reduce 126
18 classcreateexpr shift 40
132 FINAL reduce 32
105 NATIVE reduce 37
97 INT shift 127
156 INT reduce 77
22 RBRACE reduce 112
155 assignexpr shift 42
130 THIS reduce 66
85 STATIC reduce 92
163 LBRACE shift 4
71 COMMA reduce 74
14 expr shift 59
182 LBRACE shift 4
204 retstmnt shift 76
147 WHILE shift 8
181 name shift 3
100 STATIC reduce 78
25 ELSE reduce 34
91 arraycreate shift 16
80 CHAR reduce 112
117 PUBLIC reduce 54
78 classcreateexpr shift 40
18 INT shift 127
86 FINAL reduce 111
57 ID shift 67
147 while shift 26
180 ELSE shift 192
96 variabledeclid shift 138
12 DOT reduce 4
175 RPAREN reduce 1
143 BYTE reduce 46
77 STAR shift 193
199 interfacelist shift 194
95 NATIVE reduce 75
78 primnoarray shift 39
166 lefthand shift 1
100 BYTE reduce 78
140 BOOLEAN reduce 110
103 PROTECTED reduce 76
119 arrayaccess shift 30
179 ID reduce 45
181 while shift 26
179 IF reduce 45
195 PUBLIC reduce 67
189 SEMI shift 25
56 LPAREN reduce 114
115 LPAREN shift 155
188 block shift 195
90 STATIC reduce 19
55 THIS reduce 116
189 IF shift 107
189 ID shift 2
147 stmntexpr shift 31
178 NATIVE reduce 20
173 FINAL reduce 18
190 ELSE reduce 11
130 CHAR reduce 66
174 DOT reduce 102
100 INT reduce 78
119 assign shift 63
6 IMPLEMENTS reduce 83
175 arrayaccess shift 30
51 RBRACE reduce 33
167 STATIC reduce 82
132 RBRACE reduce 32
131 super shift 196
55 INT reduce 116
194 LBRACE reduce 28
140 SEMI reduce 110
91 block shift 61
173 STATIC reduce 18
124 RETURN reduce 13
181 LBRACE shift 4
143 DOT reduce 46
192 primnoarray shift 39
97 qualifiedname shift 21
168 CHAR reduce 39
189 name shift 3
18 name shift 115
200 BOOLEAN reduce 21
22 INT reduce 112
75 ID shift 2
91 arrayaccess shift 33
65 DOT shift 41
55 SEMI reduce 116
159 LBRACK reduce 135
78 DOT reduce 36
187 COMMA reduce 95
91 blockstmnt shift 197
25 INT reduce 34
189 primary shift 48
197 SEMI reduce 15
87 name shift 106
114 qualifiedname shift 21
11 lefthand shift 1
91 numerictype shift 122
156 NATIVE reduce 77
63 RPAREN reduce 9
171 EOF shift 198
137 EOF reduce 16
181 fieldaccess shift 54
150 fieldaccess shift 13
68 INT reduce 68
87 INT shift 127
196 IMPLEMENTS shift 199
206 CHAR reduce 23
68 FINAL reduce 68
147 name shift 3
129 WHILE reduce 140
51 ID reduce 33
129 BYTE reduce 140
203 classbodydecl shift 200
91 LBRACE shift 4
179 BYTE reduce 45
18 localvardecl shift 201
181 simplename shift 6
104 fieldaccess shift 13
216 params shift 202
18 primnoarray shift 39
183 EOF reduce 132
121 DOT reduce 83
91 BECOME reduce 36
94 FINAL shift 111
105 INT reduce 37
143 SEMI reduce 46
85 NATIVE reduce 92
18 THIS shift 27
68 PUBLIC reduce 68
110 simplename shift 6
117 IMPORT reduce 54
143 BECOME reduce 46
219 INT reduce 17
116 DOT reduce 12
74 COMMA reduce 121
192 qualifiedname shift 21
75 fieldaccess shift 13
114 arrayaccess shift 30
182 ifthen shift 23
178 SHORT reduce 20
178 classbodydecls shift 203
142 RBRACE shift 204
11 BECOME reduce 36
134 LPAREN reduce 106
95 STATIC reduce 75
97 CHAR shift 88
190 STATIC reduce 11
106 DOT shift 41
217 INT shift 127
111 ABSTRACT reduce 79
192 name shift 3
0 BOF shift 205
52 arrayaccess shift 30
26 LBRACE reduce 115
150 ID shift 2
130 FOR reduce 66
117 EOF reduce 54
189 retstmnt shift 76
205 CLASS reduce 91
182 fieldaccess shift 54
91 arraytype shift 45
100 NATIVE reduce 78
5 SEMI reduce 137
23 WHILE reduce 113
144 SHORT reduce 80
55 LBRACE reduce 116
216 name shift 106
163 block shift 206
18 ID shift 2
144 STATIC reduce 80
175 qualifiedname shift 21
217 type shift 207
204 lefthand shift 1
154 methoddeclor shift 208
90 BOOLEAN reduce 19
173 BYTE reduce 18
95 PUBLIC reduce 75
119 lefthand shift 1
91 fieldaccess shift 54
68 RBRACE reduce 68
49 EOF reduce 129
213 FINAL reduce 69
123 EOF reduce 22
34 SEMI shift 209
181 primary shift 48
52 expr shift 210
80 LBRACE reduce 112
143 RBRACE reduce 46
182 THIS shift 27
214 INTERFACE reduce 53
144 FINAL reduce 80
117 CLASS reduce 54
197 FOR reduce 15
217 qualifiedname shift 21
16 DOT reduce 98
136 LBRACE reduce 70
60 ID reduce 86
167 PROTECTED reduce 82
192 assign shift 84
116 BECOME reduce 12
116 BYTE reduce 12
161 RBRACE reduce 126
78 simplename shift 6
217 CHAR shift 88
76 BOOLEAN reduce 125
71 DOT reduce 74
49 ondemandimport shift 211
18 arraycreate shift 16
50 ID reduce 31
204 classcreateexpr shift 40
173 PUBLIC reduce 18
19 RBRACE shift 212
118 COMMA shift 152
62 LBRACE reduce 123
195 BYTE reduce 67
206 BOOLEAN reduce 23
76 THIS reduce 125
147 qualifiedname shift 21
197 CHAR reduce 15
26 FOR reduce 115
22 BECOME reduce 112
179 RETURN reduce 45
152 arrayaccess shift 33
192 for shift 55
14 BECOME reduce 36
110 fornoshort shift 53
76 LBRACE reduce 125
78 RBRACE reduce 43
110 FOR shift 79
91 primary shift 48
217 modifier shift 167
23 LPAREN reduce 113
56 CHAR reduce 114
36 THIS reduce 124
147 RETURN shift 34
15 RBRACE reduce 120
97 arraytype shift 45
78 arraycreate shift 16
95 BYTE reduce 75
110 assign shift 84
14 ID shift 2
150 assignexpr shift 42
192 emptystmnt shift 62
188 methodbody shift 213
83 SEMI reduce 52
182 methodinvoke shift 20
110 emptystmnt shift 62
87 BYTE shift 60
189 primnoarray shift 39
11 qualifiedname shift 21
104 assignexpr shift 42
214 FINAL reduce 53
49 importdecl shift 214
219 NATIVE reduce 17
64 expr shift 215
182 retstmnt shift 76
144 ABSTRACT reduce 80
14 RBRACK shift 157
103 NATIVE reduce 76
11 arrayaccess shift 30
173 SHORT reduce 18
110 ifthenelse shift 56
28 BECOME reduce 10
140 ELSE reduce 110
181 retstmnt shift 76
147 FOR shift 79
2 LPAREN reduce 85
173 CHAR reduce 18
217 ID shift 2
25 SEMI reduce 34
55 FOR reduce 116
95 INTERFACE reduce 75
124 THIS reduce 13
156 ID reduce 77
189 LPAREN shift 47
195 BOOLEAN reduce 67
47 condexpr shift 17
72 SEMI reduce 65
64 arrayaccess shift 30
121 LPAREN shift 216
204 RETURN shift 34
203 modifiers shift 217
181 arrayaccess shift 33
22 ID reduce 112
102 variabledeclid shift 218
22 IF reduce 112
4 RBRACE reduce 14
80 BOOLEAN reduce 112
5 COMMA reduce 137
205 PUBLIC reduce 91
4 RETURN reduce 14
141 LBRACE reduce 72
190 INT reduce 11
110 stmntwotrail shift 80
114 BECOME reduce 36
189 exprstmnt shift 36
130 LPAREN reduce 66
203 classmemberdecl shift 219
61 LBRACE reduce 122
132 PUBLIC reduce 32
204 simplename shift 6
211 IMPORT reduce 55
111 INTERFACE reduce 79
110 LBRACE shift 4
37 SEMI reduce 136
