67
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
75
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
constructordecl
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
132
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interface
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
193
1331
104 COMMA reduce 112
167 INT reduce 104
102 ABSTRACT reduce 68
142 qualifiedname shift 1
20 INTERFACE reduce 103
83 RBRACE reduce 106
60 name shift 2
147 COMMA reduce 128
45 WHILE reduce 15
21 CHAR reduce 115
187 SEMI reduce 62
166 RBRACE reduce 19
92 simplename shift 3
66 LBRACK shift 4
17 assignexpr shift 5
102 PUBLIC reduce 68
174 EOF reduce 47
63 FOR reduce 131
171 INT reduce 22
18 BECOME reduce 51
26 classmemberdecl shift 6
88 PROTECTED reduce 74
136 condexpr shift 7
45 SHORT reduce 15
74 FINAL reduce 60
118 COMMA reduce 87
29 INT reduce 72
15 param shift 8
6 FINAL reduce 18
74 BYTE reduce 60
106 ID shift 9
183 INT shift 10
112 variabledecl shift 11
52 IF reduce 116
107 arraytype shift 12
58 FINAL reduce 73
52 ID reduce 116
22 assignexpr shift 5
137 SEMI reduce 130
94 ABSTRACT reduce 37
37 COMMA reduce 109
94 BOOLEAN reduce 37
17 expr shift 13
192 WHILE reduce 101
107 numerictype shift 14
113 COMMA shift 15
146 BECOME reduce 36
146 arraycreate shift 16
75 RETURN reduce 105
24 SEMI reduce 107
41 RETURN shift 17
146 arrayaccess shift 18
52 WHILE reduce 116
74 STATIC reduce 60
136 simplename shift 3
83 ID reduce 106
162 LBRACE shift 19
83 IF reduce 106
9 SEMI reduce 77
52 RETURN reduce 116
2 BECOME reduce 49
57 RPAREN reduce 3
95 EOF reduce 82
55 simplename shift 3
18 DOT reduce 97
151 SEMI shift 20
64 WHILE reduce 33
131 simplename shift 3
41 exprstmnt shift 21
128 BOOLEAN reduce 70
2 LBRACK shift 22
21 SHORT reduce 115
17 ID shift 9
142 assign shift 23
192 FOR reduce 101
95 INTERFACE reduce 82
46 ABSTRACT reduce 0
74 SHORT reduce 60
167 IF reduce 104
82 BECOME reduce 36
135 PROTECTED reduce 83
167 ID reduce 104
40 BYTE reduce 114
67 ABSTRACT reduce 32
19 BOOLEAN reduce 21
120 LBRACK reduce 81
52 LBRACE reduce 116
114 while shift 24
15 type shift 25
36 assign shift 23
181 BECOME reduce 36
29 BOOLEAN reduce 72
94 CHAR reduce 37
8 RPAREN reduce 88
64 IF reduce 33
64 ID reduce 33
164 INT reduce 58
148 PUBLIC reduce 61
27 COMMA reduce 2
22 qualifiedname shift 1
19 classbodydecls shift 26
50 COMMA reduce 85
15 numerictype shift 14
136 expr shift 27
91 ELSE reduce 113
157 ID reduce 12
106 BYTE shift 28
129 RETURN reduce 43
157 IF reduce 12
192 ELSE reduce 101
107 NATIVE shift 29
75 INT reduce 105
26 PUBLIC reduce 73
126 SHORT shift 30
74 VOID reduce 60
171 BYTE reduce 22
139 RBRACE reduce 31
95 IMPORT reduce 82
5 RBRACK reduce 34
142 assignexpr shift 5
102 NATIVE reduce 68
131 primnoarray shift 31
106 qualifiedname shift 1
26 PROTECTED reduce 73
157 RBRACE reduce 12
20 SEMI reduce 103
91 SHORT reduce 113
146 simplename shift 3
91 LBRACE reduce 113
90 variabledecl shift 11
75 LBRACE reduce 105
135 NATIVE reduce 83
50 RPAREN reduce 85
29 SHORT reduce 72
44 NATIVE reduce 59
114 stmntnotrail shift 32
181 fieldaccess shift 33
94 PUBLIC reduce 37
142 RPAREN reduce 1
115 WHILE shift 34
71 RETURN reduce 108
24 RBRACE reduce 107
103 PUBLIC reduce 84
91 RBRACE reduce 113
131 THIS shift 35
127 COMMA shift 36
142 expr shift 27
109 BECOME reduce 49
134 IF reduce 16
134 ID reduce 16
72 ID reduce 99
49 DOT reduce 94
131 assign shift 37
65 COMMA reduce 111
146 primary shift 38
91 CHAR reduce 113
164 CHAR reduce 58
135 file shift 39
91 FOR reduce 113
115 emptystmnt shift 40
149 EOF reduce 38
99 RPAREN shift 41
47 condexpr shift 7
29 PROTECTED reduce 72
143 RPAREN reduce 126
106 type shift 25
38 DOT shift 42
47 BECOME reduce 36
142 COMMA reduce 1
177 INT reduce 42
148 BOOLEAN reduce 61
126 RETURN shift 17
181 SEMI reduce 5
167 SEMI reduce 104
165 PUBLIC reduce 20
95 ABSTRACT reduce 82
58 NATIVE reduce 73
88 NATIVE reduce 74
148 RBRACE reduce 61
128 VOID reduce 70
98 FOR reduce 102
30 ID reduce 79
169 SEMI reduce 39
136 RPAREN reduce 1
24 CHAR reduce 107
152 DOT shift 43
129 INT reduce 43
40 SEMI reduce 114
32 INT reduce 104
67 NATIVE reduce 32
166 SHORT reduce 19
75 RBRACE reduce 105
166 PROTECTED reduce 19
124 block shift 44
91 SEMI reduce 113
165 STATIC reduce 20
75 CHAR reduce 105
64 SHORT reduce 33
176 BYTE reduce 71
6 BYTE reduce 18
115 LBRACE shift 45
45 SEMI reduce 15
154 CLASS reduce 44
134 BOOLEAN reduce 16
39 EOF shift 46
23 COMMA reduce 10
88 STATIC reduce 74
136 COMMA reduce 1
1 IMPLEMENTS reduce 76
34 LPAREN shift 47
68 DOT reduce 95
22 arrayaccess shift 48
163 qualifiedname shift 1
102 BOOLEAN reduce 68
189 RPAREN shift 49
67 BOOLEAN reduce 32
1 SEMI reduce 76
165 RBRACE reduce 20
94 SHORT reduce 37
102 CLASS reduce 68
6 ID reduce 18
25 variabledeclid shift 50
63 RBRACE reduce 131
36 assignexpr shift 5
26 STATIC reduce 73
142 lefthand shift 51
6 STATIC reduce 18
41 retstmnt shift 52
146 methodinvoke shift 53
19 RBRACE reduce 21
61 FINAL reduce 46
103 CLASS reduce 84
67 PUBLIC reduce 32
58 classdecl shift 54
29 ABSTRACT reduce 72
94 NATIVE reduce 37
63 WHILE reduce 131
21 RBRACE reduce 115
26 NATIVE reduce 73
148 FINAL reduce 61
181 assign shift 23
61 PROTECTED reduce 46
104 RBRACE reduce 112
128 PUBLIC reduce 70
88 VOID reduce 74
131 ID shift 9
58 IMPORT shift 55
80 RBRACK shift 56
171 ABSTRACT reduce 22
7 RBRACE reduce 9
61 NATIVE reduce 46
44 BYTE reduce 59
165 NATIVE reduce 20
169 LBRACE reduce 39
36 expr shift 57
7 RBRACK reduce 9
129 SEMI reduce 43
154 importdecls shift 58
64 RETURN reduce 33
134 CHAR reduce 16
115 exprstmnt shift 21
146 DOT reduce 36
92 qualifiedname shift 1
157 RETURN reduce 12
107 qualifiedname shift 1
165 INT reduce 20
181 variableinit shift 59
70 BECOME reduce 98
88 INTERFACE reduce 74
58 PUBLIC reduce 73
19 PROTECTED reduce 21
11 SEMI reduce 127
23 RPAREN reduce 10
36 ID shift 9
103 NATIVE reduce 84
63 BOOLEAN reduce 131
92 ID shift 9
76 LPAREN shift 60
186 WHILE reduce 14
92 condexpr shift 7
157 FINAL reduce 12
52 FOR reduce 116
181 COMMA reduce 5
142 ID shift 9
32 WHILE reduce 104
128 SHORT reduce 70
9 DOT reduce 77
97 NATIVE reduce 69
174 INTERFACE reduce 47
58 singletypeimport shift 61
153 FOR reduce 13
26 INT reduce 73
185 COMMA reduce 66
44 PUBLIC reduce 59
157 BOOLEAN reduce 12
83 RETURN reduce 106
112 ID shift 62
121 COMMA reduce 125
17 condexpr shift 7
136 BECOME reduce 36
120 ID reduce 81
121 BECOME reduce 125
109 DOT shift 43
41 stmnt shift 63
41 SEMI shift 64
131 lefthand shift 51
67 RBRACE reduce 32
33 BECOME reduce 50
10 ID reduce 80
36 qualifiedname shift 1
148 SHORT reduce 61
3 ID reduce 75
171 BOOLEAN reduce 22
24 BOOLEAN reduce 107
21 LBRACE reduce 115
61 INTERFACE reduce 46
143 COMMA reduce 126
96 DOT shift 43
60 condexpr shift 7
171 CHAR reduce 22
187 LBRACE reduce 62
186 BOOLEAN reduce 14
36 arrayaccess shift 48
135 EOF reduce 83
94 STATIC reduce 37
26 VOID reduce 73
192 SEMI reduce 101
67 FINAL reduce 32
166 INT reduce 19
131 stmntexpr shift 65
146 primnoarray shift 31
153 CHAR reduce 13
95 NATIVE reduce 82
110 NATIVE reduce 45
61 ABSTRACT reduce 46
100 variabledeclid shift 66
148 NATIVE reduce 61
96 IMPLEMENTS reduce 25
40 RBRACE reduce 114
26 methoddecl shift 67
131 fieldaccess shift 68
47 arrayaccess shift 48
183 ID shift 9
64 RBRACE reduce 33
44 BOOLEAN reduce 59
173 RBRACK shift 69
95 SEMI reduce 82
55 ID shift 9
134 SEMI reduce 16
24 RETURN reduce 107
163 condexpr shift 7
119 ID shift 70
63 SHORT reduce 131
95 FINAL reduce 82
110 INTERFACE reduce 45
28 ID reduce 78
95 PUBLIC reduce 82
129 LBRACE reduce 43
191 RPAREN reduce 8
115 for shift 71
106 name shift 72
103 PROTECTED reduce 84
156 methoddeclor shift 73
139 CHAR reduce 31
94 VOID reduce 37
129 RBRACE reduce 43
65 RBRACE reduce 111
124 SEMI shift 74
157 CHAR reduce 12
165 SHORT reduce 20
178 LBRACE reduce 26
144 RETURN shift 17
134 WHILE reduce 16
98 RBRACE reduce 102
95 STATIC reduce 82
144 SEMI shift 64
169 INT reduce 39
186 IF reduce 14
114 ifthen shift 75
144 IF shift 76
176 ABSTRACT reduce 71
60 assign shift 23
60 qualifiedname shift 1
113 RPAREN shift 77
142 BECOME reduce 36
17 simplename shift 3
82 condexpr shift 7
82 ID shift 9
126 FOR shift 78
53 DOT reduce 96
47 name shift 2
20 PROTECTED reduce 103
41 WHILE shift 34
22 simplename shift 3
114 for shift 71
188 PUBLIC shift 79
74 INT reduce 60
135 IMPORT reduce 83
142 fieldaccess shift 33
70 IMPLEMENTS reduce 98
7 COMMA reduce 9
22 expr shift 80
148 PROTECTED reduce 61
6 VOID reduce 18
131 forupdate shift 81
164 FOR reduce 58
102 STATIC reduce 68
169 FOR reduce 39
24 INT reduce 107
20 IMPORT reduce 103
146 LPAREN shift 82
41 ifthenelse shift 83
16 DOT reduce 90
74 PROTECTED reduce 60
6 INT reduce 18
17 assign shift 23
126 retstmnt shift 52
166 VOID reduce 19
163 name shift 2
30 LBRACK reduce 79
181 qualifiedname shift 1
97 PUBLIC reduce 69
103 IMPORT reduce 84
154 STATIC reduce 44
110 STATIC reduce 45
126 qualifiedname shift 1
79 INT reduce 67
181 expr shift 84
32 CHAR reduce 104
45 RETURN reduce 15
154 INTERFACE reduce 44
126 BOOLEAN shift 85
88 FINAL reduce 74
135 INTERFACE reduce 83
88 ABSTRACT reduce 74
168 COMMA reduce 65
40 LBRACE reduce 114
181 ID shift 9
108 LBRACK shift 86
110 PROTECTED reduce 45
103 STATIC reduce 84
82 name shift 2
136 ID shift 9
133 EXTENDS shift 87
165 PROTECTED reduce 20
188 modifier shift 88
122 interface shift 89
45 INT reduce 15
183 type shift 90
60 fieldaccess shift 33
114 block shift 91
6 CHAR reduce 18
191 SEMI reduce 8
143 SEMI reduce 126
128 CHAR reduce 70
88 BYTE reduce 74
79 CHAR reduce 67
163 lefthand shift 51
163 ID shift 9
139 BOOLEAN reduce 31
83 CHAR reduce 106
148 STATIC reduce 61
181 lefthand shift 51
51 assignop shift 92
130 ID reduce 6
176 CLASS reduce 71
144 for shift 71
98 RETURN reduce 102
136 assignexpr shift 5
41 while shift 24
24 IF reduce 107
164 SEMI reduce 58
70 LBRACK reduce 98
24 ID reduce 107
15 qualifiedname shift 1
72 DOT shift 43
131 LPAREN shift 82
79 BOOLEAN reduce 67
153 BOOLEAN reduce 13
167 WHILE reduce 104
19 STATIC reduce 21
11 COMMA reduce 127
139 PROTECTED reduce 31
15 referencetype shift 93
126 LBRACE shift 45
181 assignexpr shift 5
176 CHAR reduce 71
184 SEMI shift 94
64 FOR reduce 33
59 COMMA reduce 124
29 PUBLIC reduce 72
114 WHILE shift 34
115 IF shift 76
45 ID reduce 15
5 SEMI reduce 34
45 IF reduce 15
117 DOT shift 43
75 BOOLEAN reduce 105
157 ABSTRACT reduce 12
176 PUBLIC reduce 71
169 SHORT reduce 39
107 simplename shift 3
70 LBRACE reduce 98
83 SEMI reduce 106
179 EOF reduce 17
92 arrayaccess shift 48
17 arrayaccess shift 48
71 INT reduce 108
7 RPAREN reduce 9
111 SEMI shift 95
139 ID reduce 31
176 PROTECTED reduce 71
177 RBRACE reduce 42
94 BYTE reduce 37
47 fieldaccess shift 33
57 COMMA reduce 3
139 ABSTRACT reduce 31
101 ID shift 9
79 NATIVE reduce 67
102 BYTE reduce 68
75 SHORT reduce 105
88 BOOLEAN reduce 74
9 LPAREN reduce 77
128 FINAL reduce 70
1 DOT reduce 76
61 PUBLIC reduce 46
163 fieldaccess shift 33
102 PROTECTED reduce 68
87 name shift 96
29 FINAL reduce 72
87 qualifiedname shift 1
177 LBRACE reduce 42
188 STATIC shift 97
148 ID reduce 61
74 NATIVE reduce 60
174 PROTECTED reduce 47
126 while shift 24
13 SEMI shift 98
60 BECOME reduce 36
47 expr shift 99
185 RBRACE reduce 66
142 simplename shift 3
139 STATIC reduce 31
82 simplename shift 3
79 BYTE reduce 67
64 CHAR reduce 33
106 BOOLEAN shift 85
40 INT reduce 114
71 IF reduce 108
181 arrayaccess shift 48
164 ID reduce 58
63 RETURN reduce 131
144 exprstmnt shift 21
184 COMMA shift 100
1 LBRACE reduce 76
71 ID reduce 108
154 ABSTRACT reduce 44
97 PROTECTED reduce 69
36 name shift 2
79 INTERFACE reduce 67
35 DOT reduce 93
91 BYTE reduce 113
171 STATIC reduce 22
20 CLASS reduce 103
169 CHAR reduce 39
192 RETURN reduce 101
164 IF reduce 58
153 BYTE reduce 13
135 PACKAGE shift 101
64 ELSE reduce 33
6 NATIVE reduce 18
10 LBRACK reduce 80
160 RBRACE reduce 35
89 LBRACE reduce 27
87 simplename shift 3
169 RETURN reduce 39
177 SHORT reduce 42
40 SHORT reduce 114
188 PROTECTED shift 102
186 BYTE reduce 14
128 BYTE reduce 70
102 INT reduce 68
131 BECOME reduce 36
61 SEMI reduce 46
176 VOID reduce 71
117 SEMI shift 103
92 BECOME reduce 36
67 ID reduce 32
88 INT reduce 74
24 LBRACE reduce 107
52 SHORT reduce 116
82 arrayaccess shift 48
131 DOT reduce 36
19 ABSTRACT reduce 21
20 EOF reduce 103
29 BYTE reduce 72
121 RPAREN reduce 125
15 BYTE shift 28
114 exprstmnt shift 21
144 stmntnotrail shift 32
83 INT reduce 106
146 stmntexpr shift 104
146 fieldaccess shift 68
51 BECOME shift 105
62 LPAREN shift 106
110 SEMI reduce 45
126 stmntnotrail shift 32
129 BYTE reduce 43
167 RBRACE reduce 104
107 ID shift 9
67 PROTECTED reduce 32
26 modifiers shift 107
97 FINAL reduce 69
181 simplename shift 3
97 SHORT reduce 69
6 PUBLIC reduce 18
134 FOR reduce 16
22 name shift 2
128 CLASS reduce 70
54 EOF reduce 120
47 ID shift 9
66 SEMI reduce 123
107 name shift 72
32 SHORT reduce 104
79 ID reduce 67
64 BOOLEAN reduce 33
108 ID reduce 117
186 ID reduce 14
88 SHORT reduce 74
28 LBRACK reduce 78
177 BOOLEAN reduce 42
121 SEMI reduce 125
95 PROTECTED reduce 82
52 BYTE reduce 116
1 LBRACK reduce 76
153 RETURN reduce 13
146 ID shift 9
114 retstmnt shift 52
106 primitivetype shift 108
147 SEMI reduce 128
110 ABSTRACT reduce 45
6 RBRACE reduce 18
137 COMMA reduce 130
83 LBRACE reduce 106
146 qualifiedname shift 1
131 name shift 109
17 qualifiedname shift 1
3 SEMI reduce 75
183 qualifiedname shift 1
9 ID reduce 77
26 ID reduce 73
165 ID reduce 20
58 importdecl shift 110
84 SEMI reduce 129
67 BYTE reduce 32
139 NATIVE reduce 31
119 STAR shift 111
94 FINAL reduce 37
20 PUBLIC reduce 103
17 lefthand shift 51
107 type shift 112
106 params shift 113
36 simplename shift 3
71 LBRACE reduce 108
23 SEMI reduce 10
167 SHORT reduce 104
177 RETURN reduce 42
171 SHORT reduce 22
55 qualifiedname shift 1
67 CHAR reduce 32
15 arraytype shift 12
60 simplename shift 3
41 emptystmnt shift 40
17 BECOME reduce 36
94 PROTECTED reduce 37
153 SEMI reduce 13
134 RBRACE reduce 16
126 SEMI shift 64
126 BYTE shift 28
122 qualifiedname shift 1
63 CHAR reduce 131
192 INT reduce 101
21 ELSE reduce 115
103 SEMI reduce 84
175 EOF reduce 121
167 ELSE shift 114
91 INT reduce 113
154 IMPORT reduce 44
164 WHILE reduce 58
123 RPAREN shift 115
162 classbody shift 116
98 ID reduce 102
128 STATIC reduce 70
135 ABSTRACT reduce 83
98 IF reduce 102
92 name shift 2
186 FOR reduce 14
97 ABSTRACT reduce 69
122 simplename shift 3
126 primitivetype shift 108
165 FINAL reduce 20
101 name shift 117
24 BYTE reduce 107
164 BOOLEAN reduce 58
163 assign shift 23
136 qualifiedname shift 1
177 CHAR reduce 42
32 RETURN reduce 104
48 BECOME reduce 51
77 SEMI reduce 64
71 BOOLEAN reduce 108
174 SEMI reduce 47
107 referencetype shift 93
165 BYTE reduce 20
146 lefthand shift 51
40 WHILE reduce 114
112 variabledeclid shift 66
128 ABSTRACT reduce 70
164 RETURN reduce 58
75 WHILE reduce 105
167 BOOLEAN reduce 104
44 PROTECTED reduce 59
176 FINAL reduce 71
29 NATIVE reduce 72
60 arrayaccess shift 48
106 param shift 118
126 type shift 90
174 FINAL reduce 47
8 COMMA reduce 88
82 qualifiedname shift 1
139 PUBLIC reduce 31
151 DOT shift 119
17 name shift 2
15 CHAR shift 120
62 BECOME reduce 125
3 LPAREN reduce 75
75 ID reduce 105
75 IF reduce 105
29 CHAR reduce 72
188 NATIVE shift 29
100 ID shift 121
178 IMPLEMENTS shift 122
190 SEMI reduce 40
106 COMMA reduce 86
121 LBRACK reduce 125
183 numerictype shift 14
52 BOOLEAN reduce 116
144 block shift 91
115 while shift 24
169 IF reduce 39
169 ID reduce 39
21 SEMI reduce 115
134 INT reduce 16
82 assignexpr shift 5
60 expr shift 123
83 SHORT reduce 106
45 RBRACE reduce 15
166 PUBLIC reduce 19
95 CLASS reduce 82
26 methodhead shift 124
52 SEMI reduce 116
116 EOF reduce 23
90 variabledecls shift 125
62 COMMA reduce 125
26 BOOLEAN reduce 73
45 blockstmnts shift 126
142 arglist shift 127
19 SHORT reduce 21
40 ELSE reduce 114
176 NATIVE reduce 71
87 ID shift 9
23 RBRACE reduce 10
79 VOID reduce 67
23 RBRACK reduce 10
186 SEMI reduce 14
177 BYTE reduce 42
188 ABSTRACT shift 128
19 PUBLIC reduce 21
26 ABSTRACT reduce 73
146 THIS shift 35
19 NATIVE reduce 21
126 arraytype shift 12
191 COMMA reduce 8
183 referencetype shift 93
37 RBRACE reduce 109
110 FINAL reduce 45
103 EOF reduce 84
97 CHAR reduce 69
26 SHORT reduce 73
92 lefthand shift 51
107 PUBLIC shift 79
107 STATIC shift 97
148 INT reduce 61
83 FOR reduce 106
71 RBRACE reduce 108
114 stmnt shift 129
103 INTERFACE reduce 84
166 BYTE reduce 19
126 CHAR shift 120
96 LBRACE reduce 25
169 RBRACE reduce 39
82 lefthand shift 51
86 RBRACK shift 130
32 RBRACE reduce 104
20 FINAL reduce 103
15 INT shift 10
139 INT reduce 31
21 INT reduce 115
22 lefthand shift 51
126 ID shift 9
41 stmntnotrail shift 32
154 SEMI reduce 44
171 ID reduce 22
41 FOR shift 78
126 IF shift 76
125 SEMI reduce 57
71 CHAR reduce 108
155 SEMI shift 131
134 BYTE reduce 16
157 SEMI reduce 12
97 BOOLEAN reduce 69
129 CHAR reduce 43
148 CHAR reduce 61
19 ID reduce 21
134 LBRACE reduce 16
182 RBRACE shift 132
106 INT shift 10
25 ID shift 121
126 WHILE shift 34
143 LBRACK reduce 126
192 BYTE reduce 101
91 BOOLEAN reduce 113
74 PUBLIC reduce 60
64 INT reduce 33
174 STATIC reduce 47
131 arrayaccess shift 18
166 ID reduce 19
167 RETURN reduce 104
17 fieldaccess shift 33
145 ID shift 133
142 condexpr shift 7
90 variabledeclid shift 66
126 blockstmnt shift 134
44 VOID reduce 59
0 BOF shift 135
126 emptystmnt shift 40
88 PUBLIC reduce 74
97 VOID reduce 69
68 BECOME reduce 50
64 LBRACE reduce 33
19 VOID reduce 21
44 ABSTRACT reduce 59
139 VOID reduce 31
110 IMPORT reduce 45
6 SHORT reduce 18
164 BYTE reduce 58
71 FOR reduce 108
32 SEMI reduce 104
161 LPAREN shift 136
15 ID shift 9
29 ID reduce 72
21 ID reduce 115
144 WHILE shift 34
177 ID reduce 42
1 ID reduce 76
114 RETURN shift 17
74 RBRACE reduce 60
177 IF reduce 42
107 CHAR shift 120
144 FOR shift 78
110 CLASS reduce 45
181 arrayinit shift 137
133 IMPLEMENTS reduce 24
154 PROTECTED reduce 44
21 BOOLEAN reduce 115
186 CHAR reduce 14
3 LBRACK reduce 75
188 INTERFACE shift 138
129 WHILE reduce 43
129 SHORT reduce 43
139 SHORT reduce 31
21 IF reduce 115
26 fielddecl shift 139
3 LBRACE reduce 75
98 INT reduce 102
169 BOOLEAN reduce 39
22 fieldaccess shift 33
62 SEMI reduce 125
107 BYTE shift 28
180 RBRACE reduce 41
183 forinit shift 140
77 LBRACE reduce 64
53 RBRACE reduce 110
164 SHORT reduce 58
67 INT reduce 32
75 BYTE reduce 105
129 BOOLEAN reduce 43
2 DOT shift 43
156 ID shift 141
66 COMMA reduce 123
106 CHAR shift 120
9 LBRACE reduce 77
106 SHORT shift 30
166 BOOLEAN reduce 19
29 VOID reduce 72
103 ABSTRACT reduce 84
115 retstmnt shift 52
109 LPAREN shift 142
148 BYTE reduce 61
114 IF shift 76
107 BOOLEAN shift 85
26 FINAL reduce 73
4 RBRACK shift 143
115 RETURN shift 17
32 FOR reduce 104
167 LBRACE reduce 104
81 RBRACE shift 144
176 STATIC reduce 71
188 CLASS shift 145
58 ABSTRACT reduce 73
165 VOID reduce 20
192 CHAR reduce 101
142 arrayaccess shift 48
148 ABSTRACT reduce 61
180 COMMA shift 146
14 LBRACK reduce 91
9 LBRACK reduce 77
97 CLASS reduce 69
166 ABSTRACT reduce 19
100 variabledecl shift 147
176 INTERFACE reduce 71
109 LBRACK shift 22
107 INT shift 10
103 FINAL reduce 84
71 BYTE reduce 108
73 SEMI reduce 63
191 RBRACK reduce 8
128 PROTECTED reduce 70
139 FINAL reduce 31
56 DOT reduce 4
124 methodbody shift 148
58 typedecl shift 149
24 SHORT reduce 107
19 CHAR reduce 21
52 ELSE reduce 116
40 IF reduce 114
94 ID reduce 37
83 WHILE reduce 106
20 NATIVE reduce 103
192 RBRACE reduce 101
148 VOID reduce 61
3 IMPLEMENTS reduce 75
144 ifthen shift 75
71 SHORT reduce 108
61 STATIC reduce 46
163 arrayaccess shift 48
40 ID reduce 114
79 CLASS reduce 67
186 LBRACE reduce 14
159 COMMA shift 36
153 INT reduce 13
50 LBRACK shift 4
141 LPAREN shift 106
166 CHAR reduce 19
24 FOR reduce 107
183 simplename shift 3
106 referencetype shift 93
163 BECOME reduce 36
157 STATIC reduce 12
125 COMMA shift 100
52 CHAR reduce 116
58 SEMI shift 150
126 name shift 72
107 PROTECTED shift 102
191 RBRACE reduce 8
177 WHILE reduce 42
106 numerictype shift 14
183 name shift 72
44 ID reduce 59
74 BOOLEAN reduce 60
44 RBRACE reduce 59
36 BECOME reduce 36
115 ifthen shift 75
105 ID reduce 11
79 ABSTRACT reduce 67
55 name shift 151
98 SHORT reduce 102
15 name shift 72
82 fieldaccess shift 33
146 name shift 109
129 FOR reduce 43
61 IMPORT reduce 46
146 assign shift 37
97 INT reduce 69
183 arraytype shift 12
136 fieldaccess shift 33
58 EOF reduce 119
107 ABSTRACT shift 128
70 DOT reduce 98
135 STATIC reduce 83
153 WHILE reduce 13
171 VOID reduce 22
135 SEMI reduce 83
122 name shift 152
102 CHAR reduce 68
44 STATIC reduce 59
29 INTERFACE reduce 72
167 BYTE reduce 104
131 primary shift 38
44 CHAR reduce 59
136 lefthand shift 51
126 localvardeclstmnt shift 153
70 LPAREN reduce 98
181 condexpr shift 7
85 ID reduce 92
135 packagedecl shift 154
126 INT shift 10
136 arrayaccess shift 48
171 RBRACE reduce 22
58 CLASS reduce 73
126 ifthen shift 75
6 ABSTRACT reduce 18
101 qualifiedname shift 1
59 SEMI reduce 124
174 PUBLIC reduce 47
53 COMMA reduce 110
52 INT reduce 116
169 WHILE reduce 39
60 ID shift 9
70 SEMI reduce 98
154 EOF reduce 44
97 BYTE reduce 69
83 BYTE reduce 106
47 simplename shift 3
171 NATIVE reduce 22
12 ID reduce 100
176 SHORT reduce 71
97 INTERFACE reduce 69
163 expr shift 155
107 VOID shift 156
79 STATIC reduce 67
152 LBRACE reduce 30
157 LBRACE reduce 12
7 SEMI reduce 9
177 FOR reduce 42
154 NATIVE reduce 44
126 RBRACE shift 157
102 SHORT reduce 68
41 IF shift 76
32 BYTE reduce 104
63 INT reduce 131
41 LBRACE shift 45
150 EOF reduce 122
170 extendsinterfaces shift 158
24 WHILE reduce 107
79 FINAL reduce 67
153 SHORT reduce 13
5 RPAREN reduce 34
183 BOOLEAN shift 85
79 SHORT reduce 67
128 INTERFACE reduce 70
174 ABSTRACT reduce 47
41 for shift 71
136 arglist shift 159
165 CHAR reduce 20
58 STATIC reduce 73
192 SHORT reduce 101
157 PUBLIC reduce 12
146 SEMI shift 160
192 IF reduce 101
142 name shift 2
58 INTERFACE reduce 73
183 BYTE shift 28
26 BYTE reduce 73
88 CLASS reduce 74
71 WHILE reduce 108
192 ID reduce 101
42 ID shift 161
20 STATIC reduce 103
36 fieldaccess shift 33
44 INT reduce 59
174 NATIVE reduce 47
75 SEMI reduce 105
178 interfaces shift 162
5 COMMA reduce 34
106 simplename shift 3
1 BECOME reduce 76
140 SEMI shift 163
61 CLASS reduce 46
157 PROTECTED reduce 12
101 simplename shift 3
88 CHAR reduce 74
27 RPAREN reduce 2
15 BOOLEAN shift 85
97 STATIC reduce 69
186 RETURN reduce 14
168 RBRACE reduce 65
114 FOR shift 78
144 ifthenelse shift 83
157 FOR reduce 12
136 name shift 2
126 numerictype shift 14
135 PUBLIC reduce 83
143 BECOME reduce 126
172 SEMI shift 164
44 SHORT reduce 59
32 BOOLEAN reduce 104
64 BYTE reduce 33
1 LPAREN reduce 76
47 assign shift 23
83 BOOLEAN reduce 106
44 FINAL reduce 59
26 constructordecl shift 165
73 LBRACE reduce 63
26 staticinit shift 166
165 BOOLEAN reduce 20
74 ID reduce 60
93 ID reduce 118
84 COMMA reduce 129
114 ifthenelse shift 83
15 primitivetype shift 108
115 stmntnotrail shift 167
126 ifthenelse shift 83
98 BOOLEAN reduce 102
157 INT reduce 12
134 SHORT reduce 16
40 RETURN reduce 114
21 WHILE reduce 115
61 EOF reduce 46
41 block shift 91
102 ID reduce 68
166 STATIC reduce 19
102 INTERFACE reduce 68
166 FINAL reduce 19
131 qualifiedname shift 1
183 CHAR shift 120
127 RPAREN shift 168
15 SHORT shift 30
177 SEMI reduce 42
74 ABSTRACT reduce 60
63 BYTE reduce 131
181 name shift 2
144 stmnt shift 169
153 ID reduce 13
107 primitivetype shift 108
176 ID reduce 71
153 IF reduce 13
91 WHILE reduce 113
138 ID shift 170
14 ID reduce 91
47 qualifiedname shift 1
64 SEMI reduce 33
131 arraycreate shift 16
67 SHORT reduce 32
160 COMMA reduce 35
132 EOF reduce 48
183 SHORT shift 30
163 simplename shift 3
174 IMPORT reduce 47
167 FOR reduce 104
98 WHILE reduce 102
41 ifthen shift 75
26 classbodydecl shift 171
74 CHAR reduce 60
186 RBRACE reduce 14
126 localvardecl shift 172
131 SEMI shift 160
43 ID shift 70
72 LBRACK shift 173
115 ifthenelse shift 83
110 EOF reduce 45
114 SEMI shift 64
29 CLASS reduce 72
176 INT reduce 71
20 ABSTRACT reduce 103
67 VOID reduce 32
183 primitivetype shift 108
157 WHILE reduce 12
102 VOID reduce 68
58 ondemandimport shift 174
63 SEMI reduce 131
6 BOOLEAN reduce 18
40 BOOLEAN reduce 114
174 CLASS reduce 47
58 interfacedecl shift 175
144 LBRACE shift 45
188 FINAL shift 176
60 lefthand shift 51
126 exprstmnt shift 21
144 retstmnt shift 52
98 ELSE reduce 102
115 stmnt shift 177
52 RBRACE reduce 116
19 FINAL reduce 21
110 PUBLIC reduce 45
126 block shift 91
165 ABSTRACT reduce 20
171 PROTECTED reduce 22
106 arraytype shift 12
128 NATIVE reduce 70
98 BYTE reduce 102
22 BECOME reduce 36
21 FOR reduce 115
115 FOR shift 78
45 FOR reduce 15
82 assign shift 23
157 BYTE reduce 12
69 ID reduce 7
133 super shift 178
15 simplename shift 3
114 LBRACE shift 45
26 RBRACE shift 179
3 BECOME reduce 75
98 SEMI reduce 102
128 INT reduce 70
129 ID reduce 43
85 LBRACK reduce 92
129 IF reduce 43
79 PUBLIC reduce 67
88 ID reduce 74
47 lefthand shift 51
153 RBRACE reduce 13
45 BOOLEAN reduce 15
192 LBRACE reduce 101
157 VOID reduce 12
126 for shift 71
58 PROTECTED reduce 73
171 PUBLIC reduce 22
131 stmntexprlst shift 180
92 fieldaccess shift 33
63 ID reduce 131
63 IF reduce 131
29 STATIC reduce 72
153 LBRACE reduce 13
105 BECOME reduce 11
136 assign shift 23
66 BECOME shift 181
158 LBRACE shift 182
78 LBRACE shift 183
107 SHORT shift 30
118 RPAREN reduce 87
22 assign shift 23
94 INT reduce 37
135 FINAL reduce 83
112 variabledecls shift 184
192 BOOLEAN reduce 101
19 INT reduce 21
164 RBRACE reduce 58
159 RPAREN shift 185
186 SHORT reduce 14
168 DOT reduce 65
169 BYTE reduce 39
126 stmnt shift 186
26 CHAR reduce 73
32 IF reduce 104
75 FOR reduce 105
133 LBRACE reduce 24
112 methoddeclor shift 187
102 FINAL reduce 68
107 modifier shift 88
97 ID reduce 69
157 SHORT reduce 12
114 emptystmnt shift 40
124 LBRACE shift 45
45 BYTE reduce 15
106 RPAREN reduce 86
21 RETURN reduce 115
186 INT reduce 14
94 RBRACE reduce 37
60 assignexpr shift 5
6 PROTECTED reduce 18
107 FINAL shift 176
47 assignexpr shift 5
115 SEMI shift 64
32 ID reduce 104
171 FINAL reduce 22
92 assign shift 23
131 methodinvoke shift 53
176 BOOLEAN reduce 71
36 lefthand shift 51
31 DOT reduce 89
67 STATIC reduce 32
22 ID shift 9
157 NATIVE reduce 12
40 FOR reduce 114
144 while shift 24
139 BYTE reduce 31
128 ID reduce 70
36 condexpr shift 7
62 LBRACK reduce 125
154 PUBLIC reduce 44
126 simplename shift 3
163 assignexpr shift 5
71 SEMI reduce 108
58 modifiers shift 188
21 BYTE reduce 115
9 IMPLEMENTS reduce 77
166 NATIVE reduce 19
45 LBRACE reduce 15
82 expr shift 189
183 localvardecl shift 190
98 CHAR reduce 102
154 FINAL reduce 44
144 emptystmnt shift 40
56 BECOME reduce 4
22 condexpr shift 7
157 ELSE reduce 12
91 RETURN reduce 113
164 LBRACE reduce 58
70 ID reduce 98
45 CHAR reduce 15
91 IF reduce 113
134 RETURN reduce 16
91 ID reduce 113
98 LBRACE reduce 102
115 block shift 91
92 assignexpr shift 191
79 PROTECTED reduce 67
122 ID shift 9
63 LBRACE reduce 131
19 BYTE reduce 21
90 ID shift 121
135 CLASS reduce 83
167 CHAR reduce 104
32 LBRACE reduce 104
3 DOT reduce 75
9 BECOME reduce 77
17 SEMI shift 192
40 CHAR reduce 114
126 referencetype shift 93
185 DOT reduce 66
