63
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
CHAR
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NUM
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
DOT
IMPORT
IMPLEMENTS
STATIC
INT
EXTENDS
NATIVE
71
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interfaces
interfacedecl
lefthand
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclr
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
116
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
super
super EXTENDS name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methoddeclr ID LPAREN params RPAREN
methodhead modifiers type methoddeclr
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype arraytype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
179
1182
121 variabledeclid shift 1
21 lefthand shift 2
130 FINAL reduce 53
148 BOOLEAN shift 3
48 localvardecl shift 4
162 name shift 5
127 IMPORT reduce 38
176 arrayaccess shift 6
48 referencetype shift 7
78 PUBLIC reduce 39
92 CHAR reduce 85
53 PUBLIC reduce 37
156 DOT reduce 75
136 INT reduce 115
119 PUBLIC reduce 59
16 stmnt shift 8
173 SHORT reduce 16
112 RPAREN reduce 109
48 RETURN shift 9
153 PUBLIC reduce 19
61 ifthen shift 10
162 condexpr shift 11
149 NATIVE reduce 70
10 SHORT reduce 89
118 CHAR reduce 97
152 STATIC reduce 69
149 PUBLIC reduce 70
132 name shift 5
12 ifthen shift 10
92 SEMI reduce 85
97 IF reduce 10
154 SEMI reduce 88
59 BOOLEAN reduce 90
79 SEMI reduce 44
128 BOOLEAN reduce 11
43 RBRACE shift 12
114 RETURN reduce 35
155 BYTE reduce 14
47 ID reduce 66
60 simplename shift 13
16 exprstmnt shift 14
117 fieldaccess shift 15
102 COMMA reduce 108
7 ID reduce 102
19 BECOME reduce 28
119 CLASS reduce 59
21 RPAREN reduce 1
109 NATIVE reduce 54
139 SHORT reduce 86
143 LBRACE reduce 31
116 PUBLIC reduce 59
170 SHORT reduce 23
128 LBRACE reduce 11
59 RBRACE reduce 90
153 CHAR reduce 19
144 RPAREN shift 16
154 FOR reduce 88
60 arrayinit shift 17
95 BOOLEAN reduce 25
97 STATIC reduce 10
116 NATIVE reduce 59
54 BYTE reduce 56
19 fieldaccess shift 15
21 arglist shift 18
92 INT reduce 85
14 INT reduce 99
12 exprstmnt shift 14
88 LPAREN shift 19
160 NATIVE reduce 60
15 BECOME reduce 42
160 ABSTRACT reduce 60
61 LBRACE shift 20
143 RBRACE reduce 31
57 LPAREN shift 21
133 block shift 22
128 SEMI reduce 11
155 RETURN reduce 14
110 DOT reduce 51
147 extendsinterfaces shift 23
122 RBRACK shift 24
87 fieldaccess shift 15
132 fieldaccess shift 15
9 simplename shift 13
87 ID shift 25
116 RBRACE shift 26
153 INT reduce 19
8 BYTE reduce 34
69 INT reduce 18
21 simplename shift 13
97 NATIVE reduce 10
16 RETURN shift 9
22 BYTE reduce 46
92 ELSE reduce 85
111 ABSTRACT reduce 29
21 expr shift 27
101 fieldaccess shift 28
75 COMMA reduce 95
139 LBRACE reduce 86
174 ID shift 25
149 ABSTRACT reduce 70
53 IMPORT reduce 37
109 BYTE reduce 54
173 FINAL reduce 16
116 CHAR reduce 59
120 SEMI reduce 84
99 PROTECTED reduce 36
94 DOT shift 29
153 BYTE reduce 19
162 qualifiedname shift 30
176 BECOME reduce 28
117 condexpr shift 11
60 assign shift 31
84 PROTECTED reduce 17
61 emptystmnt shift 32
48 for shift 33
20 CHAR reduce 13
120 DOT reduce 84
133 SEMI shift 34
116 BOOLEAN reduce 59
132 lefthand shift 2
13 LPAREN reduce 61
149 PROTECTED reduce 70
48 arraytype shift 35
48 ifthen shift 10
11 COMMA reduce 7
54 INT reduce 56
155 IF reduce 14
20 RETURN reduce 13
125 FINAL reduce 24
154 RETURN reduce 88
170 PROTECTED reduce 23
101 DOT reduce 28
136 WHILE reduce 115
101 BECOME reduce 28
152 file shift 36
36 EOF shift 37
173 RBRACE reduce 16
114 FOR reduce 35
174 expr shift 38
177 CHAR shift 39
53 INTERFACE reduce 37
22 PUBLIC reduce 46
46 COMMA reduce 109
19 expr shift 40
24 LBRACK reduce 110
34 PROTECTED reduce 47
10 LBRACE reduce 89
101 assign shift 41
158 STATIC reduce 87
176 assign shift 41
177 numerictype shift 42
75 RBRACE reduce 95
176 forupdate shift 43
161 STATIC reduce 58
87 qualifiedname shift 30
28 BECOME reduce 42
134 INT reduce 57
161 BOOLEAN reduce 58
164 EOF reduce 30
48 BOOLEAN shift 3
95 FOR reduce 25
20 SEMI reduce 13
176 THIS shift 44
61 stmntnotrail shift 45
33 SEMI reduce 92
14 LBRACE reduce 99
84 NATIVE reduce 17
160 INTERFACE reduce 60
177 referencetype shift 7
60 BECOME reduce 28
106 BECOME reduce 28
155 INT reduce 14
70 RBRACE reduce 27
100 ID shift 46
14 FOR reduce 99
101 arrayaccess shift 6
148 INT shift 47
69 STATIC reduce 18
20 blockstmnts shift 48
14 WHILE reduce 99
125 STATIC reduce 24
170 FINAL reduce 23
99 PUBLIC reduce 36
72 BOOLEAN reduce 100
60 expr shift 49
158 SEMI reduce 87
82 variabledeclid shift 50
134 BYTE reduce 57
61 exprstmnt shift 14
152 NATIVE reduce 69
100 methoddeclr shift 51
130 NATIVE reduce 53
85 RBRACE reduce 94
117 BECOME reduce 28
60 arrayaccess shift 52
5 BECOME reduce 41
111 INT reduce 29
163 RBRACE reduce 48
32 RBRACE reduce 98
163 STATIC reduce 48
173 BOOLEAN reduce 16
16 emptystmnt shift 32
119 importdecl shift 53
173 PROTECTED reduce 16
177 ABSTRACT shift 54
14 CHAR reduce 99
10 WHILE reduce 89
163 PUBLIC reduce 48
4 SEMI shift 55
85 COMMA reduce 94
69 BYTE reduce 18
8 FOR reduce 34
174 arrayaccess shift 52
131 COMMA reduce 52
27 RPAREN reduce 2
158 IMPORT reduce 87
161 PUBLIC reduce 58
46 LBRACK reduce 109
101 primary shift 56
169 COMMA reduce 112
97 SEMI reduce 10
21 arrayaccess shift 52
168 ID shift 57
61 FOR shift 58
139 FOR reduce 86
61 ifthenelse shift 59
54 ABSTRACT reduce 56
101 lefthand shift 2
111 FINAL reduce 29
148 arraytype shift 35
32 SHORT reduce 98
158 FINAL reduce 87
50 BECOME shift 60
59 IF reduce 90
125 INT reduce 24
154 BYTE reduce 88
103 RPAREN reduce 3
40 RPAREN shift 61
55 INT reduce 45
106 condexpr shift 11
92 BOOLEAN reduce 85
62 BYTE reduce 91
48 while shift 62
149 CLASS reduce 70
44 DOT reduce 79
101 stmntexpr shift 63
76 param shift 64
92 RETURN reduce 85
14 RETURN reduce 99
148 BYTE shift 65
106 lefthand shift 2
31 SEMI reduce 8
69 NATIVE reduce 18
87 arrayaccess shift 52
108 ID reduce 9
117 assignexpr shift 66
176 stmntexprlst shift 67
97 INT reduce 10
116 ABSTRACT reduce 59
119 EOF reduce 103
78 NATIVE reduce 39
45 FOR reduce 88
170 PUBLIC reduce 23
113 assignexpr shift 68
24 COMMA reduce 110
174 qualifiedname shift 30
98 LBRACE shift 69
60 qualifiedname shift 30
139 WHILE reduce 86
130 CHAR reduce 53
149 STATIC reduce 70
176 SEMI shift 70
97 RETURN reduce 10
59 CHAR reduce 90
46 LPAREN shift 71
130 ABSTRACT reduce 53
3 ID reduce 78
125 PROTECTED reduce 24
136 IF reduce 115
32 RETURN reduce 98
55 BOOLEAN reduce 45
124 FOR reduce 12
10 FOR reduce 89
92 LBRACE reduce 85
99 INTERFACE reduce 36
119 ABSTRACT reduce 59
12 retstmnt shift 72
135 name shift 73
146 STATIC shift 74
160 CLASS reduce 60
176 stmntexpr shift 75
172 COMMA shift 76
10 IF reduce 89
107 RPAREN shift 77
127 INTERFACE reduce 38
69 FINAL reduce 18
148 referencetype shift 7
109 PROTECTED reduce 54
27 COMMA reduce 2
45 RETURN reduce 88
111 PROTECTED reduce 29
32 CHAR reduce 98
119 ondemandimport shift 78
140 CLASS reduce 68
140 PUBLIC reduce 68
176 DOT reduce 28
32 ELSE reduce 98
132 COMMA reduce 1
21 qualifiedname shift 30
124 SHORT reduce 12
62 CHAR reduce 91
128 RBRACE reduce 11
83 RETURN shift 9
151 variabledecls shift 79
9 fieldaccess shift 15
11 SEMI reduce 7
51 LBRACE reduce 50
97 PROTECTED reduce 10
63 RBRACE reduce 96
39 ID reduce 67
8 RBRACE reduce 34
8 RETURN reduce 34
176 simplename shift 13
78 SEMI reduce 39
33 RBRACE reduce 92
59 WHILE reduce 90
118 LBRACE reduce 97
48 primitivetype shift 80
45 WHILE reduce 88
113 arrayaccess shift 52
177 SHORT shift 81
68 RPAREN reduce 6
132 BECOME reduce 28
162 BECOME reduce 28
45 INT reduce 88
55 RETURN reduce 45
109 CHAR reduce 54
143 SEMI reduce 31
152 ABSTRACT reduce 69
34 BYTE reduce 47
79 COMMA shift 82
160 INT reduce 60
42 ID reduce 76
173 INT reduce 16
55 CHAR reduce 45
149 EOF reduce 70
34 PUBLIC reduce 47
95 IF reduce 25
74 NATIVE reduce 55
173 BYTE reduce 16
25 LBRACK reduce 63
127 ABSTRACT reduce 38
134 CHAR reduce 57
174 fieldaccess shift 15
109 STATIC reduce 54
72 FOR reduce 100
41 RBRACE reduce 93
113 fieldaccess shift 15
137 COMMA reduce 72
124 INT reduce 12
74 PUBLIC reduce 55
19 arrayaccess shift 52
154 ELSE shift 83
25 BECOME reduce 63
163 PROTECTED reduce 48
116 staticinit shift 84
101 methodinvoke shift 85
16 LBRACE shift 20
85 DOT reduce 82
17 SEMI reduce 114
177 BOOLEAN shift 3
95 INT reduce 25
53 ABSTRACT reduce 37
61 IF shift 86
160 BOOLEAN reduce 60
8 SHORT reduce 34
53 STATIC reduce 37
161 SHORT reduce 58
31 COMMA reduce 8
60 lefthand shift 2
54 FINAL reduce 56
18 COMMA shift 87
54 SHORT reduce 56
16 WHILE shift 88
63 COMMA reduce 96
92 IF reduce 85
23 LBRACE shift 89
76 arraytype shift 35
45 RBRACE reduce 88
34 BOOLEAN reduce 47
84 CHAR reduce 17
30 LBRACK reduce 62
76 SHORT shift 81
118 RETURN reduce 97
176 methodinvoke shift 85
100 variabledecls shift 90
152 SEMI reduce 69
125 RBRACE reduce 24
14 SHORT reduce 99
119 SEMI shift 91
9 SEMI shift 92
35 ID reduce 77
151 variabledeclid shift 50
9 name shift 5
114 SHORT reduce 35
154 CHAR reduce 88
152 FINAL reduce 69
152 PUBLIC reduce 69
151 variabledecl shift 93
97 PUBLIC reduce 10
45 LBRACE reduce 88
72 INT reduce 100
119 PROTECTED reduce 59
106 qualifiedname shift 30
176 name shift 94
24 SEMI reduce 110
12 SEMI shift 95
32 INT reduce 98
59 LBRACE reduce 90
167 STAR shift 96
55 LBRACE reduce 45
143 FOR reduce 31
114 BYTE reduce 35
14 SEMI reduce 99
6 BECOME reduce 43
62 SHORT reduce 91
60 fieldaccess shift 15
177 primitivetype shift 80
161 ABSTRACT reduce 58
158 INTERFACE reduce 87
8 WHILE reduce 34
48 RBRACE shift 97
95 CHAR reduce 25
120 LBRACK reduce 84
16 ifthenelse shift 59
60 condexpr shift 11
71 CHAR shift 39
97 LBRACE reduce 10
104 interfaces shift 98
176 fieldaccess shift 28
9 condexpr shift 11
53 PROTECTED reduce 37
106 arrayaccess shift 52
87 lefthand shift 2
8 SEMI reduce 34
152 packagedecl shift 99
83 ifthen shift 10
128 RETURN reduce 11
72 ELSE reduce 100
72 BYTE reduce 100
124 SEMI reduce 12
62 LBRACE reduce 91
66 RBRACK reduce 26
16 for shift 33
113 BECOME reduce 28
160 FINAL reduce 60
22 CHAR reduce 46
83 LBRACE shift 20
177 type shift 100
67 COMMA shift 101
60 variableinit shift 102
163 ABSTRACT reduce 48
87 expr shift 103
83 exprstmnt shift 14
92 BYTE reduce 85
136 SEMI reduce 115
153 BOOLEAN reduce 19
20 IF reduce 13
145 super shift 104
140 FINAL reduce 68
87 assign shift 31
8 IF reduce 34
25 DOT reduce 63
109 BOOLEAN reduce 54
92 RBRACE reduce 85
174 name shift 5
172 RPAREN shift 105
114 LBRACE reduce 35
97 FINAL reduce 10
132 expr shift 27
152 INTERFACE reduce 69
33 IF reduce 92
140 ABSTRACT reduce 68
101 LPAREN shift 106
117 arrayaccess shift 52
87 assignexpr shift 66
1 COMMA reduce 71
24 BECOME reduce 110
97 WHILE reduce 10
83 FOR shift 58
83 while shift 62
106 expr shift 107
10 INT reduce 89
158 CLASS reduce 87
111 STATIC reduce 29
163 SHORT reduce 48
170 BOOLEAN reduce 23
2 BECOME shift 108
130 STATIC reduce 53
21 ID shift 25
48 retstmnt shift 72
153 ABSTRACT reduce 19
117 simplename shift 13
34 STATIC reduce 47
163 INT reduce 48
76 BYTE shift 65
158 NATIVE reduce 87
110 RBRACE reduce 51
30 DOT reduce 62
72 LBRACE reduce 100
101 qualifiedname shift 30
173 PUBLIC reduce 16
21 assignexpr shift 66
124 BOOLEAN reduce 12
54 NATIVE reduce 56
48 SEMI shift 95
148 SHORT shift 81
20 INT reduce 13
177 PROTECTED shift 109
103 COMMA reduce 3
127 FINAL reduce 38
135 ID shift 25
140 IMPORT reduce 68
99 CLASS reduce 36
165 RPAREN shift 110
8 CHAR reduce 34
61 SEMI shift 95
127 STATIC reduce 38
62 RETURN reduce 91
117 name shift 5
48 numerictype shift 42
130 PROTECTED reduce 53
6 DOT reduce 83
32 LBRACE reduce 98
78 CLASS reduce 39
90 SEMI shift 111
82 ID shift 112
83 stmntnotrail shift 45
19 simplename shift 13
131 DOT reduce 52
163 FINAL reduce 48
55 SEMI reduce 45
16 while shift 62
78 EOF reduce 39
32 FOR reduce 98
170 STATIC reduce 23
54 STATIC reduce 56
12 emptystmnt shift 32
118 SHORT reduce 97
130 INT reduce 53
152 EOF reduce 69
101 SEMI shift 70
109 INTERFACE reduce 54
46 SEMI reduce 109
143 BYTE reduce 31
154 BOOLEAN reduce 88
142 EOF reduce 20
9 lefthand shift 2
77 DOT reduce 80
22 BOOLEAN reduce 46
127 NATIVE reduce 38
136 FOR reduce 115
53 SEMI reduce 37
71 numerictype shift 42
131 RBRACE reduce 52
76 INT shift 47
30 BECOME reduce 62
2 assignop shift 113
160 CHAR reduce 60
71 SHORT shift 81
69 RBRACE reduce 18
132 simplename shift 13
95 SHORT reduce 25
105 LBRACE reduce 49
155 SHORT reduce 14
69 SHORT reduce 18
45 BYTE reduce 88
174 lefthand shift 2
83 stmnt shift 114
152 PACKAGE shift 115
173 CHAR reduce 16
69 classbodydecls shift 116
48 CHAR shift 39
94 LBRACK shift 117
60 COMMA reduce 5
37 ABSTRACT reduce 0
153 RBRACE reduce 19
22 STATIC reduce 46
32 SEMI reduce 98
161 INT reduce 58
76 BOOLEAN shift 3
33 CHAR reduce 92
132 condexpr shift 11
99 STATIC reduce 36
19 assign shift 31
154 LBRACE reduce 88
62 FOR reduce 91
9 ID shift 25
55 RBRACE reduce 45
78 IMPORT reduce 39
106 fieldaccess shift 15
178 EOF reduce 105
61 block shift 118
99 importdecls shift 119
167 ID shift 120
9 assignexpr shift 66
114 CHAR reduce 35
9 BECOME reduce 28
161 CLASS reduce 58
76 type shift 121
113 simplename shift 13
66 SEMI reduce 26
143 IF reduce 31
9 arrayaccess shift 52
99 SEMI reduce 36
50 LBRACK shift 122
60 ID shift 25
166 EOF reduce 40
16 IF shift 86
160 BYTE reduce 60
113 name shift 5
146 INTERFACE shift 123
53 EOF reduce 37
158 PROTECTED reduce 87
128 CHAR reduce 11
118 IF reduce 97
125 NATIVE reduce 24
111 BYTE reduce 29
68 SEMI reduce 6
143 WHILE reduce 31
169 SEMI reduce 112
160 SHORT reduce 60
48 stmnt shift 124
34 NATIVE reduce 47
127 CLASS reduce 38
87 BECOME reduce 28
84 PUBLIC reduce 17
143 RETURN reduce 31
61 while shift 62
12 IF shift 86
139 IF reduce 86
146 ABSTRACT shift 54
120 BECOME reduce 84
84 BOOLEAN reduce 17
100 variabledecl shift 93
116 methoddecl shift 125
74 CLASS reduce 55
101 simplename shift 13
112 BECOME reduce 109
54 BOOLEAN reduce 56
33 INT reduce 92
137 RPAREN reduce 72
62 SEMI reduce 91
13 LBRACK reduce 61
158 ABSTRACT reduce 87
176 LPAREN shift 106
93 COMMA reduce 111
72 IF reduce 100
130 BYTE reduce 53
136 CHAR reduce 115
115 name shift 126
34 SHORT reduce 47
20 FOR reduce 13
61 RETURN shift 9
117 qualifiedname shift 30
71 BYTE shift 65
59 SEMI reduce 90
143 BOOLEAN reduce 31
53 FINAL reduce 37
34 ABSTRACT reduce 47
74 BOOLEAN reduce 55
12 RETURN shift 9
94 BECOME reduce 41
62 WHILE reduce 91
119 singletypeimport shift 127
119 INTERFACE reduce 59
149 SEMI reduce 70
106 name shift 5
13 SEMI reduce 61
119 NATIVE reduce 59
95 LBRACE reduce 25
78 PROTECTED reduce 39
71 BOOLEAN shift 3
16 retstmnt shift 72
134 NATIVE reduce 57
128 SHORT reduce 11
60 name shift 5
134 PROTECTED reduce 57
48 localvardeclstmnt shift 128
118 ELSE reduce 97
116 BYTE reduce 59
55 FOR reduce 45
19 lefthand shift 2
45 SHORT reduce 88
33 WHILE reduce 92
9 qualifiedname shift 30
49 SEMI reduce 113
17 COMMA reduce 114
150 DOT reduce 4
153 PROTECTED reduce 19
124 CHAR reduce 12
161 CHAR reduce 58
136 BYTE reduce 115
148 numerictype shift 42
126 DOT shift 29
119 classdecl shift 129
80 ID reduce 101
32 IF reduce 98
22 NATIVE reduce 46
95 BYTE reduce 25
146 PUBLIC shift 130
74 BYTE reduce 55
18 RPAREN shift 131
177 BYTE shift 65
155 FOR reduce 14
153 FINAL reduce 19
16 ifthen shift 10
130 PUBLIC reduce 53
12 ifthenelse shift 59
25 SEMI reduce 63
11 RBRACK reduce 7
134 CLASS reduce 57
130 INTERFACE reduce 53
94 LPAREN shift 132
116 methodhead shift 133
16 SEMI shift 95
127 PUBLIC reduce 38
124 IF reduce 12
163 BYTE reduce 48
177 STATIC shift 74
158 EOF reduce 87
20 LBRACE reduce 13
66 COMMA reduce 26
146 FINAL shift 134
11 RBRACE reduce 7
74 CHAR reduce 55
119 IMPORT shift 135
165 COMMA shift 87
162 assignexpr shift 66
109 PUBLIC reduce 54
12 for shift 33
136 LBRACE reduce 115
134 BOOLEAN reduce 57
132 qualifiedname shift 30
177 INT shift 47
115 simplename shift 13
48 LBRACE shift 20
61 for shift 33
21 name shift 5
109 ABSTRACT reduce 54
160 PROTECTED reduce 60
61 stmnt shift 136
83 for shift 33
5 DOT shift 29
177 arraytype shift 35
93 SEMI reduce 111
49 COMMA reduce 113
117 lefthand shift 2
13 BECOME reduce 61
132 arrayaccess shift 52
71 param shift 137
31 RPAREN reduce 8
45 CHAR reduce 88
176 qualifiedname shift 30
8 INT reduce 34
19 condexpr shift 11
22 PROTECTED reduce 46
117 expr shift 138
129 EOF reduce 104
162 arrayaccess shift 52
114 BOOLEAN reduce 35
133 LBRACE shift 20
87 name shift 5
113 ID shift 25
20 SHORT reduce 13
170 INT reduce 23
152 IMPORT reduce 69
124 BYTE reduce 12
125 ABSTRACT reduce 24
14 RBRACE reduce 99
118 WHILE reduce 97
160 STATIC reduce 60
22 ABSTRACT reduce 46
60 assignexpr shift 66
125 BYTE reduce 24
70 COMMA reduce 27
128 INT reduce 11
29 ID shift 120
152 CLASS reduce 69
112 COMMA reduce 109
59 INT reduce 90
83 block shift 118
60 SEMI reduce 5
134 SHORT reduce 57
54 CLASS reduce 56
175 SEMI shift 139
69 CHAR reduce 18
64 RPAREN reduce 73
55 IF reduce 45
99 NATIVE reduce 36
106 ID shift 25
155 WHILE reduce 14
134 PUBLIC reduce 57
54 PUBLIC reduce 56
127 EOF reduce 38
135 qualifiedname shift 30
109 FINAL reduce 54
62 BOOLEAN reduce 91
83 IF shift 86
74 INT reduce 55
53 CLASS reduce 37
96 SEMI shift 140
114 INT reduce 35
84 INT reduce 17
16 block shift 118
148 forinit shift 141
98 classbody shift 142
48 BYTE shift 65
118 FOR reduce 97
19 assignexpr shift 66
68 COMMA reduce 6
170 BYTE reduce 23
12 stmnt shift 143
95 SEMI reduce 25
48 ifthenelse shift 59
125 CHAR reduce 24
50 COMMA reduce 107
95 WHILE reduce 25
162 expr shift 144
14 BOOLEAN reduce 99
171 ID shift 145
1 LBRACK shift 122
74 PROTECTED reduce 55
55 BYTE reduce 45
162 fieldaccess shift 15
109 CLASS reduce 54
76 referencetype shift 7
10 RETURN reduce 89
83 SEMI shift 95
150 BECOME reduce 4
117 ID shift 25
114 IF reduce 35
22 INT reduce 46
140 STATIC reduce 68
143 INT reduce 31
34 CHAR reduce 47
119 modifiers shift 146
123 ID shift 147
21 BECOME reduce 28
128 IF reduce 11
13 DOT reduce 61
58 LBRACE shift 148
163 NATIVE reduce 48
108 BECOME reduce 9
162 lefthand shift 2
72 RETURN reduce 100
78 FINAL reduce 39
95 RETURN reduce 25
140 INTERFACE reduce 68
177 FINAL shift 134
126 SEMI shift 149
140 SEMI reduce 68
102 SEMI reduce 108
72 RBRACE reduce 100
138 RBRACK shift 150
154 IF reduce 88
84 FINAL reduce 17
19 qualifiedname shift 30
92 FOR reduce 85
148 type shift 151
41 COMMA reduce 93
45 IF reduce 88
0 BOF shift 152
111 CHAR reduce 29
50 SEMI reduce 107
149 INTERFACE reduce 70
170 NATIVE reduce 23
32 BOOLEAN reduce 98
112 LBRACK reduce 109
8 BOOLEAN reduce 34
170 RBRACE reduce 23
116 classbodydecl shift 153
12 LBRACE shift 20
177 PUBLIC shift 130
69 PROTECTED reduce 18
157 SEMI reduce 32
55 WHILE reduce 45
20 BYTE reduce 13
21 assign shift 31
22 SHORT reduce 46
136 SHORT reduce 115
132 ID shift 25
84 ABSTRACT reduce 17
146 PROTECTED shift 109
97 FOR reduce 10
16 FOR shift 58
16 stmntnotrail shift 154
155 BOOLEAN reduce 14
10 BYTE reduce 89
21 fieldaccess shift 15
119 FINAL reduce 59
68 RBRACK reduce 6
118 RBRACE reduce 97
140 NATIVE reduce 68
78 STATIC reduce 39
132 assignexpr shift 66
87 condexpr shift 11
48 blockstmnt shift 155
71 arraytype shift 35
174 assign shift 31
72 SHORT reduce 100
124 LBRACE reduce 12
136 RBRACE reduce 115
68 RBRACE reduce 6
119 STATIC reduce 59
101 arraycreate shift 156
9 assign shift 31
90 COMMA shift 82
65 ID reduce 64
95 RBRACE reduce 25
176 primary shift 56
113 lefthand shift 2
117 assign shift 31
71 primitivetype shift 80
54 INTERFACE reduce 56
32 BYTE reduce 98
45 BOOLEAN reduce 88
106 assignexpr shift 66
59 RETURN reduce 90
132 assign shift 31
62 RBRACE reduce 91
19 name shift 5
176 arraycreate shift 156
124 WHILE reduce 12
12 while shift 62
155 SEMI reduce 14
59 SHORT reduce 90
101 ID shift 25
139 ELSE reduce 86
21 condexpr shift 11
74 ABSTRACT reduce 55
33 BOOLEAN reduce 92
124 RETURN reduce 12
84 RBRACE reduce 17
148 localvardecl shift 157
73 SEMI shift 158
92 SHORT reduce 85
22 FINAL reduce 46
159 DOT reduce 74
83 emptystmnt shift 32
113 qualifiedname shift 30
173 NATIVE reduce 16
83 ifthenelse shift 59
115 ID shift 25
101 primnoarray shift 159
162 assign shift 31
113 condexpr shift 11
146 modifier shift 160
14 ELSE reduce 99
115 qualifiedname shift 30
146 NATIVE shift 161
12 stmntnotrail shift 45
161 PROTECTED reduce 58
101 name shift 94
76 numerictype shift 42
128 BYTE reduce 11
152 PROTECTED reduce 69
148 CHAR shift 39
86 LPAREN shift 162
10 RBRACE reduce 89
25 LPAREN reduce 63
163 CHAR reduce 48
161 BYTE reduce 58
87 simplename shift 13
118 BYTE reduce 97
133 methodbody shift 163
111 NATIVE reduce 29
155 LBRACE reduce 14
154 INT reduce 88
99 FINAL reduce 36
5 LBRACK shift 117
33 LBRACE reduce 92
97 BOOLEAN reduce 10
69 ABSTRACT reduce 18
113 assign shift 31
154 SHORT reduce 88
151 ID shift 112
30 SEMI reduce 62
55 SHORT reduce 45
48 IF shift 86
130 SHORT reduce 53
118 BOOLEAN reduce 97
45 SEMI reduce 88
139 BOOLEAN reduce 86
48 block shift 118
119 typedecl shift 164
132 arglist shift 165
89 RBRACE shift 166
162 simplename shift 13
116 SHORT reduce 59
62 IF reduce 91
105 SEMI reduce 49
76 primitivetype shift 80
148 primitivetype shift 80
74 FINAL reduce 55
78 INTERFACE reduce 39
31 RBRACK reduce 8
161 NATIVE reduce 58
64 COMMA reduce 73
111 SHORT reduce 29
170 ABSTRACT reduce 23
73 DOT shift 167
99 ABSTRACT reduce 36
134 FINAL reduce 57
56 DOT shift 168
174 assignexpr shift 66
10 SEMI reduce 89
174 BECOME reduce 28
153 STATIC reduce 19
162 ID shift 25
136 BOOLEAN reduce 115
174 condexpr shift 11
48 emptystmnt shift 32
125 SHORT reduce 24
10 BOOLEAN reduce 89
61 WHILE shift 88
74 SHORT reduce 55
84 SHORT reduce 17
116 INT reduce 59
139 INT reduce 86
153 SHORT reduce 19
10 CHAR reduce 89
155 RBRACE reduce 14
130 CLASS reduce 53
139 CHAR reduce 86
83 WHILE shift 88
118 SEMI reduce 97
82 variabledecl shift 169
66 RPAREN reduce 26
26 EOF reduce 15
110 COMMA reduce 51
109 SHORT reduce 54
125 BOOLEAN reduce 24
71 type shift 121
22 RBRACE reduce 46
132 RPAREN reduce 1
12 WHILE shift 88
173 ABSTRACT reduce 16
116 fielddecl shift 170
48 stmntnotrail shift 45
135 simplename shift 13
48 exprstmnt shift 14
111 BOOLEAN reduce 29
61 retstmnt shift 72
48 FOR shift 58
177 modifier shift 160
14 BYTE reduce 99
48 type shift 151
116 STATIC reduce 59
12 FOR shift 58
158 PUBLIC reduce 87
92 WHILE reduce 85
34 FINAL reduce 47
124 RBRACE reduce 12
114 SEMI reduce 35
130 BOOLEAN reduce 53
74 INTERFACE reduce 55
20 RBRACE reduce 13
146 CLASS shift 171
139 BYTE reduce 86
76 CHAR shift 39
32 WHILE reduce 98
54 CHAR reduce 56
71 params shift 172
97 CHAR reduce 10
161 FINAL reduce 58
121 ID shift 112
48 WHILE shift 88
54 PROTECTED reduce 56
111 RBRACE reduce 29
139 RBRACE reduce 86
143 CHAR reduce 31
59 FOR reduce 90
177 NATIVE shift 161
116 classmemberdecl shift 173
141 SEMI shift 174
91 EOF reduce 106
106 assign shift 31
106 simplename shift 13
34 RBRACE reduce 47
31 RBRACE reduce 8
97 ABSTRACT reduce 10
127 PROTECTED reduce 38
154 WHILE reduce 88
170 CHAR reduce 23
161 INTERFACE reduce 58
128 FOR reduce 11
19 ID shift 25
71 INT shift 47
9 expr shift 175
125 PUBLIC reduce 24
163 BOOLEAN reduce 48
81 ID reduce 65
72 CHAR reduce 100
97 SHORT reduce 10
120 LPAREN reduce 84
14 IF reduce 99
48 SHORT shift 81
116 FINAL reduce 59
33 SHORT reduce 92
21 COMMA reduce 1
72 WHILE reduce 100
38 SEMI shift 176
109 INT reduce 54
114 RBRACE reduce 35
97 BYTE reduce 10
139 RETURN reduce 86
176 lefthand shift 2
33 FOR reduce 92
46 BECOME reduce 109
134 INTERFACE reduce 57
149 IMPORT reduce 70
62 INT reduce 91
116 modifiers shift 177
134 ABSTRACT reduce 57
139 SEMI reduce 86
176 ID shift 25
28 DOT reduce 81
114 WHILE reduce 35
118 INT reduce 97
154 RBRACE reduce 88
99 IMPORT reduce 36
69 BOOLEAN reduce 18
48 INT shift 47
33 BYTE reduce 92
83 retstmnt shift 72
173 STATIC reduce 16
84 BYTE reduce 17
143 SHORT reduce 31
71 referencetype shift 7
153 NATIVE reduce 19
20 BOOLEAN reduce 13
72 SEMI reduce 100
155 CHAR reduce 14
11 RPAREN reduce 7
84 STATIC reduce 17
116 PROTECTED reduce 59
33 RETURN reduce 92
174 simplename shift 13
12 block shift 118
160 PUBLIC reduce 60
136 RETURN reduce 115
112 SEMI reduce 109
59 BYTE reduce 90
111 PUBLIC reduce 29
127 SEMI reduce 38
134 STATIC reduce 57
67 RBRACE reduce 33
99 EOF reduce 36
97 ELSE reduce 10
140 PROTECTED reduce 68
78 ABSTRACT reduce 39
95 ELSE reduce 25
20 WHILE reduce 13
69 PUBLIC reduce 18
51 SEMI reduce 50
53 NATIVE reduce 37
34 INT reduce 47
52 BECOME reduce 43
1 RPAREN reduce 71
176 primnoarray shift 159
100 variabledeclid shift 50
149 FINAL reduce 70
128 WHILE reduce 11
74 STATIC reduce 55
97 RBRACE reduce 10
30 LPAREN reduce 62
8 LBRACE reduce 34
101 THIS shift 44
24 RPAREN reduce 110
140 EOF reduce 68
119 interfacedecl shift 178
