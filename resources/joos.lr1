60
BOF
EOF
EQ
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
CHAR
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NUM
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
DOT
IMPORT
IMPLEMENTS
STATIC
INT
EXTENDS
71
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interfaces
interfacedecl
lefthand
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclr
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
122
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
block LBRACE RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts blockstmnt
blockstmnts blockstmnts blockstmnt
classbody LBRACE RBRACE
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecls classbodydecl
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
super
super EXTENDS name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
fielddecl type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl INTERFACE ID LBRACE RBRACE
interfacedecl INTERFACE ID extendsinterfaces LBRACE RBRACE
interfacedecl modifiers INTERFACE ID LBRACE RBRACE
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methoddeclr ID LPAREN RPAREN
methoddeclr ID LPAREN params RPAREN
methodhead type methoddeclr
methodhead modifiers type methoddeclr
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier PRIVATE
modifier STATIC
modifiers modifier
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype arraytype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
196
1213
160 primnoarray shift 1
39 modifier shift 2
137 STATIC reduce 61
78 CHAR reduce 63
72 fieldaccess shift 3
62 CHAR reduce 98
14 qualifiedname shift 4
47 LBRACE reduce 38
169 RBRACE reduce 11
147 SHORT reduce 18
98 PUBLIC reduce 40
35 ELSE reduce 106
160 DOT reduce 30
105 referencetype shift 5
150 BECOME reduce 30
68 CLASS reduce 62
195 staticinit shift 6
42 SHORT reduce 51
14 arrayaccess shift 7
141 STATIC reduce 32
178 RETURN reduce 34
28 blockstmnt shift 8
15 RPAREN reduce 7
182 SHORT reduce 52
39 methoddecl shift 9
181 INT reduce 10
14 fieldaccess shift 3
110 INT reduce 94
90 ifthen shift 10
39 staticinit shift 6
188 STATIC reduce 54
165 ID shift 11
11 SEMI reduce 115
51 SEMI reduce 96
42 FOR reduce 51
96 EOF reduce 44
70 DOT reduce 87
88 RPAREN reduce 115
163 name shift 12
13 FOR reduce 27
78 SHORT reduce 63
138 IMPORT reduce 41
63 SEMI shift 13
181 SEMI reduce 10
145 PROTECTED reduce 31
11 COMMA reduce 115
12 LBRACK shift 14
177 SEMI reduce 42
149 STATIC reduce 53
151 FOR reduce 121
82 condexpr shift 15
113 arrayaccess shift 16
143 ID shift 17
115 LBRACE reduce 57
47 SHORT reduce 38
191 simplename shift 18
136 BOOLEAN shift 19
163 ID shift 20
161 BYTE reduce 92
14 BECOME reduce 30
105 numerictype shift 21
63 FOR shift 22
53 RPAREN reduce 8
6 PROTECTED reduce 19
175 RETURN reduce 91
195 modifier shift 2
99 PRIVATE reduce 93
176 ID shift 23
181 BYTE reduce 10
28 emptystmnt shift 24
25 RBRACE reduce 97
63 while shift 25
163 arrayaccess shift 7
39 classbodydecl shift 26
72 COMMA reduce 1
9 RBRACE reduce 26
120 RPAREN shift 27
188 PUBLIC reduce 54
33 arrayaccess shift 7
179 LBRACE shift 28
130 STATIC reduce 39
52 PRIVATE reduce 74
169 STATIC reduce 11
98 IMPORT reduce 40
101 expr shift 29
90 SEMI shift 13
171 RBRACE shift 30
110 LBRACE reduce 94
79 variabledecls shift 31
121 INT reduce 37
77 simplename shift 18
137 PRIVATE reduce 61
51 FOR reduce 96
108 COMMA reduce 99
109 STATIC shift 32
82 arrayaccess shift 7
114 COMMA shift 33
10 RBRACE reduce 95
74 EOF reduce 17
94 IMPORT reduce 75
195 RBRACE shift 34
133 COMMA reduce 29
145 BOOLEAN reduce 31
125 BYTE reduce 13
20 LPAREN reduce 69
178 WHILE reduce 34
88 LBRACK reduce 115
125 RETURN reduce 13
55 retstmnt shift 35
151 LBRACE reduce 121
125 RBRACE reduce 13
6 STATIC reduce 19
75 CHAR reduce 105
26 STATIC reduce 21
121 SHORT reduce 37
119 SEMI shift 36
71 SEMI reduce 12
78 CLASS reduce 63
62 BYTE reduce 98
123 BECOME reduce 9
50 BOOLEAN shift 19
98 INTERFACE reduce 40
28 RETURN shift 37
47 IF reduce 38
97 SEMI reduce 116
20 LBRACK reduce 69
32 PUBLIC reduce 64
174 COMMA reduce 101
180 RBRACE shift 38
144 BOOLEAN reduce 15
195 classbodydecls shift 39
26 CHAR reduce 21
115 SEMI reduce 57
184 INT reduce 20
179 retstmnt shift 35
6 BYTE reduce 19
38 EOF reduce 43
28 BOOLEAN shift 19
122 STATIC reduce 66
160 forupdate shift 40
138 EOF reduce 41
109 referencetype shift 5
35 WHILE reduce 106
113 primary shift 41
195 numerictype shift 21
111 SEMI shift 42
24 BOOLEAN reduce 104
18 LBRACK reduce 67
144 LBRACE reduce 15
97 COMMA reduce 116
50 INT shift 43
144 WHILE reduce 15
42 CHAR reduce 51
50 CHAR shift 44
136 arraytype shift 45
31 SEMI reduce 50
127 param shift 46
181 PRIVATE reduce 10
62 LBRACE reduce 98
61 RPAREN reduce 28
141 PRIVATE reduce 32
26 INT reduce 21
138 PROTECTED reduce 41
179 stmnt shift 47
129 variabledeclid shift 48
71 FOR reduce 12
109 primitivetype shift 49
35 INT reduce 106
76 INT reduce 25
11 LPAREN shift 50
24 WHILE reduce 104
39 numerictype shift 21
25 RETURN reduce 97
163 RPAREN reduce 1
28 ifthenelse shift 51
89 SEMI shift 52
184 CHAR reduce 20
178 RBRACE reduce 34
46 COMMA reduce 79
37 assign shift 53
164 extendsinterfaces shift 54
125 FOR reduce 13
185 RPAREN shift 55
173 RBRACE shift 56
28 BYTE shift 57
101 condexpr shift 15
161 FOR reduce 92
136 primitivetype shift 49
113 stmntexpr shift 58
37 fieldaccess shift 3
76 PROTECTED reduce 25
125 WHILE reduce 13
177 PUBLIC reduce 42
149 PUBLIC reduce 53
51 LBRACE reduce 96
130 importdecls shift 59
48 SEMI reduce 113
145 PUBLIC reduce 31
161 SEMI reduce 92
82 simplename shift 18
32 PRIVATE reduce 64
65 variabledecl shift 60
72 assignexpr shift 61
75 ELSE reduce 105
133 RBRACE reduce 29
179 for shift 62
136 INT shift 43
141 SHORT reduce 32
8 IF reduce 14
179 ifthenelse shift 51
40 RBRACE shift 63
182 STATIC reduce 52
97 RPAREN reduce 116
71 LBRACE reduce 12
113 DOT reduce 30
183 RPAREN shift 64
102 SEMI reduce 94
39 type shift 65
41 DOT shift 66
25 FOR reduce 97
4 LPAREN reduce 68
182 PUBLIC reduce 52
67 ID reduce 71
163 qualifiedname shift 4
191 ID shift 20
188 PROTECTED reduce 54
99 STATIC reduce 93
9 PUBLIC reduce 26
90 RETURN shift 37
136 SHORT shift 67
137 CHAR reduce 61
149 CHAR reduce 53
137 INTERFACE reduce 61
106 INT reduce 103
127 BOOLEAN shift 19
36 PROTECTED reduce 76
178 SHORT reduce 34
32 BYTE reduce 64
188 BOOLEAN reduce 54
59 PROTECTED shift 68
150 name shift 12
105 FOR shift 22
144 CHAR reduce 15
184 SHORT reduce 20
26 PROTECTED reduce 21
122 SHORT reduce 66
137 CLASS reduce 61
191 fieldaccess shift 3
122 INTERFACE reduce 66
121 RETURN reduce 37
87 COMMA reduce 78
37 lefthand shift 69
78 PUBLIC reduce 63
78 PROTECTED reduce 63
72 lefthand shift 69
113 fieldaccess shift 70
33 qualifiedname shift 4
32 INT reduce 64
28 localvardeclstmnt shift 71
168 LPAREN shift 72
55 WHILE shift 73
121 RBRACE reduce 37
163 assignexpr shift 61
58 RBRACE reduce 102
39 RBRACE shift 74
45 ID reduce 83
102 FOR reduce 94
105 exprstmnt shift 75
24 LBRACE reduce 104
195 CHAR shift 44
39 fielddecl shift 76
184 BOOLEAN reduce 20
145 RBRACE reduce 31
105 retstmnt shift 35
48 BECOME shift 77
35 SEMI reduce 106
191 assignexpr shift 61
110 CHAR reduce 94
52 STATIC reduce 74
82 assign shift 53
195 PRIVATE shift 78
26 PUBLIC reduce 21
14 assignexpr shift 61
50 numerictype shift 21
63 ifthenelse shift 51
163 assign shift 53
149 PRIVATE reduce 53
15 RBRACK reduce 7
169 PUBLIC reduce 11
105 type shift 79
14 ID shift 20
25 INT reduce 97
177 STATIC reduce 42
144 INT reduce 15
59 SEMI shift 80
82 lefthand shift 69
127 arraytype shift 45
28 SEMI shift 13
121 BOOLEAN reduce 37
68 INT reduce 62
72 assign shift 53
59 EOF reduce 109
167 LBRACE shift 28
126 LBRACK shift 81
147 CHAR reduce 18
181 RBRACE reduce 10
25 SHORT reduce 97
72 name shift 12
141 CHAR reduce 32
113 LPAREN shift 82
101 BECOME reduce 30
165 methoddeclr shift 83
182 BYTE reduce 52
156 name shift 84
75 LBRACE reduce 105
2 PRIVATE reduce 65
55 ifthenelse shift 51
126 COMMA reduce 77
181 STATIC reduce 10
158 RBRACK shift 85
46 RPAREN reduce 79
50 SHORT shift 67
85 BECOME reduce 4
161 RBRACE reduce 92
90 IF shift 86
50 param shift 87
78 PRIVATE reduce 63
161 IF reduce 92
15 RBRACE reduce 7
55 exprstmnt shift 75
135 ID shift 20
28 while shift 25
139 SEMI reduce 6
113 primnoarray shift 1
75 IF reduce 105
79 ID shift 88
122 INT reduce 66
130 PRIVATE reduce 39
176 STAR shift 89
118 LBRACE reduce 55
88 COMMA reduce 115
36 INTERFACE reduce 76
24 RETURN reduce 104
42 BOOLEAN reduce 51
165 variabledeclid shift 48
163 lefthand shift 69
35 RBRACE reduce 106
177 PRIVATE reduce 42
98 STATIC reduce 40
5 ID reduce 108
144 RETURN reduce 15
62 BOOLEAN reduce 98
128 RPAREN shift 90
160 lefthand shift 69
77 assignexpr shift 61
71 RBRACE reduce 12
55 ifthen shift 10
63 WHILE shift 73
82 assignexpr shift 61
15 COMMA reduce 7
52 EOF reduce 74
151 IF reduce 121
106 RBRACE reduce 103
75 BYTE reduce 105
50 BYTE shift 57
25 CHAR reduce 97
135 simplename shift 18
182 BOOLEAN reduce 52
63 IF shift 86
144 SEMI reduce 15
53 SEMI reduce 8
27 COMMA reduce 59
182 PRIVATE reduce 52
13 LBRACE reduce 27
77 name shift 12
24 BYTE reduce 104
88 BECOME reduce 115
37 expr shift 91
59 interfacedecl shift 92
178 SEMI reduce 34
106 SEMI reduce 103
175 INT reduce 91
78 INT reduce 63
160 stmntexprlst shift 93
161 SHORT reduce 92
28 ifthen shift 10
47 RBRACE reduce 38
50 primitivetype shift 49
112 COMMA reduce 60
0 BOF shift 94
10 IF reduce 95
160 simplename shift 18
39 CHAR shift 44
66 ID shift 95
76 BYTE reduce 25
105 WHILE shift 73
194 RBRACE shift 96
121 CHAR reduce 37
37 BECOME reduce 30
20 SEMI reduce 69
25 IF reduce 97
71 BYTE reduce 12
179 IF shift 86
170 COMMA reduce 119
138 PUBLIC reduce 41
101 assignexpr shift 61
47 BOOLEAN reduce 38
81 RBRACK shift 97
33 assignexpr shift 61
152 DOT reduce 88
135 qualifiedname shift 4
195 type shift 65
59 importdecl shift 98
148 ID shift 20
84 SEMI shift 99
178 BOOLEAN reduce 34
138 PRIVATE reduce 41
12 DOT shift 100
150 qualifiedname shift 4
42 RETURN reduce 51
28 primitivetype shift 49
23 LPAREN reduce 90
51 SHORT reduce 96
113 BECOME reduce 30
155 SEMI shift 101
181 WHILE reduce 10
98 PROTECTED reduce 40
42 LBRACE reduce 51
188 RBRACE reduce 54
141 PUBLIC reduce 32
58 COMMA reduce 102
77 assign shift 53
92 EOF reduce 111
147 PUBLIC reduce 18
141 PROTECTED reduce 32
105 stmntnotrail shift 102
116 classbody shift 103
42 WHILE reduce 51
28 LBRACE shift 28
182 PROTECTED reduce 52
195 STATIC shift 32
101 simplename shift 18
28 FOR shift 22
101 arrayaccess shift 7
99 SEMI reduce 93
13 IF reduce 27
179 ifthen shift 10
62 SEMI reduce 98
161 INT reduce 92
151 BYTE reduce 121
160 arraycreate shift 104
49 ID reduce 107
105 RETURN shift 37
78 BOOLEAN reduce 63
135 assign shift 53
28 type shift 79
145 BYTE reduce 31
181 PROTECTED reduce 10
181 ELSE reduce 10
28 blockstmnts shift 105
63 block shift 106
109 BYTE shift 57
6 PRIVATE reduce 19
150 fieldaccess shift 3
59 INTERFACE shift 107
179 stmntnotrail shift 102
149 BOOLEAN reduce 53
20 BECOME reduce 69
63 for shift 62
35 BOOLEAN reduce 106
63 LBRACE shift 28
78 STATIC reduce 63
161 WHILE reduce 92
168 DOT shift 100
113 assign shift 108
39 modifiers shift 109
18 BECOME reduce 67
36 PUBLIC reduce 76
2 CLASS reduce 65
55 stmntnotrail shift 110
13 RETURN reduce 27
8 WHILE reduce 14
169 IF reduce 11
169 PRIVATE reduce 11
156 simplename shift 18
160 assign shift 108
191 arrayaccess shift 7
39 primitivetype shift 49
144 SHORT reduce 15
147 PRIVATE reduce 18
75 INT reduce 105
71 BOOLEAN reduce 12
104 DOT reduce 81
184 RBRACE reduce 20
76 CHAR reduce 25
90 stmntnotrail shift 102
14 lefthand shift 69
146 EOF reduce 33
28 CHAR shift 44
191 lefthand shift 69
136 BYTE shift 57
33 BECOME reduce 30
137 BOOLEAN reduce 61
178 INT reduce 34
150 assignexpr shift 61
52 PUBLIC reduce 74
15 SEMI reduce 7
125 IF reduce 13
76 PRIVATE reduce 25
161 ELSE reduce 92
39 INT shift 43
39 referencetype shift 5
28 localvardecl shift 111
114 RPAREN shift 112
144 BYTE reduce 15
9 STATIC reduce 26
42 SEMI reduce 51
13 ELSE reduce 27
18 LPAREN reduce 67
13 WHILE reduce 27
93 COMMA shift 113
163 arglist shift 114
94 PROTECTED reduce 75
36 PRIVATE reduce 76
62 INT reduce 98
70 BECOME reduce 48
10 FOR reduce 95
127 SHORT shift 67
77 ID shift 20
72 simplename shift 18
6 BOOLEAN reduce 19
121 SEMI reduce 37
130 SEMI reduce 39
65 methoddeclr shift 115
134 interfaces shift 116
28 IF shift 86
147 STATIC reduce 18
98 SEMI reduce 40
35 LBRACE reduce 106
13 RBRACE reduce 27
94 STATIC reduce 75
102 BYTE reduce 94
13 CHAR reduce 27
94 file shift 117
42 RBRACE reduce 51
32 SHORT reduce 64
47 INT reduce 38
72 qualifiedname shift 4
195 PROTECTED shift 68
50 RPAREN shift 118
51 BYTE reduce 96
151 CHAR reduce 121
51 RETURN reduce 96
1 DOT reduce 80
14 name shift 12
148 name shift 119
78 BYTE reduce 63
90 exprstmnt shift 75
149 RBRACE reduce 53
188 PRIVATE reduce 54
72 arglist shift 120
47 RETURN reduce 38
147 RBRACE reduce 18
10 CHAR reduce 95
6 INT reduce 19
55 stmnt shift 121
37 ID shift 20
37 simplename shift 18
105 while shift 25
33 fieldaccess shift 3
148 qualifiedname shift 4
109 modifier shift 122
124 modifier shift 122
175 BOOLEAN reduce 91
129 ID shift 88
149 INT reduce 53
36 SEMI reduce 76
75 FOR reduce 105
101 fieldaccess shift 3
18 SEMI reduce 67
90 retstmnt shift 35
175 IF reduce 91
24 FOR reduce 104
98 EOF reduce 40
69 BECOME shift 123
71 CHAR reduce 12
177 PROTECTED reduce 42
59 modifiers shift 124
19 ID reduce 84
175 RBRACE reduce 91
28 stmnt shift 125
50 referencetype shift 5
123 ID reduce 9
157 variabledeclid shift 126
127 referencetype shift 5
9 INT reduce 26
135 arrayaccess shift 7
14 simplename shift 18
47 BYTE reduce 38
137 BYTE reduce 61
113 qualifiedname shift 4
122 PROTECTED reduce 66
159 COMMA shift 127
39 SHORT shift 67
184 STATIC reduce 20
150 expr shift 128
28 retstmnt shift 35
162 COMMA reduce 114
131 COMMA shift 129
154 SEMI reduce 35
35 SHORT reduce 106
72 BECOME reduce 30
105 stmnt shift 125
4 BECOME reduce 68
153 LBRACE reduce 56
157 ID shift 88
94 packagedecl shift 130
175 FOR reduce 91
142 RPAREN reduce 3
121 FOR reduce 37
136 numerictype shift 21
55 RETURN shift 37
65 variabledeclid shift 48
57 ID reduce 70
161 RETURN reduce 92
160 LPAREN shift 82
122 BOOLEAN reduce 66
71 SHORT reduce 12
36 EOF reduce 76
160 primary shift 41
150 ID shift 20
33 condexpr shift 15
121 BYTE reduce 37
65 variabledecls shift 131
129 variabledecl shift 132
106 WHILE reduce 103
181 RETURN reduce 10
77 COMMA reduce 5
75 SEMI reduce 105
26 SHORT reduce 21
150 lefthand shift 69
2 BOOLEAN reduce 65
179 while shift 25
51 BOOLEAN reduce 96
125 CHAR reduce 13
101 assign shift 53
113 ID shift 20
127 BYTE shift 57
62 FOR reduce 98
105 for shift 62
33 assign shift 53
113 SEMI shift 133
39 BOOLEAN shift 19
187 SEMI reduce 120
186 super shift 134
11 BECOME reduce 115
16 DOT reduce 89
28 exprstmnt shift 75
69 assignop shift 135
22 LBRACE shift 136
105 arraytype shift 45
28 for shift 62
94 SEMI reduce 75
195 INT shift 43
9 PROTECTED reduce 26
48 LBRACK shift 81
145 CHAR reduce 31
169 CHAR reduce 11
28 arraytype shift 45
82 BECOME reduce 30
124 PUBLIC shift 137
97 LBRACK reduce 116
2 PUBLIC reduce 65
28 block shift 106
99 EOF reduce 93
55 emptystmnt shift 24
37 condexpr shift 15
59 singletypeimport shift 138
140 DOT reduce 85
93 RBRACE reduce 36
177 EOF reduce 42
181 PUBLIC reduce 10
135 assignexpr shift 139
23 DOT reduce 90
21 ID reduce 82
28 WHILE shift 73
181 SHORT reduce 10
94 PRIVATE reduce 75
193 BOF reduce 0
113 THIS shift 140
35 CHAR reduce 106
122 CHAR reduce 66
90 emptystmnt shift 24
195 methoddecl shift 9
8 FOR reduce 14
105 SEMI shift 13
71 WHILE reduce 12
63 retstmnt shift 35
131 SEMI shift 141
137 INT reduce 61
191 name shift 12
105 CHAR shift 44
137 PROTECTED reduce 61
77 condexpr shift 15
130 PROTECTED reduce 39
62 SHORT reduce 98
35 RETURN reduce 106
105 INT shift 43
127 INT shift 43
113 lefthand shift 69
109 arraytype shift 45
61 RBRACK reduce 28
177 INTERFACE reduce 42
33 expr shift 142
145 SHORT reduce 31
150 assign shift 53
187 COMMA reduce 120
72 ID shift 20
127 primitivetype shift 49
169 ELSE reduce 11
124 INTERFACE shift 143
182 RBRACE reduce 52
35 FOR reduce 106
139 RBRACE reduce 6
32 PROTECTED reduce 64
37 name shift 12
139 RBRACK reduce 6
110 RBRACE reduce 94
151 BOOLEAN reduce 121
105 blockstmnt shift 144
102 WHILE reduce 94
172 SEMI shift 145
132 COMMA reduce 118
24 IF reduce 104
145 INT reduce 31
13 SEMI reduce 27
59 typedecl shift 146
195 classmemberdecl shift 147
78 INTERFACE reduce 63
109 PROTECTED shift 68
100 ID shift 23
147 PROTECTED reduce 18
195 SHORT shift 67
52 SEMI reduce 74
109 INT shift 43
182 INT reduce 52
87 RPAREN reduce 78
162 SEMI reduce 114
94 PACKAGE shift 148
151 RETURN reduce 121
192 EOF reduce 110
167 SEMI shift 149
71 INT reduce 12
179 exprstmnt shift 75
36 IMPORT reduce 76
55 SEMI shift 13
163 BECOME reduce 30
73 LPAREN shift 150
175 WHILE reduce 91
8 CHAR reduce 14
145 PRIVATE reduce 31
60 SEMI reduce 117
77 lefthand shift 69
105 primitivetype shift 49
51 INT reduce 96
105 BOOLEAN shift 19
24 CHAR reduce 104
139 COMMA reduce 6
151 SEMI reduce 121
118 SEMI reduce 55
32 STATIC reduce 64
163 COMMA reduce 1
6 SHORT reduce 19
127 CHAR shift 44
109 CHAR shift 44
175 ELSE reduce 91
163 simplename shift 18
90 stmnt shift 151
181 BOOLEAN reduce 10
178 CHAR reduce 34
10 RETURN reduce 95
147 BOOLEAN reduce 18
55 while shift 25
2 CHAR reduce 65
130 IMPORT reduce 39
102 IF reduce 94
178 FOR reduce 34
39 STATIC shift 32
169 INT reduce 11
142 COMMA reduce 3
36 STATIC reduce 76
126 RPAREN reduce 77
8 SHORT reduce 14
113 methodinvoke shift 152
75 SHORT reduce 105
130 INTERFACE reduce 39
124 PROTECTED shift 68
33 simplename shift 18
71 RETURN reduce 12
55 FOR shift 22
62 WHILE reduce 98
169 BYTE reduce 11
147 INT reduce 18
195 arraytype shift 45
8 RBRACE reduce 14
159 RPAREN shift 153
27 DOT reduce 59
101 ID shift 20
175 BYTE reduce 91
137 PUBLIC reduce 61
9 BOOLEAN reduce 26
195 PUBLIC shift 137
175 SEMI reduce 91
163 fieldaccess shift 3
60 COMMA reduce 117
160 arrayaccess shift 16
42 BYTE reduce 51
51 IF reduce 96
136 localvardecl shift 154
26 BOOLEAN reduce 21
138 SEMI reduce 41
90 FOR shift 22
136 forinit shift 155
79 variabledecl shift 60
59 IMPORT shift 156
8 BYTE reduce 14
122 BYTE reduce 66
181 LBRACE reduce 10
191 qualifiedname shift 4
8 LBRACE reduce 14
112 DOT reduce 60
68 BYTE reduce 62
102 SHORT reduce 94
189 COMMA reduce 2
77 SEMI reduce 5
4 DOT reduce 68
77 qualifiedname shift 4
135 name shift 12
150 simplename shift 18
23 LBRACK reduce 90
83 LBRACE reduce 58
179 FOR shift 22
99 INTERFACE reduce 93
50 arraytype shift 45
4 LBRACK reduce 68
50 type shift 157
106 FOR reduce 103
28 stmntnotrail shift 102
144 RBRACE reduce 15
24 RBRACE reduce 104
2 INTERFACE reduce 65
75 BOOLEAN reduce 105
52 PROTECTED reduce 74
105 LBRACE shift 28
77 fieldaccess shift 3
56 EOF reduce 46
14 expr shift 158
39 PUBLIC shift 137
179 WHILE shift 73
30 EOF reduce 45
113 arraycreate shift 104
75 WHILE reduce 105
179 emptystmnt shift 24
105 BYTE shift 57
24 SEMI reduce 104
50 params shift 159
39 PROTECTED shift 68
29 SEMI shift 160
188 SHORT reduce 54
181 FOR reduce 10
151 RBRACE reduce 121
160 fieldaccess shift 70
31 COMMA shift 129
14 condexpr shift 15
99 PUBLIC reduce 93
37 qualifiedname shift 4
179 RETURN shift 37
110 IF reduce 94
135 fieldaccess shift 3
48 COMMA reduce 113
32 CLASS reduce 64
153 SEMI reduce 56
110 SHORT reduce 94
91 SEMI shift 161
124 STATIC shift 32
72 arrayaccess shift 7
148 simplename shift 18
108 RBRACE reduce 99
11 LBRACK reduce 115
2 BYTE reduce 65
2 INT reduce 65
68 STATIC reduce 62
65 ID shift 11
149 SHORT reduce 53
25 LBRACE reduce 97
68 BOOLEAN reduce 62
152 RBRACE reduce 100
120 COMMA shift 33
106 BYTE reduce 103
6 CHAR reduce 19
82 name shift 12
110 WHILE reduce 94
42 INT reduce 51
130 EOF reduce 39
77 variableinit shift 162
95 LPAREN shift 163
64 DOT reduce 86
169 BOOLEAN reduce 11
39 PRIVATE shift 78
13 INT reduce 27
59 PRIVATE shift 78
23 SEMI reduce 90
47 CHAR reduce 38
99 PROTECTED reduce 93
125 SHORT reduce 13
82 qualifiedname shift 4
107 ID shift 164
156 ID shift 20
59 PUBLIC shift 137
109 type shift 165
124 CLASS shift 166
160 ID shift 20
63 RETURN shift 37
150 arrayaccess shift 7
141 RBRACE reduce 32
169 LBRACE reduce 11
121 WHILE reduce 37
138 INTERFACE reduce 41
16 BECOME reduce 49
169 PROTECTED reduce 11
101 lefthand shift 69
62 RBRACE reduce 98
71 IF reduce 12
112 RBRACE reduce 60
144 FOR reduce 15
121 IF reduce 37
6 RBRACE reduce 19
77 BECOME reduce 30
24 SHORT reduce 104
2 STATIC reduce 65
195 methodhead shift 167
76 STATIC reduce 25
161 BOOLEAN reduce 92
98 PRIVATE reduce 40
136 type shift 79
150 condexpr shift 15
109 SHORT shift 67
63 exprstmnt shift 75
137 SHORT reduce 61
127 type shift 157
102 CHAR reduce 94
76 RBRACE reduce 25
62 RETURN reduce 98
68 INTERFACE reduce 62
82 fieldaccess shift 3
33 ID shift 20
152 COMMA reduce 100
113 name shift 168
44 ID reduce 73
28 RBRACE shift 169
172 COMMA shift 129
101 name shift 12
33 name shift 12
106 SHORT reduce 103
106 ELSE reduce 103
169 SEMI reduce 11
94 INTERFACE reduce 75
77 expr shift 170
188 BYTE reduce 54
125 LBRACE reduce 13
42 IF reduce 51
24 ELSE reduce 104
169 SHORT reduce 11
151 SHORT reduce 121
63 ifthen shift 10
12 BECOME reduce 47
59 modifier shift 2
94 EOF reduce 75
188 INT reduce 54
109 numerictype shift 21
17 LBRACE shift 171
28 SHORT shift 67
55 for shift 62
168 BECOME reduce 47
141 BYTE reduce 32
90 while shift 25
165 variabledecls shift 172
101 qualifiedname shift 4
190 LBRACE shift 173
151 WHILE reduce 121
160 name shift 168
26 RBRACE reduce 21
51 WHILE reduce 96
160 stmntexpr shift 174
63 emptystmnt shift 24
145 STATIC reduce 31
10 INT reduce 95
37 SEMI shift 175
84 DOT shift 176
90 for shift 62
195 fielddecl shift 76
39 classmemberdecl shift 147
13 BOOLEAN reduce 27
109 PUBLIC shift 137
97 BECOME reduce 116
106 BOOLEAN reduce 103
35 BYTE reduce 106
90 LBRACE shift 28
136 CHAR shift 44
9 BYTE reduce 26
59 ondemandimport shift 177
33 lefthand shift 69
103 EOF reduce 22
32 BOOLEAN reduce 64
110 BOOLEAN reduce 94
184 PUBLIC reduce 20
90 ifthenelse shift 51
110 BYTE reduce 94
28 referencetype shift 5
76 PUBLIC reduce 25
63 stmntnotrail shift 102
2 SHORT reduce 65
127 numerictype shift 21
51 CHAR reduce 96
37 assignexpr shift 61
43 ID reduce 72
106 CHAR reduce 103
26 BYTE reduce 21
141 BOOLEAN reduce 32
161 LBRACE reduce 92
179 block shift 106
88 SEMI reduce 115
169 FOR reduce 11
177 IMPORT reduce 42
51 RBRACE reduce 96
125 BOOLEAN reduce 13
39 BYTE shift 57
113 simplename shift 18
63 stmnt shift 178
13 BYTE reduce 27
178 LBRACE reduce 34
10 SEMI reduce 95
175 CHAR reduce 91
122 CLASS reduce 66
110 ELSE shift 179
164 LBRACE shift 180
168 LBRACK shift 14
90 WHILE shift 73
105 RBRACE shift 181
109 BOOLEAN shift 19
72 condexpr shift 15
181 IF reduce 10
102 RETURN reduce 94
105 ifthen shift 10
20 DOT reduce 69
24 INT reduce 104
160 qualifiedname shift 4
99 IMPORT reduce 93
28 INT shift 43
35 IF reduce 106
68 PROTECTED reduce 62
102 BOOLEAN reduce 94
160 methodinvoke shift 152
23 BECOME reduce 90
125 INT reduce 13
160 SEMI shift 133
72 RPAREN reduce 1
76 BOOLEAN reduce 25
109 PRIVATE shift 78
195 modifiers shift 109
34 EOF reduce 16
10 LBRACE reduce 95
122 PUBLIC reduce 66
79 variabledeclid shift 48
10 WHILE reduce 95
90 block shift 106
184 BYTE reduce 20
106 RETURN reduce 103
122 PRIVATE reduce 66
125 SEMI reduce 13
28 numerictype shift 21
10 SHORT reduce 95
68 PUBLIC reduce 62
167 block shift 182
52 INTERFACE reduce 74
82 ID shift 20
132 SEMI reduce 118
25 BYTE reduce 97
9 SHORT reduce 26
195 BYTE shift 57
195 primitivetype shift 49
105 ifthenelse shift 51
82 expr shift 183
105 emptystmnt shift 24
37 arrayaccess shift 7
68 PRIVATE reduce 62
195 classbodydecl shift 184
189 RPAREN reduce 2
160 THIS shift 140
144 IF reduce 15
130 PUBLIC reduce 39
39 methodhead shift 167
141 INT reduce 32
149 BYTE reduce 53
191 expr shift 185
18 DOT reduce 67
166 ID shift 186
188 CHAR reduce 54
62 IF reduce 98
105 localvardeclstmnt shift 71
80 EOF reduce 112
135 lefthand shift 69
163 condexpr shift 15
26 PRIVATE reduce 21
61 COMMA reduce 28
7 BECOME reduce 49
135 BECOME reduce 30
13 SHORT reduce 27
178 IF reduce 34
160 BECOME reduce 30
77 arrayinit shift 187
102 RBRACE reduce 94
55 block shift 106
105 SHORT shift 67
55 IF shift 86
182 CHAR reduce 52
195 referencetype shift 5
25 SEMI reduce 97
75 RETURN reduce 105
147 BYTE reduce 18
53 COMMA reduce 8
102 LBRACE reduce 94
175 LBRACE reduce 91
191 condexpr shift 15
169 WHILE reduce 11
167 methodbody shift 188
10 BOOLEAN reduce 95
105 localvardecl shift 111
106 IF reduce 103
32 INTERFACE reduce 64
6 PUBLIC reduce 19
163 expr shift 189
17 extendsinterfaces shift 190
9 CHAR reduce 26
59 STATIC shift 32
39 arraytype shift 45
138 STATIC reduce 41
61 SEMI reduce 28
27 RBRACE reduce 59
25 WHILE reduce 97
165 variabledecl shift 60
68 CHAR reduce 62
9 PRIVATE reduce 26
85 DOT reduce 4
135 condexpr shift 15
161 CHAR reduce 92
195 BOOLEAN shift 19
175 SHORT reduce 91
151 INT reduce 121
170 SEMI reduce 119
178 BYTE reduce 34
25 BOOLEAN reduce 97
102 INT reduce 94
47 SEMI reduce 38
76 SHORT reduce 25
86 LPAREN shift 191
77 arrayaccess shift 7
53 RBRACK reduce 8
53 RBRACE reduce 8
59 classdecl shift 192
47 FOR reduce 38
10 BYTE reduce 95
174 RBRACE reduce 101
169 RETURN reduce 11
179 SEMI shift 13
4 SEMI reduce 68
52 IMPORT reduce 74
8 RETURN reduce 14
94 PUBLIC reduce 75
83 SEMI reduce 58
32 CHAR reduce 64
72 expr shift 189
191 assign shift 53
105 block shift 106
2 PROTECTED reduce 65
117 EOF shift 193
121 LBRACE reduce 37
14 assign shift 53
3 BECOME reduce 48
136 referencetype shift 5
156 qualifiedname shift 4
181 CHAR reduce 10
54 LBRACE shift 194
139 RPAREN reduce 6
75 RBRACE reduce 105
110 FOR reduce 94
8 SEMI reduce 14
8 BOOLEAN reduce 14
47 WHILE reduce 38
110 RETURN reduce 94
8 INT reduce 14
124 PRIVATE shift 78
116 LBRACE shift 195
184 PROTECTED reduce 20
105 IF shift 86
184 PRIVATE reduce 20
55 LBRACE shift 28
106 LBRACE reduce 103
68 SHORT reduce 62
149 PROTECTED reduce 53
110 SEMI reduce 94
119 DOT shift 100
191 BECOME reduce 30
