63
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
CHAR
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NUM
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
DOT
IMPORT
IMPLEMENTS
STATIC
INT
EXTENDS
NATIVE
74
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
constructordecl
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclr
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
122
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interface
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methoddeclr ID LPAREN params RPAREN
methodhead modifiers type methoddeclr
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype arraytype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
185
1223
3 RPAREN reduce 115
118 COMMA reduce 117
19 blockstmnts shift 1
179 arrayaccess shift 2
80 EOF reduce 111
123 ID shift 3
180 expr shift 4
88 assignexpr shift 5
137 PROTECTED reduce 76
89 CHAR reduce 105
64 RBRACE reduce 106
181 SEMI reduce 44
32 LBRACE reduce 121
148 SEMI reduce 120
45 DOT shift 6
115 IF reduce 11
67 FINAL reduce 75
50 BOOLEAN reduce 103
157 INTERFACE reduce 74
88 condexpr shift 7
50 RETURN reduce 103
41 LBRACE reduce 25
78 CHAR reduce 96
67 PROTECTED reduce 75
124 ID shift 8
97 PROTECTED reduce 64
161 RBRACE shift 9
103 SEMI shift 10
8 BECOME reduce 69
94 lefthand shift 11
169 PROTECTED reduce 18
172 LBRACE reduce 12
121 RETURN shift 12
43 SEMI reduce 8
22 INT reduce 31
146 FINAL reduce 61
65 modifier shift 13
123 variabledeclid shift 14
131 BOOLEAN reduce 51
129 FINAL reduce 45
1 CHAR shift 15
114 BOOLEAN reduce 52
16 LBRACE reduce 68
138 ABSTRACT reduce 93
108 FOR reduce 104
16 LBRACK reduce 68
72 SHORT reduce 60
178 qualifiedname shift 16
167 PROTECTED reduce 16
44 DOT reduce 81
160 simplename shift 17
123 variabledecls shift 18
184 DOT reduce 4
1 LBRACE shift 19
96 LPAREN shift 20
74 PUBLIC reduce 17
59 STATIC reduce 63
14 SEMI reduce 113
161 modifiers shift 21
1 SEMI shift 22
94 arrayaccess shift 2
1 SHORT shift 23
105 COMMA shift 24
39 RBRACK shift 25
104 SHORT reduce 20
178 SEMI shift 26
120 expr shift 27
104 NATIVE reduce 20
1 localvardecl shift 28
95 referencetype shift 29
168 BOOLEAN reduce 40
36 SHORT reduce 97
106 ABSTRACT reduce 62
141 BOOLEAN reduce 54
158 CHAR reduce 10
32 SHORT reduce 121
25 COMMA reduce 116
94 fieldaccess shift 30
178 DOT reduce 34
46 RBRACE reduce 53
163 primitivetype shift 31
112 BECOME reduce 49
51 DOT shift 6
87 DOT reduce 57
114 INT reduce 52
59 BYTE reduce 63
46 STATIC reduce 53
62 COMMA reduce 32
36 WHILE reduce 97
19 RBRACE reduce 13
181 EOF reduce 44
49 COMMA reduce 99
17 SEMI reduce 67
153 IF reduce 41
59 INTERFACE reduce 63
38 stmnt shift 32
104 PROTECTED reduce 20
159 arraytype shift 33
76 WHILE shift 34
101 LBRACE shift 19
67 INTERFACE reduce 75
1 stmntnotrail shift 35
101 while shift 36
95 SHORT shift 23
69 INT reduce 59
67 file shift 37
4 RPAREN shift 38
22 BYTE reduce 31
69 PUBLIC reduce 59
14 LBRACK shift 39
36 BOOLEAN reduce 97
178 primary shift 40
153 LBRACE reduce 41
102 ID reduce 9
64 CHAR reduce 106
71 DOT reduce 88
69 FINAL reduce 59
50 BYTE reduce 103
50 IF reduce 103
106 BOOLEAN reduce 62
17 LBRACK reduce 67
133 ID shift 8
122 interface shift 41
24 fieldaccess shift 42
180 assign shift 43
61 arrayaccess shift 2
97 ABSTRACT reduce 64
90 NATIVE reduce 19
178 arraycreate shift 44
157 ABSTRACT reduce 74
116 name shift 45
81 RPAREN reduce 78
8 LBRACK reduce 69
124 fieldaccess shift 30
163 SHORT shift 23
169 RBRACE reduce 18
145 SEMI shift 46
137 FINAL reduce 76
178 name shift 47
146 ABSTRACT reduce 61
8 LBRACE reduce 69
121 while shift 36
1 BYTE shift 48
50 RBRACE reduce 103
22 IF reduce 31
182 COMMA reduce 58
137 IMPORT reduce 76
5 COMMA reduce 6
12 ID shift 8
13 NATIVE reduce 66
113 SEMI reduce 42
24 assign shift 49
131 RETURN reduce 51
90 FINAL reduce 19
100 SHORT reduce 29
78 RETURN reduce 96
64 INT reduce 106
32 IF reduce 121
90 INT reduce 19
5 SEMI reduce 6
89 SEMI reduce 105
101 block shift 50
1 RETURN shift 12
167 SHORT reduce 16
124 assign shift 43
94 qualifiedname shift 16
36 BYTE reduce 97
115 INT reduce 11
137 INTERFACE reduce 76
88 lefthand shift 11
16 LPAREN reduce 68
13 PUBLIC reduce 66
147 SEMI reduce 90
57 RETURN reduce 98
180 name shift 51
154 LBRACE shift 52
88 fieldaccess shift 30
167 BOOLEAN reduce 16
114 RBRACE reduce 52
40 DOT shift 53
101 RETURN shift 12
101 WHILE shift 34
138 PROTECTED reduce 93
1 WHILE shift 34
122 name shift 54
100 NATIVE reduce 29
108 SHORT reduce 104
165 COMMA reduce 3
43 COMMA reduce 8
21 referencetype shift 29
153 BYTE reduce 41
56 RETURN reduce 14
91 variabledecls shift 55
133 qualifiedname shift 16
74 FINAL reduce 17
144 EOF reduce 46
1 blockstmnt shift 56
108 RETURN reduce 104
20 qualifiedname shift 16
113 PROTECTED reduce 42
20 lefthand shift 11
57 INT reduce 98
138 EOF reduce 93
147 IMPLEMENTS reduce 90
76 for shift 57
162 RBRACE reduce 37
66 RETURN reduce 94
94 variableinit shift 58
21 FINAL shift 59
97 INT reduce 64
104 BYTE reduce 20
135 importdecl shift 60
17 LBRACE reduce 67
10 INT reduce 92
164 SEMI reduce 119
141 FINAL reduce 54
131 RBRACE reduce 51
47 LBRACK shift 61
98 ID shift 3
24 ID shift 8
167 FINAL reduce 16
114 STATIC reduce 52
115 LBRACE reduce 11
138 FINAL reduce 93
159 SHORT shift 23
16 BECOME reduce 68
134 assignexpr shift 62
20 expr shift 63
89 IF reduce 105
59 ABSTRACT reduce 63
141 ABSTRACT reduce 54
131 IF reduce 51
146 BOOLEAN reduce 61
29 ID reduce 108
45 LBRACE reduce 23
22 FOR reduce 31
94 condexpr shift 7
155 EOF reduce 112
61 assign shift 43
9 EOF reduce 15
72 FINAL reduce 60
19 FOR reduce 13
64 SHORT reduce 106
159 CHAR shift 15
56 IF reduce 14
95 arraytype shift 33
170 SEMI reduce 118
112 DOT reduce 89
101 retstmnt shift 64
22 ELSE reduce 31
135 modifiers shift 65
121 stmntnotrail shift 66
181 INTERFACE reduce 44
74 BOOLEAN reduce 17
5 RPAREN reduce 6
114 PROTECTED reduce 52
161 BOOLEAN reduce 65
89 RBRACE reduce 105
42 DOT reduce 87
56 CHAR reduce 14
146 INT reduce 61
22 CHAR reduce 31
78 WHILE reduce 96
180 ID shift 8
0 BOF shift 67
179 expr shift 68
161 CHAR reduce 65
106 INT reduce 62
62 SEMI reduce 32
7 RPAREN reduce 7
1 referencetype shift 29
179 fieldaccess shift 30
88 ID shift 8
158 IF reduce 10
153 RETURN reduce 41
179 ID shift 8
79 BYTE reduce 91
134 ID shift 8
21 PUBLIC shift 69
13 FINAL reduce 66
90 ABSTRACT reduce 19
10 RETURN reduce 92
69 CLASS reduce 59
133 condexpr shift 7
153 WHILE reduce 41
94 name shift 51
158 PUBLIC reduce 10
159 INT shift 70
66 IF reduce 94
89 WHILE reduce 105
172 FOR reduce 12
72 PUBLIC reduce 60
3 BECOME reduce 115
94 SEMI reduce 5
12 condexpr shift 7
100 STATIC reduce 29
153 SEMI reduce 41
38 WHILE shift 34
114 BYTE reduce 52
83 LBRACE reduce 56
178 methodinvoke shift 71
95 primitivetype shift 31
169 STATIC reduce 18
168 CHAR reduce 40
65 PROTECTED shift 72
129 IMPORT reduce 45
163 BOOLEAN shift 73
20 fieldaccess shift 30
75 simplename shift 17
7 COMMA reduce 7
72 STATIC reduce 60
46 INT reduce 53
20 ID shift 8
100 RBRACE reduce 29
60 PROTECTED reduce 43
161 staticinit shift 74
110 IF reduce 95
124 BECOME reduce 34
110 BOOLEAN reduce 95
156 PUBLIC reduce 30
124 simplename shift 17
69 CHAR reduce 59
38 while shift 36
135 IMPORT shift 75
141 SHORT reduce 54
171 RBRACE shift 76
121 block shift 50
78 SEMI reduce 96
134 name shift 51
156 FINAL reduce 30
92 CHAR reduce 35
167 STATIC reduce 16
122 ID shift 8
160 name shift 77
43 RPAREN reduce 8
161 ABSTRACT reduce 65
24 simplename shift 17
164 COMMA reduce 119
120 simplename shift 17
114 NATIVE reduce 52
147 LBRACK reduce 90
94 simplename shift 17
124 lefthand shift 11
168 IF reduce 40
138 INTERFACE reduce 93
147 LBRACE reduce 90
121 ifthenelse shift 78
120 BECOME reduce 34
77 DOT shift 6
56 WHILE reduce 14
108 LBRACE reduce 104
157 NATIVE reduce 74
162 INT reduce 37
12 SEMI shift 79
158 RETURN reduce 10
135 interfacedecl shift 80
181 STATIC reduce 44
162 LBRACE reduce 37
92 INT reduce 35
158 SEMI reduce 10
76 while shift 36
137 STATIC reduce 76
168 RETURN reduce 40
26 COMMA reduce 33
137 CLASS reduce 76
161 PUBLIC reduce 65
95 param shift 81
24 SEMI shift 26
66 BOOLEAN reduce 94
78 BOOLEAN reduce 96
19 SEMI reduce 13
3 SEMI reduce 115
61 expr shift 82
161 NATIVE reduce 65
91 methoddeclr shift 83
101 FOR shift 84
131 INT reduce 51
162 IF reduce 37
91 variabledeclid shift 14
21 SHORT shift 23
65 INTERFACE shift 85
178 stmntexpr shift 86
74 STATIC reduce 17
58 COMMA reduce 114
156 SHORT reduce 30
111 RPAREN shift 87
64 BOOLEAN reduce 106
115 SHORT reduce 11
12 arrayaccess shift 2
38 retstmnt shift 64
11 assignop shift 88
106 CHAR reduce 62
90 RBRACE reduce 19
118 SEMI reduce 117
78 SHORT reduce 96
121 exprstmnt shift 89
90 CHAR reduce 19
179 BECOME reduce 34
117 LBRACE shift 90
178 ID shift 8
134 BECOME reduce 34
79 INT reduce 91
159 BOOLEAN shift 73
106 PUBLIC reduce 62
95 CHAR shift 15
104 ABSTRACT reduce 20
121 FOR shift 84
172 SHORT reduce 12
110 CHAR reduce 95
10 SHORT reduce 92
120 arrayaccess shift 2
122 simplename shift 17
81 COMMA reduce 78
167 BYTE reduce 16
141 NATIVE reduce 54
32 RBRACE reduce 121
178 assign shift 49
21 type shift 91
113 INTERFACE reduce 42
13 PROTECTED reduce 66
21 modifier shift 13
120 fieldaccess shift 30
55 SEMI shift 92
18 COMMA shift 93
22 RBRACE reduce 31
10 SEMI reduce 92
14 BECOME shift 94
13 ABSTRACT reduce 66
32 BOOLEAN reduce 121
138 STATIC reduce 93
177 IMPLEMENTS reduce 22
61 ID shift 8
20 condexpr shift 7
12 assign shift 43
99 LPAREN shift 95
76 IF shift 96
124 name shift 51
65 NATIVE shift 97
12 assignexpr shift 62
114 SHORT reduce 52
50 FOR reduce 103
133 BECOME reduce 34
2 BECOME reduce 49
172 RBRACE reduce 12
24 primary shift 40
61 lefthand shift 11
114 ABSTRACT reduce 52
172 INT reduce 12
133 fieldaccess shift 30
92 RBRACE reduce 35
95 type shift 98
161 SHORT reduce 65
134 condexpr shift 7
91 ID shift 99
62 RBRACK reduce 32
19 LBRACE reduce 13
56 LBRACE reduce 14
24 BECOME reduce 34
161 fielddecl shift 100
169 ABSTRACT reduce 18
66 ELSE shift 101
20 arrayaccess shift 2
167 ABSTRACT reduce 16
134 assign shift 43
11 BECOME shift 102
1 INT shift 70
35 BYTE reduce 94
159 BYTE shift 48
57 BOOLEAN reduce 98
64 BYTE reduce 106
12 expr shift 103
161 classbodydecl shift 104
178 stmntexprlst shift 105
167 NATIVE reduce 16
22 SEMI reduce 31
97 FINAL reduce 64
168 RBRACE reduce 40
114 FINAL reduce 52
67 STATIC reduce 75
94 BECOME reduce 34
156 ABSTRACT reduce 30
146 SHORT reduce 61
21 ABSTRACT shift 106
64 LBRACE reduce 106
46 FINAL reduce 53
179 lefthand shift 11
21 CHAR shift 15
24 stmntexpr shift 107
106 PROTECTED reduce 62
97 PUBLIC reduce 64
57 LBRACE reduce 98
121 emptystmnt shift 108
21 BYTE shift 48
173 RPAREN shift 109
61 simplename shift 17
66 SHORT reduce 94
36 RETURN reduce 97
38 exprstmnt shift 89
66 RBRACE reduce 94
157 PROTECTED reduce 74
46 PUBLIC reduce 53
179 assign shift 43
106 BYTE reduce 62
114 PUBLIC reduce 52
89 FOR reduce 105
158 RBRACE reduce 10
170 COMMA reduce 118
10 WHILE reduce 92
110 WHILE reduce 95
108 WHILE reduce 104
21 arraytype shift 33
183 RPAREN reduce 79
46 CHAR reduce 53
113 NATIVE reduce 42
36 SEMI reduce 97
115 FOR reduce 11
79 WHILE reduce 91
79 FOR reduce 91
38 ifthen shift 110
169 BOOLEAN reduce 18
8 DOT reduce 69
134 arglist shift 111
1 arraytype shift 33
66 FOR reduce 94
76 RETURN shift 12
137 NATIVE reduce 76
61 qualifiedname shift 16
133 arrayaccess shift 2
157 PUBLIC reduce 74
157 EOF reduce 74
58 SEMI reduce 114
137 SEMI reduce 76
172 BYTE reduce 12
79 ELSE reduce 91
178 arrayaccess shift 112
24 DOT reduce 34
158 STATIC reduce 10
113 STATIC reduce 42
60 INTERFACE reduce 43
176 LBRACK shift 39
67 IMPORT reduce 75
56 FOR reduce 14
65 PUBLIC shift 69
97 CLASS reduce 64
88 arrayaccess shift 2
67 packagedecl shift 113
3 COMMA reduce 115
145 block shift 114
1 localvardeclstmnt shift 115
61 condexpr shift 7
181 NATIVE reduce 44
108 BOOLEAN reduce 104
38 LBRACE shift 19
172 IF reduce 12
177 EXTENDS shift 116
75 ID shift 8
99 SEMI reduce 115
146 CLASS reduce 61
69 BYTE reduce 59
100 PUBLIC reduce 29
150 interfaces shift 117
25 RPAREN reduce 116
115 BYTE reduce 11
90 BOOLEAN reduce 19
179 condexpr shift 7
60 EOF reduce 43
104 INT reduce 20
10 RBRACE reduce 92
1 block shift 50
59 NATIVE reduce 63
162 SHORT reduce 37
46 SHORT reduce 53
133 lefthand shift 11
110 RBRACE reduce 95
13 CHAR reduce 66
165 RPAREN reduce 3
127 DOT reduce 80
153 FOR reduce 41
1 BOOLEAN shift 73
1 exprstmnt shift 89
146 CHAR reduce 61
141 RBRACE reduce 54
180 assignexpr shift 62
109 DOT reduce 86
123 variabledecl shift 118
172 CHAR reduce 12
72 INT reduce 60
180 BECOME reduce 34
32 INT reduce 121
141 INT reduce 54
135 FINAL reduce 65
101 stmntnotrail shift 35
160 ID shift 8
35 FOR reduce 94
121 ifthen shift 110
95 numerictype shift 119
168 BYTE reduce 40
175 SEMI shift 120
36 LBRACE reduce 97
94 ID shift 8
48 ID reduce 70
32 RETURN reduce 121
129 CLASS reduce 45
104 FINAL reduce 20
63 RPAREN shift 121
100 FINAL reduce 29
141 BYTE reduce 54
57 BYTE reduce 98
121 IF shift 96
76 SEMI shift 22
110 SEMI reduce 95
100 CHAR reduce 29
129 PROTECTED reduce 45
110 RETURN reduce 95
22 BOOLEAN reduce 31
134 expr shift 68
47 DOT shift 6
178 lefthand shift 11
72 CLASS reduce 60
35 CHAR reduce 94
78 INT reduce 96
168 INT reduce 40
181 IMPORT reduce 44
169 CHAR reduce 18
178 fieldaccess shift 42
105 RBRACE reduce 39
113 EOF reduce 42
158 PROTECTED reduce 10
137 ABSTRACT reduce 76
133 simplename shift 17
116 simplename shift 17
124 arrayaccess shift 2
135 CLASS reduce 65
13 SHORT reduce 66
32 BYTE reduce 121
180 lefthand shift 11
148 COMMA reduce 120
56 SHORT reduce 14
76 emptystmnt shift 108
108 INT reduce 104
179 qualifiedname shift 16
64 IF reduce 106
92 BOOLEAN reduce 35
101 exprstmnt shift 89
138 CLASS reduce 93
74 CHAR reduce 17
121 SEMI shift 22
177 LBRACE reduce 22
150 IMPLEMENTS shift 122
87 COMMA reduce 57
33 ID reduce 83
61 assignexpr shift 62
1 type shift 123
16 DOT reduce 68
79 SEMI reduce 91
20 simplename shift 17
146 PROTECTED reduce 61
101 ifthenelse shift 78
178 LPAREN shift 124
90 PUBLIC reduce 19
184 BECOME reduce 4
180 condexpr shift 7
1 IF shift 96
167 PUBLIC reduce 16
182 DOT reduce 58
19 BYTE reduce 13
113 ABSTRACT reduce 42
53 ID shift 125
56 RBRACE reduce 14
20 assignexpr shift 62
67 NATIVE reduce 75
72 NATIVE reduce 60
85 ID shift 126
168 WHILE reduce 40
50 SHORT reduce 103
38 stmntnotrail shift 35
178 primnoarray shift 127
181 ABSTRACT reduce 44
24 THIS shift 128
162 FOR reduce 37
121 WHILE shift 34
35 RETURN reduce 94
72 CHAR reduce 60
20 assign shift 43
131 FOR reduce 51
134 fieldaccess shift 30
99 LBRACK reduce 115
158 NATIVE reduce 10
69 PROTECTED reduce 59
59 SHORT reduce 63
67 EOF reduce 75
157 CLASS reduce 74
74 NATIVE reduce 17
72 ABSTRACT reduce 60
92 FINAL reduce 35
172 WHILE reduce 12
159 primitivetype shift 31
57 WHILE reduce 98
54 LBRACE reduce 28
24 name shift 47
135 ondemandimport shift 129
35 IF reduce 94
101 IF shift 96
178 BECOME reduce 34
163 type shift 123
135 classdecl shift 130
183 COMMA reduce 79
10 LBRACE reduce 92
88 assign shift 43
57 CHAR reduce 98
28 SEMI shift 131
137 EOF reduce 76
1 primitivetype shift 31
138 SEMI reduce 93
38 block shift 50
92 STATIC reduce 35
134 simplename shift 17
94 assignexpr shift 62
67 ABSTRACT reduce 75
163 arraytype shift 33
59 PROTECTED reduce 63
115 WHILE reduce 11
158 FOR reduce 10
108 ELSE reduce 104
71 COMMA reduce 100
141 STATIC reduce 54
76 ifthen shift 110
54 DOT shift 6
133 name shift 51
75 name shift 132
146 NATIVE reduce 61
115 BOOLEAN reduce 11
115 CHAR reduce 11
89 LBRACE reduce 105
35 SEMI reduce 94
50 WHILE reduce 103
182 RBRACE reduce 58
102 BECOME reduce 9
128 DOT reduce 85
172 SEMI reduce 12
152 COMMA shift 133
179 RPAREN reduce 1
13 INT reduce 66
47 LPAREN shift 134
104 CHAR reduce 20
57 FOR reduce 98
178 simplename shift 17
113 importdecls shift 135
176 RPAREN reduce 77
131 CHAR reduce 51
8 SEMI reduce 69
172 RETURN reduce 12
60 NATIVE reduce 43
140 STAR shift 136
77 SEMI shift 137
132 SEMI shift 138
134 lefthand shift 11
100 BOOLEAN reduce 29
106 CLASS reduce 62
88 name shift 51
20 BECOME reduce 34
10 IF reduce 92
124 assignexpr shift 62
163 BYTE shift 48
180 simplename shift 17
100 ABSTRACT reduce 29
10 FOR reduce 92
92 BYTE reduce 35
121 for shift 57
93 ID shift 3
46 NATIVE reduce 53
100 PROTECTED reduce 29
74 RBRACE reduce 17
110 INT reduce 95
129 PUBLIC reduce 45
62 RPAREN reduce 32
57 SHORT reduce 98
160 qualifiedname shift 16
31 ID reduce 107
95 INT shift 70
113 PUBLIC reduce 42
36 IF reduce 97
162 CHAR reduce 37
163 referencetype shift 29
65 CLASS shift 139
46 BYTE reduce 53
161 FINAL reduce 65
59 BOOLEAN reduce 63
79 IF reduce 91
10 CHAR reduce 92
147 LPAREN reduce 90
114 CHAR reduce 52
14 COMMA reduce 113
64 ELSE reduce 106
60 IMPORT reduce 43
22 SHORT reduce 31
88 BECOME reduce 34
167 INT reduce 16
24 arraycreate shift 44
74 BYTE reduce 17
25 BECOME reduce 116
3 LBRACK reduce 115
51 LBRACK shift 61
19 CHAR reduce 13
10 BOOLEAN reduce 92
72 PROTECTED reduce 60
158 ELSE reduce 10
74 PROTECTED reduce 17
56 BYTE reduce 14
43 RBRACE reduce 8
104 PUBLIC reduce 20
132 DOT shift 140
19 SHORT reduce 13
43 RBRACK reduce 8
79 RETURN reduce 91
38 SEMI shift 22
88 qualifiedname shift 16
181 PROTECTED reduce 44
145 methodbody shift 141
97 INTERFACE reduce 64
97 CHAR reduce 64
19 WHILE reduce 13
179 COMMA reduce 1
21 NATIVE shift 97
35 LBRACE reduce 94
64 RETURN reduce 106
129 INTERFACE reduce 45
156 PROTECTED reduce 30
60 ABSTRACT reduce 43
108 BYTE reduce 104
57 IF reduce 98
12 fieldaccess shift 30
99 COMMA reduce 115
110 BYTE reduce 95
100 INT reduce 29
156 STATIC reduce 30
143 LBRACE reduce 55
120 assignexpr shift 62
37 EOF shift 142
106 STATIC reduce 62
12 qualifiedname shift 16
176 COMMA reduce 77
92 ABSTRACT reduce 35
19 INT reduce 13
121 retstmnt shift 64
1 retstmnt shift 64
90 STATIC reduce 19
134 RPAREN reduce 1
22 RETURN reduce 31
157 IMPORT reduce 74
147 DOT reduce 90
95 BOOLEAN shift 73
59 FINAL reduce 63
101 emptystmnt shift 108
120 name shift 51
151 RPAREN shift 143
8 IMPLEMENTS reduce 69
49 RBRACE reduce 99
97 SHORT reduce 64
162 WHILE reduce 37
67 PUBLIC reduce 75
120 qualifiedname shift 16
71 RBRACE reduce 100
76 FOR shift 84
10 ELSE reduce 92
59 INT reduce 63
169 NATIVE reduce 18
7 SEMI reduce 7
59 PUBLIC reduce 63
134 COMMA reduce 1
22 WHILE reduce 31
66 WHILE reduce 94
61 fieldaccess shift 30
21 PROTECTED shift 72
162 BYTE reduce 37
38 ifthenelse shift 78
65 FINAL shift 59
116 qualifiedname shift 16
181 FINAL reduce 44
72 BOOLEAN reduce 60
65 ABSTRACT shift 106
99 BECOME reduce 115
66 LBRACE reduce 94
156 BYTE reduce 30
120 ID shift 8
111 COMMA shift 133
153 BOOLEAN reduce 41
174 SEMI reduce 38
113 IMPORT reduce 42
36 CHAR reduce 97
161 INT reduce 65
146 STATIC reduce 61
35 WHILE reduce 94
116 ID shift 8
64 WHILE reduce 106
161 BYTE reduce 65
52 RBRACE shift 144
78 IF reduce 96
106 FINAL reduce 62
162 RETURN reduce 37
59 CHAR reduce 63
104 BOOLEAN reduce 20
69 BOOLEAN reduce 59
168 FOR reduce 40
69 INTERFACE reduce 59
135 PUBLIC reduce 65
120 condexpr shift 7
76 block shift 50
161 methodhead shift 145
69 STATIC reduce 59
95 BYTE shift 48
18 SEMI reduce 50
17 BECOME reduce 67
17 IMPLEMENTS reduce 67
135 ABSTRACT reduce 65
121 LBRACE shift 19
158 BYTE reduce 10
65 STATIC shift 146
46 PROTECTED reduce 53
140 ID shift 147
156 CHAR reduce 30
74 SHORT reduce 17
179 simplename shift 17
19 RETURN reduce 13
158 WHILE reduce 10
38 FOR shift 84
21 primitivetype shift 31
94 arrayinit shift 148
79 SHORT reduce 91
106 NATIVE reduce 62
141 CHAR reduce 54
32 CHAR reduce 121
35 RBRACE reduce 94
108 CHAR reduce 104
13 BOOLEAN reduce 66
146 INTERFACE reduce 61
135 typedecl shift 149
12 lefthand shift 11
16 IMPLEMENTS reduce 68
177 super shift 150
95 params shift 151
115 RBRACE reduce 11
179 arglist shift 152
156 NATIVE reduce 30
168 SEMI reduce 40
108 IF reduce 104
133 assignexpr shift 62
169 INT reduce 18
22 LBRACE reduce 31
50 LBRACE reduce 103
1 numerictype shift 119
180 qualifiedname shift 16
64 FOR reduce 106
145 LBRACE shift 19
86 RBRACE reduce 101
75 qualifiedname shift 16
78 RBRACE reduce 96
74 ABSTRACT reduce 17
38 RETURN shift 12
1 while shift 36
156 BOOLEAN reduce 30
142 ABSTRACT reduce 0
8 LPAREN reduce 69
101 stmnt shift 153
38 emptystmnt shift 108
7 RBRACE reduce 7
7 RBRACK reduce 7
157 STATIC reduce 74
1 FOR shift 84
67 CLASS reduce 75
126 extendsinterfaces shift 154
141 PROTECTED reduce 54
149 EOF reduce 36
69 SHORT reduce 59
146 PUBLIC reduce 61
97 BOOLEAN reduce 64
93 variabledeclid shift 14
110 LBRACE reduce 95
13 BYTE reduce 66
141 PUBLIC reduce 54
60 FINAL reduce 43
94 COMMA reduce 5
104 RBRACE reduce 20
157 SEMI reduce 74
1 for shift 57
60 STATIC reduce 43
78 BYTE reduce 96
159 numerictype shift 119
92 NATIVE reduce 35
122 qualifiedname shift 16
131 BYTE reduce 51
169 FINAL reduce 18
158 LBRACE reduce 10
129 EOF reduce 45
158 BOOLEAN reduce 10
64 SEMI reduce 106
13 CLASS reduce 66
91 variabledecl shift 118
153 SHORT reduce 41
119 ID reduce 82
17 LPAREN reduce 67
78 LBRACE reduce 96
76 exprstmnt shift 89
168 SHORT reduce 40
61 name shift 51
135 SEMI shift 155
30 BECOME reduce 48
115 SEMI reduce 11
45 IMPLEMENTS reduce 23
115 RETURN reduce 11
25 SEMI reduce 116
137 PUBLIC reduce 76
19 IF reduce 13
161 methoddecl shift 156
12 BECOME reduce 34
135 PROTECTED reduce 65
46 BOOLEAN reduce 53
21 BOOLEAN shift 73
146 BYTE reduce 61
129 SEMI reduce 45
136 SEMI shift 157
179 assignexpr shift 62
1 RBRACE shift 158
151 COMMA shift 159
90 BYTE reduce 19
169 PUBLIC reduce 18
1 ifthenelse shift 78
113 CLASS reduce 42
129 NATIVE reduce 45
159 type shift 98
67 PACKAGE shift 160
100 BYTE reduce 29
162 SEMI reduce 37
153 INT reduce 41
25 LBRACK reduce 116
158 INT reduce 10
163 INT shift 70
66 SEMI reduce 94
79 RBRACE reduce 91
26 RBRACE reduce 33
21 INT shift 70
158 ABSTRACT reduce 10
129 ABSTRACT reduce 45
156 RBRACE reduce 30
143 SEMI reduce 55
10 BYTE reduce 92
13 STATIC reduce 66
24 primnoarray shift 127
138 PUBLIC reduce 93
90 classbodydecls shift 161
76 stmnt shift 162
84 LBRACE shift 163
163 numerictype shift 119
87 RBRACE reduce 57
21 numerictype shift 119
162 BOOLEAN reduce 37
138 IMPORT reduce 93
180 arrayaccess shift 2
94 expr shift 164
101 SEMI shift 22
55 COMMA shift 93
24 arrayaccess shift 112
90 SHORT reduce 19
133 expr shift 165
1 emptystmnt shift 108
134 arrayaccess shift 2
157 FINAL reduce 74
47 BECOME reduce 47
50 INT reduce 103
76 ifthenelse shift 78
79 LBRACE reduce 91
169 BYTE reduce 18
24 LPAREN shift 124
15 ID reduce 73
117 classbody shift 166
129 STATIC reduce 45
16 SEMI reduce 68
60 SEMI reduce 43
161 classmemberdecl shift 167
67 SEMI reduce 75
167 RBRACE reduce 16
38 IF shift 96
121 stmnt shift 168
5 RBRACE reduce 6
79 BOOLEAN reduce 91
24 methodinvoke shift 71
35 SHORT reduce 94
108 SEMI reduce 104
35 BOOLEAN reduce 94
56 SEMI reduce 14
130 EOF reduce 110
131 SEMI reduce 51
56 INT reduce 14
90 PROTECTED reduce 19
166 EOF reduce 21
21 STATIC shift 146
59 CLASS reduce 63
76 LBRACE shift 19
161 constructordecl shift 169
150 LBRACE reduce 24
124 qualifiedname shift 16
74 INT reduce 17
72 INTERFACE reduce 60
70 ID reduce 72
167 CHAR reduce 16
135 STATIC reduce 65
110 FOR reduce 95
92 SHORT reduce 35
36 RBRACE reduce 97
17 DOT reduce 67
13 INTERFACE reduce 66
56 BOOLEAN reduce 14
97 NATIVE reduce 64
153 CHAR reduce 41
93 variabledecl shift 170
159 referencetype shift 29
158 SHORT reduce 10
108 RBRACE reduce 104
92 PROTECTED reduce 35
178 forupdate shift 171
76 retstmnt shift 64
181 CLASS reduce 44
135 NATIVE reduce 65
131 WHILE reduce 51
113 FINAL reduce 42
1 stmnt shift 172
181 PUBLIC reduce 44
161 STATIC reduce 65
57 SEMI reduce 98
124 expr shift 173
172 BOOLEAN reduce 12
163 localvardecl shift 174
163 CHAR shift 15
60 CLASS reduce 43
42 BECOME reduce 48
163 forinit shift 175
76 stmntnotrail shift 35
98 variabledeclid shift 176
131 SHORT reduce 51
135 INTERFACE reduce 65
83 SEMI reduce 56
138 NATIVE reduce 93
46 ABSTRACT reduce 53
61 BECOME reduce 34
24 lefthand shift 11
139 ID shift 177
66 CHAR reduce 94
97 BYTE reduce 64
36 FOR reduce 97
57 RBRACE reduce 98
147 BECOME reduce 90
35 INT reduce 94
168 LBRACE reduce 40
72 BYTE reduce 60
68 COMMA reduce 2
27 SEMI shift 178
125 LPAREN shift 179
50 CHAR reduce 103
19 BOOLEAN reduce 13
60 PUBLIC reduce 43
34 LPAREN shift 180
153 RBRACE reduce 41
24 qualifiedname shift 16
23 ID reduce 71
38 for shift 57
135 singletypeimport shift 181
101 ifthen shift 110
106 INTERFACE reduce 62
152 RPAREN shift 182
32 SEMI reduce 121
101 for shift 57
36 INT reduce 97
156 INT reduce 30
97 STATIC reduce 64
89 ELSE reduce 105
159 param shift 183
32 FOR reduce 121
107 RBRACE reduce 102
20 name shift 51
104 STATIC reduce 20
89 BYTE reduce 105
133 assign shift 43
180 fieldaccess shift 30
82 RBRACK shift 184
78 FOR reduce 96
6 ID shift 147
89 SHORT reduce 105
179 name shift 51
73 ID reduce 84
158 FINAL reduce 10
110 SHORT reduce 95
161 PROTECTED reduce 65
51 BECOME reduce 47
94 assign shift 43
131 LBRACE reduce 51
120 lefthand shift 11
120 assign shift 43
66 BYTE reduce 94
124 condexpr shift 7
12 name shift 51
86 COMMA reduce 101
69 ABSTRACT reduce 59
50 SEMI reduce 103
50 ELSE reduce 103
89 RETURN reduce 105
89 BOOLEAN reduce 105
69 NATIVE reduce 59
134 qualifiedname shift 16
88 simplename shift 17
32 WHILE reduce 121
68 RPAREN reduce 2
66 INT reduce 94
89 INT reduce 105
169 SHORT reduce 18
79 CHAR reduce 91
5 RBRACK reduce 6
107 COMMA reduce 102
92 PUBLIC reduce 35
12 simplename shift 17
1 ifthen shift 110
178 THIS shift 128
106 SHORT reduce 62
135 EOF reduce 109
