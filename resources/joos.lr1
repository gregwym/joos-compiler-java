67
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
76
S
arglist
arrayaccess
arraycreate
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classcreateexpr
classdecl
classmemberdecl
condexpr
constructordecl
constructordeclor
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntwotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledeclor
variabledeclid
variabledeclors
variableinit
while
S
136
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
constructordecl modifiers constructordeclor block
constructordeclor simplename LPAREN params RPAREN
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interfacelist
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
fieldaccess
fielddecl modifiers type variabledeclors SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit
forinit stmntexprlst
forinit localvardecl
forupdate
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntwotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledeclors
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntwotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexpr classcreateexpr
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntwotrail block
stmntwotrail emptystmnt
stmntwotrail exprstmnt
stmntwotrail retstmnt
exprstmnt stmntexpr SEMI
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledeclor variabledeclid
variabledeclor variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledeclors variabledeclor
variabledeclors variabledeclors COMMA variabledeclor
variableinit expr
while WHILE LPAREN expr RPAREN stmnt
204
1615
144 STATIC reduce 21
88 ELSE reduce 119
126 while shift 1
69 name shift 2
3 WHILE reduce 109
41 ifthenelse shift 3
61 SHORT reduce 70
22 RPAREN reduce 88
203 LBRACE reduce 12
21 FOR reduce 104
200 CHAR reduce 63
110 STATIC reduce 17
133 CLASS reduce 47
160 ABSTRACT reduce 74
72 ID reduce 61
129 STATIC reduce 19
72 IF reduce 61
41 stmntexpr shift 4
167 PROTECTED reduce 62
161 CHAR reduce 11
92 BYTE reduce 121
178 INT reduce 135
165 lefthand shift 5
183 VOID reduce 23
41 LPAREN shift 6
51 COMMA reduce 114
42 arrayaccess shift 7
161 BOOLEAN reduce 11
105 COMMA reduce 130
170 SEMI reduce 48
196 BYTE reduce 33
152 FINAL reduce 32
126 qualifiedname shift 8
61 CLASS reduce 70
185 VOID reduce 77
1 BECOME reduce 110
147 SEMI reduce 68
157 RPAREN shift 9
15 BYTE reduce 108
161 ELSE reduce 11
178 SEMI reduce 135
138 EOF reduce 126
24 DOT shift 10
90 SEMI reduce 107
155 CHAR shift 11
150 FOR reduce 15
194 assign shift 12
94 PUBLIC reduce 85
42 block shift 13
161 WHILE reduce 11
53 ID reduce 31
153 LBRACE shift 14
67 ifthen shift 15
82 BECOME shift 16
60 ID shift 17
31 RPAREN reduce 35
1 RETURN reduce 110
126 fieldaccess shift 18
21 BOOLEAN reduce 104
31 COMMA reduce 35
80 expr shift 19
145 STATIC reduce 37
74 condexpr shift 20
80 SEMI shift 21
47 variabledeclid shift 22
189 simplename shift 23
25 primary shift 24
79 BECOME reduce 52
45 LBRACE shift 25
109 FOR reduce 46
142 LBRACE shift 14
106 BECOME reduce 118
36 RPAREN reduce 90
132 simplename shift 23
75 arglist shift 26
114 ID reduce 76
139 RPAREN reduce 7
192 ID reduce 29
14 RETURN reduce 14
33 DOT reduce 107
42 SEMI shift 27
185 SHORT reduce 77
21 ELSE reduce 104
18 BECOME reduce 53
67 primary shift 24
186 LPAREN reduce 105
186 LBRACE reduce 105
40 ID reduce 94
88 LPAREN reduce 119
132 IF shift 28
25 localvardecl shift 29
27 BOOLEAN reduce 34
132 ID shift 30
78 ID reduce 81
176 ID shift 30
6 assignexpr shift 31
161 ABSTRACT reduce 11
82 LBRACK shift 32
132 stmntwotrail shift 33
182 SEMI shift 34
106 RBRACE reduce 118
170 PUBLIC reduce 48
88 SHORT reduce 119
126 localvardecl shift 35
74 assign shift 12
110 FINAL reduce 17
114 PROTECTED reduce 76
93 condexpr shift 20
97 param shift 36
182 ondemandimport shift 37
142 methodbody shift 38
121 BYTE reduce 20
126 arraycreate shift 39
88 WHILE reduce 119
16 BECOME reduce 36
13 IF reduce 117
125 BECOME reduce 52
126 numerictype shift 40
46 STATIC reduce 72
13 ID reduce 117
178 RBRACE reduce 135
90 INT reduce 107
143 THIS reduce 120
67 ID shift 30
69 qualifiedname shift 8
67 IF shift 28
128 RPAREN shift 41
36 COMMA reduce 90
189 BECOME reduce 36
50 BOOLEAN reduce 75
89 RPAREN shift 42
84 SEMI reduce 112
126 block shift 13
145 CHAR reduce 37
6 arrayaccess shift 43
126 BECOME reduce 36
75 arrayaccess shift 43
161 INT reduce 11
80 lefthand shift 5
67 arrayaccess shift 7
194 qualifiedname shift 8
15 DOT reduce 108
1 RBRACE reduce 110
25 BOOLEAN shift 44
158 DOT reduce 69
90 BECOME reduce 107
46 INTERFACE reduce 72
42 primary shift 24
25 simplename shift 23
8 SEMI reduce 79
144 ABSTRACT reduce 21
41 FOR shift 45
198 INT reduce 13
174 STATIC shift 46
27 ELSE reduce 34
143 ELSE reduce 120
118 type shift 47
133 SEMI reduce 47
100 EOF reduce 125
30 BECOME reduce 80
17 BECOME reduce 101
130 ABSTRACT reduce 106
67 while shift 1
129 ABSTRACT reduce 19
175 ID reduce 78
70 COMMA shift 48
62 EOF reduce 49
115 LPAREN reduce 45
145 SHORT reduce 37
64 variabledeclors shift 49
174 NATIVE shift 50
93 ID shift 30
14 RBRACE reduce 14
136 name shift 2
67 classcreateexpr shift 51
67 for shift 52
41 lefthand shift 5
176 name shift 53
52 SEMI reduce 111
178 ID reduce 135
178 IF reduce 135
97 qualifiedname shift 8
126 BOOLEAN shift 44
200 BOOLEAN reduce 63
126 arraytype shift 54
67 lefthand shift 5
49 COMMA shift 55
163 VOID reduce 73
183 FINAL reduce 23
189 THIS shift 56
150 LBRACE reduce 15
8 LPAREN reduce 79
80 condexpr shift 20
97 INT shift 57
109 RETURN reduce 46
41 arrayaccess shift 7
72 DOT reduce 61
130 PUBLIC reduce 106
155 numerictype shift 40
118 SHORT shift 58
170 INTERFACE reduce 48
27 DOT reduce 34
193 RPAREN reduce 1
126 stmntwotrail shift 33
126 for shift 52
42 methodinvoke shift 59
53 DOT shift 60
182 CLASS reduce 76
67 stmntexpr shift 4
189 methodinvoke shift 59
136 ID shift 30
155 PUBLIC shift 61
107 RPAREN reduce 91
182 singletypeimport shift 62
61 BOOLEAN reduce 70
171 RBRACE shift 63
61 CHAR reduce 70
103 ID reduce 30
182 FINAL reduce 76
132 while shift 1
44 LBRACK reduce 95
37 PUBLIC reduce 50
106 LPAREN reduce 118
126 type shift 64
145 PROTECTED reduce 37
172 INT shift 57
143 BECOME reduce 120
38 RBRACE reduce 64
16 qualifiedname shift 8
145 BYTE reduce 37
169 FOR reduce 39
75 name shift 2
42 primnoarray shift 65
46 PROTECTED reduce 72
80 assign shift 12
114 PUBLIC reduce 76
126 WHILE shift 66
90 DOT reduce 107
90 ELSE shift 67
126 FOR shift 45
106 THIS reduce 118
172 qualifiedname shift 8
193 ID shift 30
75 ID shift 30
0 BOF shift 68
3 INT reduce 109
129 CHAR reduce 19
88 INT reduce 119
118 arraytype shift 54
88 DOT reduce 119
33 IF reduce 107
125 LBRACK shift 69
193 arglist shift 70
185 ID reduce 77
132 DOT reduce 36
110 RBRACE reduce 17
21 WHILE reduce 104
126 simplename shift 23
33 ID reduce 107
184 PUBLIC reduce 87
194 BECOME reduce 36
69 fieldaccess shift 71
38 CHAR reduce 64
93 assign shift 12
27 SEMI reduce 34
68 IMPORT reduce 86
198 RETURN reduce 13
17 LPAREN reduce 101
136 lefthand shift 5
150 BYTE reduce 15
3 RETURN reduce 109
35 SEMI shift 72
106 ELSE reduce 118
48 assignexpr shift 31
21 BYTE reduce 104
21 SEMI reduce 104
1 SEMI reduce 110
42 fieldaccess shift 18
33 CHAR reduce 107
114 staticinit shift 73
183 CHAR reduce 23
119 ID reduce 102
109 BYTE reduce 46
66 LPAREN shift 74
117 SEMI reduce 41
115 FOR reduce 45
163 SHORT reduce 73
177 ID shift 30
25 qualifiedname shift 8
79 LPAREN shift 75
14 BECOME reduce 14
6 expr shift 76
198 RBRACE reduce 13
48 qualifiedname shift 8
130 NATIVE reduce 106
15 INT reduce 108
118 params shift 77
38 VOID reduce 64
25 BYTE shift 78
80 BECOME reduce 36
183 PROTECTED reduce 23
168 SEMI reduce 133
126 name shift 79
132 RETURN shift 80
42 simplename shift 23
46 CLASS reduce 72
203 SEMI reduce 12
160 STATIC reduce 74
1 BOOLEAN reduce 110
25 classcreateexpr shift 51
203 LPAREN reduce 12
189 forupdate shift 81
127 variabledeclid shift 82
183 STATIC reduce 23
46 NATIVE reduce 72
127 methoddeclor shift 83
2 DOT shift 60
132 LBRACE shift 14
143 SHORT reduce 120
15 BECOME reduce 108
16 condexpr shift 20
1 WHILE reduce 110
16 name shift 2
198 DOT reduce 13
72 LBRACE reduce 61
83 SEMI reduce 65
132 assign shift 84
170 IMPORT reduce 48
25 SEMI reduce 40
95 COMMA reduce 131
185 BYTE reduce 77
88 RETURN reduce 119
126 RETURN shift 80
73 VOID reduce 18
165 methodinvoke shift 59
119 LBRACK shift 85
99 expr shift 86
68 file shift 87
30 LBRACE reduce 80
90 LPAREN reduce 107
203 CHAR reduce 12
182 PUBLIC reduce 76
30 LBRACK reduce 80
155 BYTE shift 78
55 variabledeclid shift 82
167 FINAL reduce 62
23 DOT reduce 78
143 IF reduce 120
143 ID reduce 120
163 PROTECTED reduce 73
118 qualifiedname shift 8
73 CHAR reduce 18
41 exprstmnt shift 88
145 BOOLEAN reduce 37
133 IMPORT reduce 47
20 RBRACE reduce 8
175 DOT reduce 78
20 RBRACK reduce 8
189 fieldaccess shift 18
167 PUBLIC reduce 62
88 BECOME reduce 119
74 expr shift 89
50 ABSTRACT reduce 75
3 BECOME reduce 109
110 PROTECTED reduce 17
21 LBRACE reduce 104
15 LBRACE reduce 108
21 RBRACE reduce 104
72 RBRACE reduce 61
73 PUBLIC reduce 18
6 condexpr shift 20
80 qualifiedname shift 8
156 PROTECTED reduce 71
41 stmntwotrail shift 90
184 ABSTRACT reduce 87
112 BECOME reduce 130
155 VOID shift 91
72 SEMI reduce 61
74 ID shift 30
133 NATIVE reduce 47
115 SHORT reduce 45
4 SEMI shift 92
79 LBRACK shift 93
69 arrayaccess shift 43
150 BECOME reduce 15
155 arraytype shift 54
105 SEMI reduce 130
99 simplename shift 23
172 numerictype shift 40
186 THIS reduce 105
150 SEMI reduce 15
156 BOOLEAN reduce 71
92 SHORT reduce 121
31 SEMI reduce 35
180 SEMI shift 94
25 arrayaccess shift 7
114 BOOLEAN reduce 76
97 ID shift 30
14 FOR reduce 14
130 STATIC reduce 106
48 name shift 2
143 BYTE reduce 120
27 ID reduce 34
48 BECOME reduce 36
27 IF reduce 34
121 ABSTRACT reduce 20
32 RBRACK shift 95
121 CHAR reduce 20
3 IF reduce 109
75 simplename shift 23
3 ID reduce 109
38 ID reduce 64
155 BOOLEAN shift 44
52 INT reduce 111
144 SHORT reduce 21
155 ID shift 30
37 NATIVE reduce 50
25 fieldaccess shift 18
41 ifthen shift 15
163 PUBLIC reduce 73
31 RBRACK reduce 35
156 FINAL reduce 71
51 RBRACE reduce 114
109 THIS reduce 46
67 arraycreate shift 39
150 CHAR reduce 15
99 lefthand shift 5
74 qualifiedname shift 8
41 ID shift 30
41 IF shift 28
126 assign shift 84
185 CLASS reduce 77
74 arrayaccess shift 43
99 assign shift 12
189 assign shift 84
42 LPAREN shift 6
26 COMMA shift 48
132 qualifiedname shift 8
74 assignexpr shift 31
37 EOF reduce 50
88 ID reduce 119
189 RBRACE reduce 43
88 IF reduce 119
73 BYTE reduce 18
127 variabledeclors shift 96
191 LPAREN shift 97
114 RBRACE shift 98
42 DOT reduce 36
25 primnoarray shift 65
13 BYTE reduce 117
129 FINAL reduce 19
1 CHAR reduce 110
15 WHILE reduce 108
90 IF reduce 107
198 SEMI reduce 13
73 ABSTRACT reduce 18
136 qualifiedname shift 8
144 INT reduce 21
75 condexpr shift 20
169 RETURN reduce 39
150 SHORT reduce 15
67 simplename shift 23
131 SEMI shift 99
25 BECOME reduce 36
109 WHILE reduce 46
90 ID reduce 107
182 classdecl shift 100
165 stmntexpr shift 101
126 classcreateexpr shift 51
161 BECOME reduce 11
92 LPAREN reduce 121
75 assign shift 12
161 RETURN reduce 11
115 SEMI reduce 45
38 SHORT reduce 64
114 INT reduce 76
127 variabledeclor shift 102
42 exprstmnt shift 88
176 interface shift 103
16 assign shift 12
109 CHAR reduce 46
67 ifthenelse shift 3
126 ifthen shift 15
203 WHILE reduce 12
101 RBRACE reduce 116
126 primnoarray shift 65
106 ID reduce 118
106 IF reduce 118
93 expr shift 104
199 COMMA reduce 134
1 LPAREN reduce 110
29 SEMI reduce 42
25 arraytype shift 54
42 stmntwotrail shift 33
67 RETURN shift 80
115 BECOME reduce 45
184 PROTECTED reduce 87
169 LPAREN reduce 39
165 assign shift 84
127 ID shift 105
25 ID shift 30
150 INT reduce 15
121 BOOLEAN reduce 20
67 THIS shift 56
25 numerictype shift 40
14 SEMI reduce 14
3 BYTE reduce 109
102 COMMA reduce 132
193 condexpr shift 20
97 simplename shift 23
37 INTERFACE reduce 50
67 emptystmnt shift 106
75 RPAREN reduce 1
161 FOR reduce 11
156 ID reduce 71
119 DOT shift 60
6 fieldaccess shift 71
172 SHORT shift 58
172 param shift 107
33 THIS reduce 107
21 RETURN reduce 104
68 NATIVE reduce 86
7 DOT reduce 100
189 primnoarray shift 65
14 LBRACE reduce 14
165 primnoarray shift 65
184 STATIC reduce 87
126 DOT reduce 36
90 FOR reduce 107
164 LBRACE reduce 27
193 assignexpr shift 31
68 SEMI reduce 86
13 INT reduce 117
200 PUBLIC reduce 63
92 RBRACE reduce 121
74 lefthand shift 5
185 INTERFACE reduce 77
41 while shift 1
114 FINAL reduce 76
168 COMMA reduce 133
69 assignexpr shift 31
33 BYTE reduce 107
156 STATIC reduce 71
200 BYTE reduce 63
167 ID reduce 62
130 PROTECTED reduce 106
13 BOOLEAN reduce 117
61 VOID reduce 70
178 LPAREN reduce 135
185 ABSTRACT reduce 77
118 ID shift 30
50 STATIC reduce 75
61 BYTE reduce 70
152 NATIVE reduce 32
3 RBRACE reduce 109
143 DOT reduce 120
174 INTERFACE shift 108
67 stmnt shift 109
97 BYTE shift 78
139 RBRACK reduce 7
126 THIS shift 56
139 RBRACE reduce 7
115 BOOLEAN reduce 45
198 LPAREN reduce 13
67 FOR shift 45
193 lefthand shift 5
165 ID shift 30
114 classmemberdecl shift 110
92 FOR reduce 121
134 name shift 111
52 THIS reduce 111
193 assign shift 12
46 BOOLEAN reduce 72
174 PUBLIC shift 61
62 ABSTRACT reduce 49
196 SHORT reduce 33
47 ID shift 112
25 referencetype shift 113
160 CLASS reduce 74
114 NATIVE reduce 76
194 arrayaccess shift 43
144 FINAL reduce 21
73 RBRACE reduce 18
92 SEMI reduce 121
163 INTERFACE reduce 73
200 VOID reduce 63
121 classbodydecls shift 114
118 INT shift 57
129 RBRACE reduce 19
42 ifthen shift 15
33 RETURN reduce 107
92 WHILE reduce 121
118 referencetype shift 113
27 INT reduce 34
50 BYTE reduce 75
41 stmnt shift 115
132 primary shift 24
16 fieldaccess shift 71
46 INT reduce 72
182 EOF reduce 124
129 SHORT reduce 19
72 INT reduce 61
193 name shift 2
95 RPAREN reduce 131
145 VOID reduce 37
64 ID shift 112
196 VOID reduce 33
84 RBRACE reduce 112
63 EOF reduce 51
16 lefthand shift 5
99 ID shift 30
144 NATIVE reduce 21
144 ID reduce 21
97 arraytype shift 54
92 CHAR reduce 121
158 RBRACE reduce 69
145 FINAL reduce 37
43 BECOME reduce 54
3 DOT reduce 109
202 EXTENDS shift 116
88 THIS reduce 119
48 fieldaccess shift 71
62 PROTECTED reduce 49
169 INT reduce 39
96 COMMA shift 55
186 FOR reduce 105
25 stmntexprlst shift 117
184 CLASS reduce 87
15 RBRACE reduce 108
41 DOT reduce 36
121 INT reduce 20
175 LPAREN shift 118
15 CHAR reduce 108
172 name shift 119
177 name shift 120
149 LBRACE reduce 66
95 BECOME reduce 131
52 RBRACE reduce 111
172 ID shift 30
50 CHAR reduce 75
185 NATIVE reduce 77
183 SHORT reduce 23
50 VOID reduce 75
93 lefthand shift 5
183 ID reduce 23
130 SEMI reduce 106
88 BOOLEAN reduce 119
94 ABSTRACT reduce 85
140 IMPLEMENTS reduce 26
179 LBRACE shift 121
72 RETURN reduce 61
129 BOOLEAN reduce 19
163 CHAR reduce 73
161 VOID reduce 11
189 LPAREN shift 6
34 EOF reduce 127
101 SEMI reduce 116
25 lefthand shift 5
48 condexpr shift 20
146 RPAREN reduce 3
42 ID shift 30
126 BYTE shift 78
42 IF shift 28
38 ABSTRACT reduce 64
27 RETURN reduce 34
15 LPAREN reduce 108
38 PUBLIC reduce 64
145 RBRACE reduce 37
50 INTERFACE reduce 75
178 RETURN reduce 135
126 INT shift 57
13 DOT reduce 117
41 THIS shift 56
94 FINAL reduce 85
198 LBRACE reduce 13
136 BECOME reduce 36
185 INT reduce 77
170 STATIC reduce 48
110 ABSTRACT reduce 17
148 DOT reduce 4
155 primitivetype shift 122
115 CHAR reduce 45
200 FINAL reduce 63
72 WHILE reduce 61
189 stmntexpr shift 123
161 PROTECTED reduce 11
158 COMMA reduce 69
200 STATIC reduce 63
144 PUBLIC reduce 21
167 ABSTRACT reduce 62
52 LPAREN reduce 111
106 INT reduce 118
61 ID reduce 70
155 INT shift 57
21 LPAREN reduce 104
106 DOT reduce 118
126 ID shift 30
126 IF shift 28
37 FINAL reduce 50
93 arrayaccess shift 43
152 STATIC reduce 32
42 emptystmnt shift 106
27 SHORT reduce 34
71 BECOME reduce 53
52 SHORT reduce 111
197 BECOME reduce 10
10 ID shift 124
42 name shift 125
116 qualifiedname shift 8
129 BYTE reduce 19
133 EOF reduce 47
38 STATIC reduce 64
118 simplename shift 23
163 BYTE reduce 73
165 DOT reduce 36
165 arraycreate shift 39
93 simplename shift 23
25 DOT reduce 36
94 CLASS reduce 85
14 blockstmnts shift 126
42 for shift 52
14 INT reduce 14
196 PROTECTED reduce 33
145 NATIVE reduce 37
58 ID reduce 82
67 name shift 125
59 SEMI reduce 113
166 ID shift 17
21 IF reduce 104
161 STATIC reduce 11
21 ID reduce 104
69 assign shift 12
144 PROTECTED reduce 21
155 SHORT shift 58
16 ID shift 30
41 methodinvoke shift 59
62 NATIVE reduce 49
110 SHORT reduce 17
72 BECOME reduce 61
182 ABSTRACT reduce 76
23 LPAREN reduce 78
129 NATIVE reduce 19
203 BYTE reduce 12
203 DOT reduce 12
6 qualifiedname shift 8
160 SHORT reduce 74
9 SEMI reduce 67
185 BOOLEAN reduce 77
194 fieldaccess shift 71
156 CHAR reduce 71
136 assign shift 12
161 SHORT reduce 11
13 WHILE reduce 117
197 ID reduce 10
200 ABSTRACT reduce 63
61 FINAL reduce 70
41 RETURN shift 80
94 SEMI reduce 85
155 type shift 127
193 COMMA reduce 1
41 classcreateexpr shift 51
136 expr shift 128
92 BECOME reduce 121
62 STATIC reduce 49
189 qualifiedname shift 8
92 LBRACE reduce 121
170 CLASS reduce 48
203 INT reduce 12
40 LBRACK reduce 94
158 SEMI reduce 69
134 ID shift 30
52 RETURN reduce 111
178 DOT reduce 135
15 SEMI reduce 108
136 assignexpr shift 31
160 BOOLEAN reduce 74
161 THIS reduce 11
148 BECOME reduce 4
163 FINAL reduce 73
25 SHORT shift 58
196 FINAL reduce 33
41 simplename shift 23
3 THIS reduce 109
1 FOR reduce 110
52 WHILE reduce 111
172 BOOLEAN shift 44
8 IMPLEMENTS reduce 79
8 ID reduce 79
152 PROTECTED reduce 32
161 NATIVE reduce 11
68 ABSTRACT reduce 86
162 ABSTRACT reduce 0
30 LPAREN reduce 80
184 FINAL reduce 87
6 simplename shift 23
27 BYTE reduce 34
114 constructordecl shift 129
94 PROTECTED reduce 85
198 BOOLEAN reduce 13
129 PUBLIC reduce 19
203 RETURN reduce 12
67 methodinvoke shift 59
14 SHORT reduce 14
112 LBRACK reduce 130
188 LBRACE reduce 24
160 INTERFACE reduce 74
57 ID reduce 83
52 ID reduce 111
67 assign shift 84
194 name shift 2
52 IF reduce 111
16 arrayaccess shift 43
161 LBRACE reduce 11
42 RETURN shift 80
193 BECOME reduce 36
111 SEMI shift 130
106 SHORT reduce 118
25 forinit shift 131
183 PUBLIC reduce 23
183 INT reduce 23
25 LPAREN shift 6
118 BOOLEAN shift 44
152 INT reduce 32
203 BECOME reduce 12
172 simplename shift 23
27 RBRACE reduce 34
114 CHAR reduce 76
67 fieldaccess shift 18
118 RPAREN reduce 89
123 SEMI reduce 115
198 CHAR reduce 13
11 ID reduce 84
109 BOOLEAN reduce 46
81 RBRACE shift 132
133 INTERFACE reduce 47
2 BECOME reduce 52
68 packagedecl shift 133
189 arraycreate shift 39
38 NATIVE reduce 64
189 DOT reduce 36
143 LPAREN reduce 120
56 DOT reduce 96
182 IMPORT shift 134
50 PUBLIC reduce 75
181 SEMI reduce 129
114 VOID reduce 76
37 SEMI reduce 50
156 ABSTRACT reduce 71
132 FOR shift 45
74 fieldaccess shift 71
38 BYTE reduce 64
74 BECOME reduce 36
51 SEMI reduce 114
143 RBRACE reduce 120
121 PROTECTED reduce 20
80 name shift 2
52 BOOLEAN reduce 111
15 ID reduce 108
106 RETURN reduce 118
14 BYTE reduce 14
133 PUBLIC reduce 47
79 ID reduce 102
50 CLASS reduce 75
182 typedecl shift 135
28 LPAREN shift 136
61 INT reduce 70
41 primnoarray shift 65
15 IF reduce 108
42 THIS shift 56
88 BYTE reduce 119
132 primnoarray shift 65
72 SHORT reduce 61
46 ABSTRACT reduce 72
122 ID reduce 122
73 SHORT reduce 18
18 DOT reduce 98
143 BOOLEAN reduce 120
25 CHAR shift 11
8 DOT reduce 79
69 ID shift 30
132 methodinvoke shift 59
80 assignexpr shift 31
199 SEMI reduce 134
203 SHORT reduce 12
20 RPAREN reduce 8
163 ID reduce 73
107 COMMA reduce 91
27 CHAR reduce 34
21 DOT reduce 104
75 BECOME reduce 36
22 LBRACK shift 32
129 VOID reduce 19
97 primitivetype shift 122
194 simplename shift 23
76 RPAREN shift 137
118 numerictype shift 40
182 interfacedecl shift 138
121 ID reduce 20
194 assignexpr shift 139
140 DOT shift 60
113 ID reduce 123
196 STATIC reduce 33
200 ID reduce 63
110 CHAR reduce 17
196 RBRACE reduce 33
170 EOF reduce 48
95 SEMI reduce 131
17 LBRACE reduce 101
125 LPAREN shift 75
155 name shift 119
15 FOR reduce 108
73 PROTECTED reduce 18
27 LPAREN reduce 34
17 LBRACK reduce 101
116 simplename shift 23
73 BOOLEAN reduce 18
150 IF reduce 15
203 ID reduce 12
203 IF reduce 12
68 FINAL reduce 86
150 ID reduce 15
17 IMPLEMENTS reduce 101
126 arrayaccess shift 7
116 name shift 140
16 assignexpr shift 31
3 LPAREN reduce 109
52 CHAR reduce 111
93 assignexpr shift 31
22 COMMA reduce 88
67 stmntwotrail shift 33
109 DOT reduce 46
97 CHAR shift 11
139 SEMI reduce 7
106 LBRACE reduce 118
12 COMMA reduce 9
8 LBRACE reduce 79
52 FOR reduce 111
67 LBRACE shift 14
132 lefthand shift 5
57 LBRACK reduce 83
90 RBRACE reduce 107
169 LBRACE reduce 39
110 BYTE reduce 17
33 FOR reduce 107
133 PROTECTED reduce 47
170 FINAL reduce 48
122 LBRACK shift 141
169 BOOLEAN reduce 39
25 type shift 64
41 arraycreate shift 39
114 methodhead shift 142
92 BOOLEAN reduce 121
8 LBRACK reduce 79
23 IMPLEMENTS reduce 78
132 retstmnt shift 143
114 classbodydecl shift 144
96 SEMI shift 145
115 ID reduce 45
115 IF reduce 45
109 LPAREN reduce 46
30 IMPLEMENTS reduce 80
184 IMPORT reduce 87
27 LBRACE reduce 34
13 ELSE reduce 117
132 LPAREN shift 6
126 referencetype shift 113
106 WHILE reduce 118
48 expr shift 146
144 RBRACE reduce 21
185 PROTECTED reduce 77
59 RBRACE reduce 113
42 while shift 1
13 LBRACE reduce 117
178 THIS reduce 135
69 lefthand shift 5
26 RPAREN shift 147
104 RBRACK shift 148
152 ID reduce 32
169 WHILE reduce 39
106 CHAR reduce 118
91 methoddeclor shift 149
156 PUBLIC reduce 71
126 stmntexpr shift 4
152 SHORT reduce 32
62 CLASS reduce 49
106 BOOLEAN reduce 118
90 THIS reduce 107
126 blockstmnt shift 150
132 fieldaccess shift 18
12 RPAREN reduce 9
72 THIS reduce 61
132 WHILE shift 66
155 STATIC shift 46
133 STATIC reduce 47
94 STATIC reduce 85
189 arrayaccess shift 7
61 ABSTRACT reduce 70
186 RETURN reduce 105
90 BYTE reduce 107
6 lefthand shift 5
90 SHORT reduce 107
110 INT reduce 17
83 LBRACE reduce 65
42 retstmnt shift 143
176 qualifiedname shift 8
179 classbody shift 151
114 fielddecl shift 152
155 constructordeclor shift 153
114 ABSTRACT reduce 76
160 INT reduce 74
94 INTERFACE reduce 85
193 expr shift 154
193 simplename shift 23
121 NATIVE reduce 20
12 RBRACE reduce 9
186 SHORT reduce 105
114 modifiers shift 155
189 primary shift 24
79 DOT shift 60
61 NATIVE reduce 70
12 RBRACK reduce 9
94 EOF reduce 85
132 SEMI shift 27
189 ID shift 30
42 LBRACE shift 14
182 STATIC reduce 76
50 SHORT reduce 75
149 SEMI reduce 66
155 PROTECTED shift 156
97 params shift 157
68 PUBLIC reduce 86
46 SHORT reduce 72
13 RETURN reduce 117
23 LBRACE reduce 78
23 BECOME reduce 78
88 FOR reduce 119
23 LBRACK reduce 78
198 BECOME reduce 13
94 NATIVE reduce 85
169 BECOME reduce 39
146 COMMA reduce 3
169 CHAR reduce 39
160 PROTECTED reduce 74
106 SEMI reduce 118
21 BECOME reduce 104
75 lefthand shift 5
67 block shift 13
110 ID reduce 17
70 RPAREN shift 158
145 INT reduce 37
182 INTERFACE reduce 76
61 PUBLIC reduce 70
68 CLASS reduce 86
167 SHORT reduce 62
92 IF reduce 121
92 ID reduce 121
75 assignexpr shift 31
186 BYTE reduce 105
33 SHORT reduce 107
174 CLASS shift 159
90 WHILE reduce 107
48 assign shift 12
136 fieldaccess shift 71
69 BECOME reduce 36
109 SHORT reduce 46
1 SHORT reduce 110
50 ID reduce 75
27 WHILE reduce 34
155 FINAL shift 160
112 RPAREN reduce 130
145 PUBLIC reduce 37
90 LBRACE reduce 107
136 simplename shift 23
163 CLASS reduce 73
184 INTERFACE reduce 87
126 RBRACE shift 161
165 THIS shift 56
115 DOT reduce 45
15 BOOLEAN reduce 108
87 EOF shift 162
90 RETURN reduce 107
203 THIS reduce 12
16 simplename shift 23
8 BECOME reduce 79
193 fieldaccess shift 71
1 THIS reduce 110
97 numerictype shift 40
41 qualifiedname shift 8
150 RBRACE reduce 15
15 SHORT reduce 108
67 retstmnt shift 143
194 ID shift 30
126 SHORT shift 58
37 STATIC reduce 50
167 STATIC reduce 62
126 primitivetype shift 122
27 THIS reduce 34
152 BYTE reduce 32
181 COMMA reduce 129
156 SHORT reduce 71
185 STATIC reduce 77
144 CHAR reduce 21
118 BYTE shift 78
59 COMMA reduce 113
41 retstmnt shift 143
21 SHORT reduce 104
175 LBRACK reduce 78
135 EOF reduce 38
133 FINAL reduce 47
46 PUBLIC reduce 72
196 ABSTRACT reduce 33
170 NATIVE reduce 48
165 fieldaccess shift 18
25 primitivetype shift 122
41 assign shift 84
152 VOID reduce 32
27 BECOME reduce 34
109 INT reduce 46
174 ABSTRACT shift 163
121 RBRACE reduce 20
202 super shift 164
183 NATIVE reduce 23
143 INT reduce 120
169 BYTE reduce 39
37 PROTECTED reduce 50
156 INT reduce 71
80 fieldaccess shift 71
150 DOT reduce 15
6 assign shift 12
169 DOT reduce 39
13 LPAREN reduce 117
12 SEMI reduce 9
189 lefthand shift 5
198 FOR reduce 13
178 WHILE reduce 135
196 INT reduce 33
161 RBRACE reduce 11
42 WHILE shift 66
62 IMPORT reduce 49
193 arrayaccess shift 43
99 qualifiedname shift 8
183 RBRACE reduce 23
109 IF reduce 46
33 WHILE reduce 107
67 qualifiedname shift 8
109 ID reduce 46
139 COMMA reduce 7
183 BOOLEAN reduce 23
62 PUBLIC reduce 49
42 BECOME reduce 36
90 BOOLEAN reduce 107
130 CLASS reduce 106
161 LPAREN reduce 11
123 RBRACE reduce 115
167 BYTE reduce 62
61 STATIC reduce 70
67 LPAREN shift 6
186 INT reduce 105
41 emptystmnt shift 106
13 CHAR reduce 117
187 COMMA shift 165
132 ifthen shift 15
33 LBRACE reduce 107
13 THIS reduce 117
160 ID reduce 74
177 simplename shift 23
200 INT reduce 63
101 COMMA reduce 116
110 BOOLEAN reduce 17
169 SHORT reduce 39
145 ABSTRACT reduce 37
42 classcreateexpr shift 51
82 COMMA reduce 128
49 SEMI reduce 60
41 BECOME reduce 36
178 BOOLEAN reduce 135
115 WHILE reduce 45
88 RBRACE reduce 119
152 RBRACE reduce 32
38 PROTECTED reduce 64
132 classcreateexpr shift 51
38 BOOLEAN reduce 64
132 arrayaccess shift 7
132 arraycreate shift 39
184 SEMI reduce 87
50 FINAL reduce 75
46 BYTE reduce 72
14 WHILE reduce 14
160 BYTE reduce 74
152 PUBLIC reduce 32
111 DOT shift 166
73 INT reduce 18
99 name shift 2
44 ID reduce 95
126 retstmnt shift 143
38 FINAL reduce 64
72 BYTE reduce 61
120 DOT shift 60
14 DOT reduce 14
61 INTERFACE reduce 70
3 SEMI reduce 109
42 assign shift 84
151 EOF reduce 22
97 type shift 47
93 fieldaccess shift 71
93 qualifiedname shift 8
186 CHAR reduce 105
147 RBRACE reduce 68
6 ID shift 30
21 CHAR reduce 104
110 VOID reduce 17
30 SEMI reduce 80
200 RBRACE reduce 63
33 BOOLEAN reduce 107
132 THIS shift 56
1 LBRACE reduce 110
186 ELSE reduce 105
163 BOOLEAN reduce 73
203 BOOLEAN reduce 12
3 LBRACE reduce 109
142 block shift 167
126 ifthenelse shift 3
167 BOOLEAN reduce 62
132 for shift 52
48 simplename shift 23
64 variabledeclor shift 102
169 RBRACE reduce 39
117 COMMA shift 165
178 CHAR reduce 135
126 methodinvoke shift 59
144 VOID reduce 21
115 RBRACE reduce 45
105 LBRACK reduce 130
126 exprstmnt shift 88
163 NATIVE reduce 73
42 ifthenelse shift 3
23 SEMI reduce 78
2 LBRACK shift 69
156 NATIVE reduce 71
61 PROTECTED reduce 70
132 stmntexpr shift 4
55 variabledeclor shift 168
37 ABSTRACT reduce 50
50 INT reduce 75
17 DOT reduce 101
132 stmnt shift 169
64 variabledeclid shift 82
7 BECOME reduce 54
172 BYTE shift 78
182 importdecl shift 170
169 ID reduce 39
169 IF reduce 39
67 primnoarray shift 65
33 LPAREN reduce 107
42 FOR shift 45
195 LBRACE shift 171
143 RETURN reduce 120
13 RBRACE reduce 117
176 simplename shift 23
33 RBRACE reduce 107
126 LBRACE shift 14
196 CHAR reduce 33
14 THIS reduce 14
73 ID reduce 18
62 SEMI reduce 49
157 COMMA shift 172
6 name shift 2
143 LBRACE reduce 120
186 BECOME reduce 105
93 RBRACK shift 173
184 NATIVE reduce 87
99 BECOME reduce 36
145 ID reduce 37
37 IMPORT reduce 50
182 modifiers shift 174
110 NATIVE reduce 17
185 PUBLIC reduce 77
160 FINAL reduce 74
52 LBRACE reduce 111
170 ABSTRACT reduce 48
169 SEMI reduce 39
92 DOT reduce 121
152 BOOLEAN reduce 32
75 fieldaccess shift 71
41 for shift 52
69 expr shift 104
105 LPAREN shift 97
30 ID reduce 80
14 LPAREN reduce 14
118 name shift 119
67 DOT reduce 36
155 NATIVE shift 50
156 VOID reduce 71
132 emptystmnt shift 106
77 COMMA shift 172
186 RBRACE reduce 105
134 qualifiedname shift 8
46 VOID reduce 72
155 simplename shift 175
3 SHORT reduce 109
150 LPAREN reduce 15
198 WHILE reduce 13
198 ID reduce 13
198 IF reduce 13
55 ID shift 112
33 SEMI reduce 107
192 interfacelist shift 176
194 lefthand shift 5
72 CHAR reduce 61
152 ABSTRACT reduce 32
48 lefthand shift 5
25 stmntexpr shift 123
167 INT reduce 62
21 THIS reduce 104
132 exprstmnt shift 88
147 DOT reduce 68
118 COMMA reduce 89
68 INTERFACE reduce 86
130 EOF reduce 106
99 assignexpr shift 31
68 PACKAGE shift 177
143 SEMI reduce 120
161 DOT reduce 11
173 ID reduce 6
39 DOT reduce 93
99 condexpr shift 20
42 stmnt shift 178
163 INT reduce 73
164 interfaces shift 179
14 BOOLEAN reduce 14
202 LBRACE reduce 25
150 THIS reduce 15
67 SEMI shift 27
41 block shift 13
65 DOT reduce 92
196 PUBLIC reduce 33
14 CHAR reduce 14
97 RPAREN reduce 89
155 ABSTRACT shift 163
166 STAR shift 180
121 PUBLIC reduce 20
198 THIS reduce 13
59 DOT reduce 99
156 CLASS reduce 71
37 CLASS reduce 50
160 VOID reduce 74
112 SEMI reduce 130
160 NATIVE reduce 74
16 variableinit shift 181
123 COMMA reduce 115
94 IMPORT reduce 85
118 CHAR shift 11
140 LBRACE reduce 26
156 BYTE reduce 71
41 fieldaccess shift 18
106 FOR reduce 118
200 PROTECTED reduce 63
130 IMPORT reduce 106
133 importdecls shift 182
165 BECOME reduce 36
153 block shift 183
120 SEMI shift 184
75 qualifiedname shift 8
174 modifier shift 185
13 SEMI reduce 117
115 INT reduce 45
48 ID shift 30
132 BECOME reduce 36
46 FINAL reduce 72
90 CHAR reduce 107
33 INT reduce 107
6 BECOME reduce 36
97 name shift 119
178 SHORT reduce 135
21 INT reduce 104
130 FINAL reduce 106
169 THIS reduce 39
143 WHILE reduce 120
143 FOR reduce 120
165 simplename shift 23
150 BOOLEAN reduce 15
126 LPAREN shift 6
97 COMMA reduce 89
198 SHORT reduce 13
109 SEMI reduce 46
189 name shift 125
88 CHAR reduce 119
176 LBRACE reduce 28
72 BOOLEAN reduce 61
150 WHILE reduce 15
46 ID reduce 72
19 SEMI shift 186
23 ID reduce 78
170 PROTECTED reduce 48
27 FOR reduce 34
190 ID reduce 5
25 arraycreate shift 39
165 primary shift 24
15 RETURN reduce 108
69 simplename shift 23
80 arrayaccess shift 43
118 param shift 36
99 arrayaccess shift 43
165 qualifiedname shift 8
75 expr shift 154
129 INT reduce 19
132 ifthenelse shift 3
186 BOOLEAN reduce 105
136 arrayaccess shift 43
121 STATIC reduce 20
189 stmntexprlst shift 187
72 FOR reduce 61
161 SEMI reduce 11
1 IF reduce 110
200 NATIVE reduce 63
1 ID reduce 110
77 RPAREN shift 188
62 FINAL reduce 49
174 PROTECTED shift 156
194 condexpr shift 20
41 primary shift 24
99 fieldaccess shift 71
178 LBRACE reduce 135
67 WHILE shift 66
88 SEMI reduce 119
68 STATIC reduce 86
186 SEMI reduce 105
156 INTERFACE reduce 71
103 LBRACE reduce 30
42 lefthand shift 5
203 RBRACE reduce 12
14 IF reduce 14
14 ID reduce 14
68 EOF reduce 86
42 qualifiedname shift 8
41 SEMI shift 27
132 block shift 13
106 BYTE reduce 118
183 BYTE reduce 23
41 name shift 125
132 name shift 125
144 BYTE reduce 21
20 SEMI reduce 8
186 WHILE reduce 105
161 PUBLIC reduce 11
84 COMMA reduce 112
97 referencetype shift 113
126 CHAR shift 11
185 FINAL reduce 77
115 RETURN reduce 45
86 SEMI shift 189
13 SHORT reduce 117
52 DOT reduce 111
3 BOOLEAN reduce 109
62 INTERFACE reduce 49
161 FINAL reduce 11
182 NATIVE reduce 76
125 DOT shift 60
155 qualifiedname shift 8
147 COMMA reduce 68
33 BECOME reduce 107
167 VOID reduce 62
161 BYTE reduce 11
25 methodinvoke shift 59
116 ID shift 30
110 PUBLIC reduce 17
160 PUBLIC reduce 74
121 SHORT reduce 20
196 NATIVE reduce 33
38 INT reduce 64
141 RBRACK shift 190
9 LBRACE reduce 67
114 SHORT reduce 76
88 LBRACE reduce 119
72 LPAREN reduce 61
91 ID shift 191
74 simplename shift 23
115 BYTE reduce 45
164 IMPLEMENTS shift 192
92 ELSE reduce 121
137 DOT reduce 97
93 name shift 2
172 CHAR shift 11
46 CHAR reduce 72
92 INT reduce 121
130 INTERFACE reduce 106
48 arrayaccess shift 43
17 ID reduce 101
152 CHAR reduce 32
184 EOF reduce 87
93 BECOME reduce 36
143 CHAR reduce 120
167 CHAR reduce 62
178 FOR reduce 135
124 LPAREN shift 193
80 ID shift 30
82 SEMI reduce 128
155 referencetype shift 113
97 BOOLEAN shift 44
20 COMMA reduce 8
163 ABSTRACT reduce 73
126 primary shift 24
186 DOT reduce 105
167 RBRACE reduce 62
115 THIS reduce 45
73 STATIC reduce 18
126 lefthand shift 5
73 FINAL reduce 18
1 BYTE reduce 110
30 DOT reduce 80
165 arrayaccess shift 7
54 ID reduce 103
155 modifier shift 185
97 SHORT shift 58
172 primitivetype shift 122
3 CHAR reduce 109
193 qualifiedname shift 8
144 BOOLEAN reduce 21
163 STATIC reduce 73
165 name shift 125
177 qualifiedname shift 8
52 BECOME reduce 111
67 BECOME reduce 36
52 BYTE reduce 111
73 NATIVE reduce 18
95 LBRACK reduce 131
178 BYTE reduce 135
174 FINAL shift 160
136 condexpr shift 20
50 NATIVE reduce 75
105 BECOME reduce 130
185 CHAR reduce 77
74 name shift 2
187 RBRACE reduce 44
42 arraycreate shift 39
109 LBRACE reduce 46
154 COMMA reduce 2
5 assignop shift 194
201 extendsinterfaces shift 195
17 SEMI reduce 101
92 RETURN reduce 121
126 emptystmnt shift 106
154 RPAREN reduce 2
67 exprstmnt shift 88
150 RETURN reduce 15
189 classcreateexpr shift 51
133 ABSTRACT reduce 47
114 methoddecl shift 196
182 PROTECTED reduce 76
172 referencetype shift 113
118 primitivetype shift 122
5 BECOME shift 197
172 type shift 47
85 RBRACK shift 173
114 STATIC reduce 76
80 simplename shift 23
129 PROTECTED reduce 19
50 PROTECTED reduce 75
3 FOR reduce 109
186 ID reduce 105
183 ABSTRACT reduce 23
186 IF reduce 105
1 INT reduce 110
198 BYTE reduce 13
126 stmnt shift 198
196 ID reduce 33
68 PROTECTED reduce 86
75 COMMA reduce 1
11 LBRACK reduce 84
78 LBRACK reduce 81
109 BECOME reduce 46
41 LBRACE shift 14
13 BECOME reduce 117
69 condexpr shift 20
16 expr shift 199
167 NATIVE reduce 62
129 ID reduce 19
53 LBRACE reduce 31
172 arraytype shift 54
102 SEMI reduce 132
165 LPAREN shift 6
203 FOR reduce 12
160 CHAR reduce 74
200 SHORT reduce 63
15 THIS reduce 108
115 LBRACE reduce 45
126 SEMI shift 27
178 BECOME reduce 135
42 stmntexpr shift 4
58 LBRACK reduce 82
13 FOR reduce 117
114 BYTE reduce 76
134 simplename shift 23
92 THIS reduce 121
161 ID reduce 11
142 SEMI shift 200
25 name shift 79
202 IMPLEMENTS reduce 25
161 IF reduce 11
196 BOOLEAN reduce 33
109 RBRACE reduce 46
41 WHILE shift 66
108 ID shift 201
159 ID shift 202
25 assign shift 84
1 DOT reduce 110
25 INT shift 57
25 THIS shift 56
192 LBRACE reduce 29
98 EOF reduce 16
165 classcreateexpr shift 51
121 VOID reduce 20
121 FINAL reduce 20
112 COMMA reduce 130
126 localvardeclstmnt shift 203
