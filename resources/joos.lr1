57
BOF
EOF
EQ
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
NOT
BOOLEAN
CHAR
PACKAGE
SHORT
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NUM
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
DOT
IMPORT
IMPLEMENTS
STATIC
INT
71
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interfaces
interfacedecl
lefthand
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclr
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarr
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
125
S BOF file EOF
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
block LBRACE RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts blockstmnt
blockstmnts blockstmnts blockstmnt
classbody LBRACE RBRACE
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecls classbodydecl
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID interfaces classbody
classdecl CLASS ID interfaces classbody
classdecl modifiers CLASS ID classbody
classdecl CLASS ID classbody
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
fielddecl type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl INTERFACE ID LBRACE RBRACE
interfacedecl INTERFACE ID extendsinterfaces LBRACE RBRACE
interfacedecl modifiers INTERFACE ID LBRACE RBRACE
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methoddeclr ID LPAREN RPAREN
methoddeclr ID LPAREN params RPAREN
methodhead type methoddeclr
methodhead modifiers type methoddeclr
methodinvoke name LPAREN arglist RPAREN
methodinvoke name LPAREN RPAREN
methodinvoke primary DOT ID LPAREN RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
methodinvoke super DOT ID LPAREN arglist RPAREN
methodinvoke super DOT ID LPAREN RPAREN
modifier PUBLIC
modifier PROTECTED
modifier PRIVATE
modifier STATIC
modifiers modifier
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params param
params params COMMA param
primary primnoarr
primary arraycreate
primitivetype numerictype
primitivetype arraytype
primitivetype BOOLEAN
primnoarr LPAREN expr RPAREN
primnoarr fieldaccess
primnoarr methodinvoke
primnoarr arrayaccess
qualifiedname name DOT ID
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
209
1260
166 RBRACE reduce 97
40 primitivetype shift 1
66 INT reduce 106
28 INT reduce 65
140 lefthand shift 2
71 BYTE shift 3
31 arrayaccess shift 4
83 LBRACE reduce 98
84 PUBLIC reduce 66
131 qualifiedname shift 5
40 stmnt shift 6
129 WHILE reduce 100
17 PUBLIC reduce 67
153 SHORT shift 7
6 IF reduce 12
104 RBRACE shift 8
195 CHAR reduce 124
34 FOR reduce 97
201 STATIC reduce 53
158 stmnt shift 9
197 emptystmnt shift 10
78 STATIC reduce 42
61 CHAR reduce 69
120 RBRACE reduce 36
18 COMMA reduce 28
208 assign shift 11
175 LBRACE reduce 51
201 PUBLIC reduce 53
36 INT reduce 11
150 BECOME reduce 30
171 exprstmnt shift 12
36 BYTE reduce 11
185 PRIVATE reduce 20
105 SEMI reduce 14
118 type shift 13
195 INT reduce 124
44 PROTECTED reduce 25
83 SEMI reduce 98
105 RETURN reduce 14
178 PRIVATE reduce 39
141 LBRACE reduce 27
47 CHAR reduce 13
9 LBRACE reduce 38
72 PRIVATE reduce 78
38 assign shift 14
12 CHAR reduce 108
153 referencetype shift 15
118 referencetype shift 15
178 IMPORT reduce 39
21 RETURN reduce 101
40 referencetype shift 15
121 RBRACE reduce 10
32 INT shift 16
28 CLASS reduce 65
44 BOOLEAN reduce 25
71 PRIVATE shift 17
126 RBRACE reduce 105
115 PUBLIC reduce 96
27 INT reduce 109
79 assignexpr shift 18
71 classmemberdecl shift 19
175 RETURN reduce 51
206 IF reduce 34
47 BOOLEAN reduce 13
17 CLASS reduce 67
31 BECOME reduce 30
170 LPAREN shift 20
197 for shift 21
65 BOOLEAN reduce 68
208 methodinvoke shift 22
101 SEMI reduce 93
121 SHORT reduce 10
179 INTERFACE shift 23
57 EOF reduce 115
59 INTERFACE reduce 80
37 PUBLIC reduce 18
159 COMMA reduce 29
208 DOT reduce 30
168 block shift 24
46 WHILE reduce 94
182 qualifiedname shift 5
185 RBRACE reduce 20
84 STATIC reduce 66
78 PUBLIC reduce 42
44 INT reduce 25
158 emptystmnt shift 10
192 name shift 25
157 SEMI reduce 58
166 RETURN reduce 97
140 simplename shift 26
166 FOR reduce 97
34 LBRACE reduce 97
20 qualifiedname shift 5
32 retstmnt shift 27
77 name shift 25
65 PROTECTED reduce 68
201 PRIVATE reduce 53
119 BYTE reduce 54
151 IF reduce 9
115 EOF reduce 96
178 STATIC reduce 39
60 PUBLIC shift 28
40 numerictype shift 29
79 condexpr shift 30
44 SHORT reduce 25
96 name shift 25
119 SHORT reduce 54
27 IF reduce 109
150 name shift 25
154 DOT reduce 85
140 LPAREN shift 31
184 PUBLIC shift 28
171 for shift 21
160 PROTECTED reduce 31
40 blockstmnts shift 32
21 BOOLEAN reduce 101
37 INT reduce 18
12 BOOLEAN reduce 108
44 PUBLIC reduce 25
185 BYTE reduce 20
71 methoddecl shift 33
40 stmntnotrail shift 34
115 IMPORT reduce 96
34 WHILE reduce 97
184 EOF reduce 112
2 BECOME shift 35
40 localvardeclstmnt shift 36
47 RETURN reduce 13
60 staticinit shift 37
162 LBRACE reduce 55
10 LBRACE reduce 107
28 PRIVATE reduce 65
49 SEMI reduce 116
76 LPAREN shift 38
147 RETURN reduce 95
166 CHAR reduce 97
32 BOOLEAN shift 39
40 LBRACE shift 40
182 simplename shift 26
79 qualifiedname shift 5
102 RPAREN shift 41
6 INT reduce 12
198 param shift 42
198 arraytype shift 43
203 EOF reduce 21
60 fielddecl shift 44
117 INT shift 16
171 IF shift 45
161 RPAREN reduce 2
60 classmemberdecl shift 19
96 SEMI shift 46
40 blockstmnt shift 47
24 PUBLIC reduce 52
153 param shift 48
30 RBRACE reduce 6
149 variabledeclid shift 49
187 classbody shift 50
105 CHAR reduce 14
198 primitivetype shift 1
40 SHORT shift 7
202 RBRACE reduce 61
40 type shift 13
30 RBRACK reduce 6
47 FOR reduce 13
55 LBRACK shift 51
46 RETURN reduce 94
199 RBRACE reduce 104
184 singletypeimport shift 52
31 fieldaccess shift 53
169 BECOME reduce 30
79 fieldaccess shift 53
71 type shift 54
207 RBRACE reduce 60
24 STATIC reduce 52
180 for shift 21
208 name shift 55
35 ID reduce 8
183 RBRACK shift 56
184 SEMI shift 57
28 BYTE reduce 65
60 BYTE shift 3
65 INTERFACE reduce 68
46 INT reduce 94
70 BECOME reduce 118
121 IF reduce 10
20 assign shift 14
36 SHORT reduce 11
101 BECOME reduce 93
177 classbody shift 58
131 fieldaccess shift 53
166 LBRACE reduce 97
12 FOR reduce 108
82 SEMI shift 59
122 BOOLEAN reduce 37
187 LBRACE shift 60
4 BECOME reduce 49
175 BYTE reduce 51
60 modifier shift 61
29 ID reduce 86
51 qualifiedname shift 5
150 arglist shift 62
66 SEMI reduce 106
25 LBRACK shift 51
182 ID shift 63
204 SEMI reduce 119
117 CHAR shift 64
6 LBRACE reduce 12
12 LBRACE reduce 108
184 STATIC shift 65
80 COMMA reduce 120
68 PRIVATE reduce 19
40 block shift 66
206 RETURN reduce 34
151 STATIC reduce 9
101 DOT reduce 93
60 RBRACE shift 67
32 for shift 21
24 RBRACE reduce 52
60 classbodydecl shift 68
84 CHAR reduce 66
198 referencetype shift 15
77 simplename shift 26
115 SEMI reduce 96
180 emptystmnt shift 10
140 arrayaccess shift 69
129 INT reduce 100
70 COMMA reduce 118
9 SHORT reduce 38
173 assign shift 14
52 SEMI reduce 41
85 INTERFACE reduce 70
207 COMMA reduce 60
119 CHAR reduce 54
197 block shift 66
66 SHORT reduce 106
127 ID shift 70
60 classbodydecls shift 71
122 IF reduce 37
169 ID shift 63
160 SHORT reduce 31
105 RBRACE reduce 14
189 SEMI shift 72
77 qualifiedname shift 5
173 arrayaccess shift 4
50 EOF reduce 24
40 WHILE shift 73
137 DOT shift 74
25 BECOME reduce 47
169 fieldaccess shift 53
12 RETURN reduce 108
32 block shift 66
158 IF shift 45
121 PROTECTED reduce 10
1 ID reduce 110
77 arrayaccess shift 4
38 assignexpr shift 18
27 CHAR reduce 109
14 SEMI reduce 7
118 arraytype shift 43
169 lefthand shift 2
60 CHAR shift 64
17 CHAR reduce 67
105 LBRACE reduce 14
192 assign shift 14
131 assignexpr shift 18
82 DOT shift 75
151 FOR reduce 9
121 WHILE reduce 10
52 EOF reduce 41
72 INTERFACE reduce 78
85 PRIVATE reduce 70
74 ID shift 76
178 SEMI reduce 39
24 INT reduce 52
195 SEMI reduce 124
117 SHORT shift 7
153 arraytype shift 43
146 COMMA shift 77
55 DOT shift 75
78 IMPORT reduce 42
184 ondemandimport shift 78
49 BECOME shift 79
178 PROTECTED reduce 39
129 BYTE reduce 100
17 PROTECTED reduce 67
34 CHAR reduce 97
181 variabledecl shift 80
31 assignexpr shift 18
180 ifthenelse shift 81
182 name shift 82
40 exprstmnt shift 12
32 referencetype shift 15
89 IMPORT reduce 40
144 LBRACE shift 60
200 EOF reduce 44
117 arraytype shift 43
31 name shift 25
61 STATIC reduce 69
68 BOOLEAN reduce 19
17 PRIVATE reduce 67
40 ifthen shift 83
71 PROTECTED shift 84
40 CHAR shift 64
20 ID shift 63
184 PROTECTED shift 84
117 BOOLEAN shift 39
21 RBRACE reduce 101
79 COMMA reduce 4
105 IF reduce 14
9 SEMI reduce 38
140 qualifiedname shift 5
175 RBRACE reduce 51
72 CLASS reduce 78
32 exprstmnt shift 12
40 ifthenelse shift 81
115 CLASS reduce 96
9 WHILE reduce 38
117 modifier shift 85
153 primitivetype shift 1
21 FOR reduce 101
129 SHORT reduce 100
72 IMPORT reduce 78
197 IF shift 45
34 RBRACE reduce 97
23 ID shift 86
65 CHAR reduce 68
69 BECOME reduce 49
195 LBRACE reduce 124
47 BYTE reduce 13
140 primnoarr shift 87
208 fieldaccess shift 88
173 simplename shift 26
71 arraytype shift 43
118 BYTE shift 3
32 arraytype shift 43
19 CHAR reduce 17
117 primitivetype shift 1
42 RPAREN reduce 83
59 PROTECTED reduce 80
83 CHAR reduce 98
17 BOOLEAN reduce 67
158 exprstmnt shift 12
65 SHORT reduce 68
26 LBRACK reduce 71
185 STATIC reduce 20
21 WHILE reduce 101
184 importdecl shift 89
84 CLASS reduce 66
175 WHILE reduce 51
173 condexpr shift 30
142 COMMA reduce 117
179 PROTECTED shift 84
131 name shift 25
51 condexpr shift 30
185 SHORT reduce 20
169 qualifiedname shift 5
37 BOOLEAN reduce 18
78 EOF reduce 42
83 RETURN reduce 98
184 CLASS shift 90
72 EOF reduce 78
38 expr shift 91
208 forupdate shift 92
186 ID shift 93
24 SHORT reduce 52
54 variabledecls shift 94
175 SEMI reduce 51
121 CHAR reduce 10
166 WHILE reduce 97
171 emptystmnt shift 10
85 STATIC reduce 70
97 SEMI reduce 50
59 CLASS reduce 80
41 RBRACE reduce 63
68 PROTECTED reduce 19
133 EOF reduce 16
31 simplename shift 26
55 BECOME reduce 47
61 SHORT reduce 69
83 WHILE reduce 98
173 name shift 25
96 fieldaccess shift 53
96 ID shift 63
0 BOF shift 95
37 BYTE reduce 18
131 BECOME reduce 30
91 RPAREN reduce 1
10 FOR reduce 107
6 SHORT reduce 12
173 fieldaccess shift 53
143 SEMI reduce 118
180 RETURN shift 96
30 RPAREN reduce 6
46 IF reduce 94
13 variabledecls shift 97
60 numerictype shift 29
95 PRIVATE reduce 79
96 expr shift 98
204 BECOME reduce 119
85 BYTE reduce 70
51 name shift 25
71 INT shift 16
121 SEMI reduce 10
192 expr shift 99
126 COMMA reduce 105
78 SEMI reduce 42
79 arrayaccess shift 4
167 DOT shift 100
101 LPAREN reduce 93
119 PUBLIC reduce 54
13 variabledeclid shift 49
31 qualifiedname shift 5
194 COMMA reduce 62
150 simplename shift 26
60 arraytype shift 43
75 ID shift 101
121 RETURN reduce 10
122 SHORT reduce 37
71 referencetype shift 15
19 BOOLEAN reduce 17
22 COMMA reduce 103
201 CHAR reduce 53
115 INTERFACE reduce 96
27 BYTE reduce 109
24 PROTECTED reduce 52
206 WHILE reduce 34
151 SEMI reduce 9
151 BOOLEAN reduce 9
148 LBRACE reduce 57
115 PROTECTED reduce 96
38 arrayaccess shift 4
192 ID shift 63
77 ID shift 63
10 CHAR reduce 107
59 EOF reduce 80
14 RPAREN reduce 7
58 EOF reduce 23
51 lefthand shift 2
51 ID shift 63
20 arglist shift 102
46 LBRACE reduce 94
93 extendsinterfaces shift 103
79 simplename shift 26
177 LBRACE shift 60
47 RBRACE reduce 13
60 PROTECTED shift 84
12 SEMI reduce 108
19 PROTECTED reduce 17
61 INT reduce 69
96 simplename shift 26
153 CHAR shift 64
21 IF reduce 101
31 assign shift 14
190 LBRACE shift 104
84 BYTE reduce 66
54 variabledecl shift 80
121 INT reduce 10
32 blockstmnt shift 105
38 name shift 25
151 WHILE reduce 9
79 arrayinit shift 106
95 STATIC reduce 79
198 INT shift 16
151 LBRACE reduce 9
34 BYTE reduce 97
94 SEMI shift 107
81 BYTE reduce 99
130 RPAREN shift 108
129 FOR reduce 100
131 condexpr shift 30
31 lefthand shift 2
160 RBRACE reduce 31
166 SHORT reduce 97
158 stmntnotrail shift 34
184 typedecl shift 109
208 arrayaccess shift 69
107 CHAR reduce 32
173 lefthand shift 2
105 SHORT reduce 14
38 qualifiedname shift 5
118 CHAR shift 64
151 SHORT reduce 9
173 assignexpr shift 18
153 BOOLEAN shift 39
141 INT reduce 27
28 INTERFACE reduce 65
118 forinit shift 110
107 PROTECTED reduce 32
3 ID reduce 74
169 name shift 25
184 interfacedecl shift 111
179 PUBLIC shift 28
171 ifthen shift 83
21 BYTE reduce 101
160 PRIVATE reduce 31
127 variabledeclid shift 112
34 BOOLEAN reduce 97
31 ID shift 63
180 ifthen shift 83
168 LBRACE shift 40
32 primitivetype shift 1
158 for shift 21
84 SHORT reduce 66
122 WHILE reduce 37
71 BOOLEAN shift 39
51 fieldaccess shift 53
9 INT reduce 38
52 CLASS reduce 41
185 PUBLIC reduce 20
157 LBRACE reduce 58
59 PRIVATE reduce 80
197 LBRACE shift 40
85 PUBLIC reduce 70
10 BOOLEAN reduce 107
6 FOR reduce 12
180 exprstmnt shift 12
140 ID shift 63
72 STATIC reduce 78
181 variabledeclid shift 49
34 IF reduce 97
79 assign shift 14
78 PRIVATE reduce 42
20 expr shift 91
83 IF reduce 98
40 FOR shift 113
38 BECOME reduce 30
124 SEMI reduce 5
32 numerictype shift 29
152 RBRACE reduce 64
52 STATIC reduce 41
95 SEMI reduce 79
77 fieldaccess shift 53
176 EOF reduce 113
171 block shift 66
46 ELSE reduce 94
116 ID shift 63
163 classbody shift 114
84 INT reduce 66
39 ID reduce 88
84 BOOLEAN reduce 66
119 BOOLEAN reduce 54
159 RBRACE reduce 29
131 ID shift 63
79 ID shift 63
9 BOOLEAN reduce 38
173 ID shift 63
122 RBRACE reduce 37
129 RETURN reduce 100
107 BOOLEAN reduce 32
46 RBRACE reduce 94
132 SEMI shift 115
184 IMPORT shift 116
95 IMPORT reduce 79
141 ELSE reduce 27
12 IF reduce 108
122 INT reduce 37
158 ifthen shift 83
6 BYTE reduce 12
41 DOT reduce 63
192 condexpr shift 30
19 STATIC reduce 17
122 RETURN reduce 37
153 INT shift 16
71 modifiers shift 117
63 LBRACK reduce 73
68 RBRACE reduce 19
12 ELSE reduce 108
44 PRIVATE reduce 25
113 LBRACE shift 118
168 methodbody shift 119
208 stmntexprlst shift 120
147 LBRACE reduce 95
195 SHORT reduce 124
16 ID reduce 76
40 RBRACE shift 121
83 INT reduce 98
59 IMPORT reduce 80
192 lefthand shift 2
52 PUBLIC reduce 41
194 RBRACE reduce 62
112 COMMA reduce 81
118 primitivetype shift 1
180 stmntnotrail shift 34
197 stmnt shift 122
78 PROTECTED reduce 42
44 STATIC reduce 25
208 primnoarr shift 87
27 SEMI reduce 109
208 LPAREN shift 31
107 PUBLIC reduce 32
132 DOT shift 123
81 FOR reduce 99
169 assignexpr shift 124
195 FOR reduce 124
131 assign shift 14
160 CHAR reduce 31
38 fieldaccess shift 53
206 RBRACE reduce 34
40 localvardecl shift 125
61 PRIVATE reduce 69
171 ifthenelse shift 81
33 BOOLEAN reduce 26
185 CHAR reduce 20
13 ID shift 70
89 CLASS reduce 40
105 BOOLEAN reduce 14
180 IF shift 45
140 stmntexpr shift 126
30 COMMA reduce 6
171 FOR shift 113
34 SEMI reduce 97
96 BECOME reduce 30
20 lefthand shift 2
28 CHAR reduce 65
151 PUBLIC reduce 9
171 stmntnotrail shift 34
153 type shift 127
197 ifthenelse shift 81
61 INTERFACE reduce 69
89 PROTECTED reduce 40
198 numerictype shift 29
79 expr shift 128
160 STATIC reduce 31
171 while shift 129
77 condexpr shift 30
153 params shift 130
81 CHAR reduce 99
63 BECOME reduce 73
208 qualifiedname shift 5
32 localvardeclstmnt shift 36
107 SHORT reduce 32
45 LPAREN shift 131
33 PUBLIC reduce 26
116 name shift 132
71 RBRACE shift 133
85 INT reduce 70
156 COMMA reduce 121
175 FOR reduce 51
208 simplename shift 26
124 COMMA reduce 5
77 assignexpr shift 18
10 SHORT reduce 107
107 PRIVATE reduce 32
138 RPAREN shift 134
117 STATIC shift 65
119 PROTECTED reduce 54
185 INT reduce 20
179 CLASS shift 135
86 LBRACE shift 136
140 primary shift 137
68 SHORT reduce 19
49 COMMA reduce 116
171 WHILE shift 73
111 EOF reduce 114
151 INT reduce 9
46 SEMI reduce 94
31 expr shift 138
60 primitivetype shift 1
118 localvardecl shift 139
120 COMMA shift 140
129 IF reduce 100
51 assign shift 14
140 methodinvoke shift 22
158 SEMI shift 141
85 CLASS reduce 70
24 BYTE reduce 52
34 INT reduce 97
79 variableinit shift 142
54 ID shift 143
20 BECOME reduce 30
114 EOF reduce 22
28 PROTECTED reduce 65
177 interfaces shift 144
17 BYTE reduce 67
70 SEMI reduce 118
38 ID shift 63
66 ELSE reduce 106
194 DOT reduce 62
112 LBRACK shift 145
195 RETURN reduce 124
173 qualifiedname shift 5
163 LBRACE shift 60
25 DOT shift 75
63 LPAREN reduce 73
175 BOOLEAN reduce 51
81 RETURN reduce 99
101 LBRACK reduce 93
178 INTERFACE reduce 39
24 PRIVATE reduce 52
122 LBRACE reduce 37
70 RPAREN reduce 118
38 arglist shift 146
169 condexpr shift 30
98 SEMI shift 147
7 ID reduce 75
54 methoddeclr shift 148
60 BOOLEAN shift 39
97 COMMA shift 149
151 RETURN reduce 9
195 RBRACE reduce 124
5 BECOME reduce 72
169 arrayaccess shift 4
48 COMMA reduce 82
118 SHORT shift 7
150 ID shift 63
160 BYTE reduce 31
81 IF reduce 99
49 LBRACK shift 145
33 STATIC reduce 26
55 LPAREN shift 150
17 STATIC reduce 67
32 type shift 13
32 RBRACE shift 151
12 RBRACE reduce 108
21 CHAR reduce 101
78 CLASS reduce 42
141 FOR reduce 27
118 BOOLEAN shift 39
65 CLASS reduce 68
20 RPAREN shift 152
36 RBRACE reduce 11
156 SEMI reduce 121
36 RETURN reduce 11
143 LPAREN shift 153
38 lefthand shift 2
12 WHILE reduce 108
17 INT reduce 67
66 BOOLEAN reduce 106
180 WHILE shift 73
106 SEMI reduce 123
6 WHILE reduce 12
96 arrayaccess shift 4
180 LBRACE shift 40
38 simplename shift 26
12 SHORT reduce 108
141 SHORT reduce 27
95 PUBLIC reduce 79
6 BOOLEAN reduce 12
121 BYTE reduce 10
6 CHAR reduce 12
81 SEMI reduce 99
147 SEMI reduce 95
141 BOOLEAN reduce 27
66 FOR reduce 106
47 LBRACE reduce 13
96 lefthand shift 2
149 ID shift 70
208 arraycreate shift 154
206 INT reduce 34
122 SEMI reduce 37
42 COMMA reduce 83
64 ID reduce 77
72 SEMI reduce 78
83 SHORT reduce 98
121 PUBLIC reduce 10
83 BYTE reduce 98
112 RPAREN reduce 81
40 arraytype shift 43
8 EOF reduce 46
44 RBRACE reduce 25
37 STATIC reduce 18
140 name shift 55
27 RETURN reduce 109
166 INT reduce 97
129 BOOLEAN reduce 100
150 fieldaccess shift 53
21 SHORT reduce 101
175 SHORT reduce 51
93 LBRACE shift 155
26 LPAREN reduce 71
153 numerictype shift 29
150 arrayaccess shift 4
36 SEMI reduce 11
20 assignexpr shift 18
149 variabledecl shift 156
66 RBRACE reduce 106
181 methoddeclr shift 157
32 ifthenelse shift 81
141 IF reduce 27
121 STATIC reduce 10
60 STATIC shift 65
89 PUBLIC reduce 40
206 BYTE reduce 34
166 ELSE shift 158
208 SEMI shift 159
32 localvardecl shift 125
40 SEMI shift 141
19 SHORT reduce 17
21 INT reduce 101
19 PRIVATE reduce 17
32 FOR shift 113
116 qualifiedname shift 5
96 assignexpr shift 18
10 SEMI reduce 107
105 INT reduce 14
164 SEMI shift 160
77 expr shift 161
85 CHAR reduce 70
153 RPAREN shift 162
27 LBRACE reduce 109
9 BYTE reduce 38
124 RBRACK reduce 5
124 RBRACE reduce 5
87 DOT reduce 84
147 BOOLEAN reduce 95
52 INTERFACE reduce 41
199 COMMA reduce 104
11 RBRACE reduce 102
180 while shift 129
21 LBRACE reduce 101
129 CHAR reduce 100
118 INT shift 16
48 RPAREN reduce 82
88 BECOME reduce 48
83 FOR reduce 98
187 interfaces shift 163
108 LBRACE reduce 56
32 stmnt shift 6
181 ID shift 143
44 CHAR reduce 25
181 variabledecls shift 164
147 RBRACE reduce 95
188 EOF shift 165
123 ID shift 101
27 ELSE reduce 109
195 BOOLEAN reduce 124
10 INT reduce 107
66 IF reduce 106
88 DOT reduce 90
71 CHAR shift 64
165 BOF reduce 0
205 COMMA reduce 59
118 numerictype shift 29
81 LBRACE reduce 99
158 LBRACE shift 40
41 COMMA reduce 63
56 DOT reduce 3
33 BYTE reduce 26
89 INTERFACE reduce 40
175 CHAR reduce 51
197 stmntnotrail shift 166
208 super shift 167
46 FOR reduce 94
40 emptystmnt shift 10
71 methodhead shift 168
2 assignop shift 169
37 PRIVATE reduce 18
69 DOT reduce 92
131 lefthand shift 2
197 WHILE shift 73
100 ID shift 170
68 INT reduce 19
140 DOT reduce 30
84 INTERFACE reduce 66
99 RPAREN shift 171
32 ifthen shift 83
32 while shift 129
62 COMMA shift 77
184 modifier shift 61
147 SHORT reduce 95
198 CHAR shift 64
166 IF reduce 97
196 EOF reduce 45
21 SEMI reduce 101
47 INT reduce 13
32 stmntnotrail shift 34
84 PRIVATE reduce 66
206 CHAR reduce 34
20 arrayaccess shift 4
131 expr shift 172
147 WHILE reduce 95
140 BECOME reduce 30
206 BOOLEAN reduce 34
140 SEMI shift 159
79 SEMI reduce 4
195 BYTE reduce 124
158 retstmnt shift 27
17 SHORT reduce 67
110 SEMI shift 173
65 STATIC reduce 68
13 variabledecl shift 80
158 FOR shift 113
207 DOT reduce 60
56 BECOME reduce 3
61 CLASS reduce 69
9 RBRACE reduce 38
32 SHORT shift 7
10 WHILE reduce 107
85 BOOLEAN reduce 70
51 arrayaccess shift 4
175 IF reduce 51
80 SEMI reduce 120
155 RBRACE shift 174
204 COMMA reduce 119
179 modifier shift 85
151 PROTECTED reduce 9
91 COMMA reduce 1
51 BECOME reduce 30
185 BOOLEAN reduce 20
151 CHAR reduce 9
71 modifier shift 61
125 SEMI shift 175
184 classdecl shift 176
135 ID shift 177
205 RBRACE reduce 59
9 FOR reduce 38
184 PRIVATE shift 17
95 packagedecl shift 178
208 lefthand shift 2
81 WHILE reduce 99
115 STATIC reduce 96
20 name shift 25
65 PRIVATE reduce 68
161 COMMA reduce 2
66 LBRACE reduce 106
11 COMMA reduce 102
140 assign shift 11
198 type shift 127
184 modifiers shift 179
12 INT reduce 108
179 PRIVATE shift 17
33 SHORT reduce 26
206 SHORT reduce 34
151 RBRACE reduce 9
122 CHAR reduce 37
92 RBRACE shift 180
141 SEMI reduce 27
37 SHORT reduce 18
201 INT reduce 53
141 WHILE reduce 27
77 BECOME reduce 30
150 condexpr shift 30
140 fieldaccess shift 88
121 BOOLEAN reduce 10
151 ELSE reduce 9
121 PRIVATE reduce 10
34 SHORT reduce 97
60 modifiers shift 117
147 INT reduce 95
117 type shift 181
208 BECOME reduce 30
36 CHAR reduce 11
201 RBRACE reduce 53
32 RETURN shift 96
54 variabledeclid shift 49
52 IMPORT reduce 41
122 BYTE reduce 37
5 LPAREN reduce 72
81 RBRACE reduce 99
79 lefthand shift 2
40 RETURN shift 96
121 ELSE reduce 10
36 LBRACE reduce 11
28 STATIC reduce 65
128 COMMA reduce 122
46 SHORT reduce 94
115 PRIVATE reduce 96
71 staticinit shift 37
6 RBRACE reduce 12
197 RETURN shift 96
68 STATIC reduce 19
95 PACKAGE shift 182
71 PUBLIC shift 28
107 BYTE reduce 32
171 LBRACE shift 40
37 PROTECTED reduce 18
204 LBRACK reduce 119
52 PROTECTED reduce 41
65 INT reduce 68
201 SHORT reduce 53
32 emptystmnt shift 10
47 SEMI reduce 13
51 expr shift 183
178 importdecls shift 184
79 name shift 25
204 RPAREN reduce 119
65 BYTE reduce 68
71 classbodydecl shift 185
26 BECOME reduce 71
40 IF shift 45
83 BOOLEAN reduce 98
158 block shift 66
142 SEMI reduce 117
102 COMMA shift 77
37 CHAR reduce 18
171 SEMI shift 141
61 BOOLEAN reduce 69
60 methodhead shift 168
109 EOF reduce 33
141 RETURN reduce 27
107 INT reduce 32
143 LBRACK reduce 118
27 SHORT reduce 109
171 RETURN shift 96
84 PROTECTED reduce 66
141 RBRACE reduce 27
121 LBRACE reduce 10
184 INTERFACE shift 186
71 primitivetype shift 1
24 CHAR reduce 52
122 FOR reduce 37
151 BYTE reduce 9
60 type shift 54
22 DOT reduce 91
5 LBRACK reduce 72
18 RPAREN reduce 28
128 SEMI reduce 122
180 SEMI shift 141
5 DOT reduce 72
89 EOF reduce 40
148 SEMI reduce 57
147 ELSE reduce 95
116 simplename shift 26
72 PROTECTED reduce 78
208 primary shift 137
6 SEMI reduce 12
18 SEMI reduce 28
10 RBRACE reduce 107
206 LBRACE reduce 34
63 DOT reduce 73
66 RETURN reduce 106
6 RETURN reduce 12
10 RETURN reduce 107
202 COMMA reduce 61
40 while shift 129
71 fielddecl shift 44
61 PUBLIC reduce 69
147 FOR reduce 95
9 CHAR reduce 38
89 SEMI reduce 40
68 BYTE reduce 19
121 FOR reduce 10
32 WHILE shift 73
119 INT reduce 54
150 lefthand shift 2
147 CHAR reduce 95
201 BOOLEAN reduce 53
19 BYTE reduce 17
96 assign shift 14
158 ifthenelse shift 81
66 WHILE reduce 106
180 FOR shift 113
178 CLASS reduce 39
24 BOOLEAN reduce 52
46 BYTE reduce 94
90 ID shift 187
140 super shift 167
38 condexpr shift 30
95 file shift 188
123 STAR shift 189
107 RBRACE reduce 32
20 condexpr shift 30
86 extendsinterfaces shift 190
52 PRIVATE reduce 41
40 for shift 21
68 PUBLIC reduce 19
206 FOR reduce 34
117 PUBLIC shift 28
103 LBRACE shift 191
180 retstmnt shift 27
143 COMMA reduce 118
108 SEMI reduce 56
119 STATIC reduce 54
208 ID shift 63
140 arraycreate shift 154
33 CHAR reduce 26
73 LPAREN shift 192
60 referencetype shift 15
198 BYTE shift 3
169 simplename shift 26
139 SEMI reduce 35
10 ELSE reduce 107
162 SEMI reduce 55
71 numerictype shift 29
94 COMMA shift 149
15 ID reduce 111
51 simplename shift 26
160 INT reduce 31
27 RBRACE reduce 109
143 BECOME reduce 118
32 IF shift 45
198 SHORT shift 7
131 arrayaccess shift 4
22 RBRACE reduce 103
89 STATIC reduce 40
173 expr shift 193
106 COMMA reduce 123
96 qualifiedname shift 5
197 while shift 129
174 EOF reduce 43
67 EOF reduce 15
66 BYTE reduce 106
185 PROTECTED reduce 20
10 IF reduce 107
146 RPAREN shift 194
18 RBRACK reduce 28
198 BOOLEAN shift 39
36 BOOLEAN reduce 11
81 SHORT reduce 99
81 BOOLEAN reduce 99
129 LBRACE reduce 100
105 WHILE reduce 14
85 SHORT reduce 70
43 ID reduce 87
95 PROTECTED reduce 79
26 SEMI reduce 71
89 PRIVATE reduce 40
20 simplename shift 26
180 block shift 66
60 SHORT shift 7
158 WHILE shift 73
33 PROTECTED reduce 26
34 RETURN reduce 97
179 STATIC shift 65
171 stmnt shift 195
136 RBRACE shift 196
117 BYTE shift 3
44 BYTE reduce 25
201 BYTE reduce 53
95 CLASS reduce 79
32 CHAR shift 64
19 PUBLIC reduce 17
71 SHORT shift 7
79 BECOME reduce 30
35 BECOME reduce 8
124 RPAREN reduce 5
9 RETURN reduce 38
107 STATIC reduce 32
172 RPAREN shift 197
130 COMMA shift 198
158 RETURN shift 96
208 stmntexpr shift 199
66 CHAR reduce 106
191 RBRACE shift 200
59 SEMI reduce 80
28 SHORT reduce 65
168 SEMI shift 201
119 PRIVATE reduce 54
33 RBRACE reduce 26
20 fieldaccess shift 53
61 PROTECTED reduce 69
150 assign shift 14
60 PRIVATE shift 17
26 DOT reduce 71
201 PROTECTED reduce 53
47 SHORT reduce 13
5 SEMI reduce 72
197 retstmnt shift 27
60 INT shift 16
12 BYTE reduce 108
141 BYTE reduce 27
119 RBRACE reduce 54
95 INTERFACE reduce 79
19 RBRACE reduce 17
78 INTERFACE reduce 42
192 qualifiedname shift 5
46 BOOLEAN reduce 94
77 lefthand shift 2
164 COMMA shift 149
14 RBRACK reduce 7
38 RPAREN shift 202
96 condexpr shift 30
40 INT shift 16
32 SEMI shift 141
32 LBRACE shift 40
36 WHILE reduce 11
175 INT reduce 51
192 arrayaccess shift 4
27 WHILE reduce 109
14 RBRACE reduce 7
68 CHAR reduce 19
192 fieldaccess shift 53
144 classbody shift 203
145 RBRACK shift 204
81 INT reduce 99
71 STATIC shift 65
27 BOOLEAN reduce 109
195 IF reduce 124
30 SEMI reduce 6
141 CHAR reduce 27
65 PUBLIC reduce 68
197 SEMI shift 141
151 PRIVATE reduce 9
36 IF reduce 11
205 DOT reduce 59
147 BYTE reduce 95
152 COMMA reduce 64
53 BECOME reduce 48
160 PUBLIC reduce 31
77 assign shift 14
129 SEMI reduce 100
192 assignexpr shift 18
150 qualifiedname shift 5
202 DOT reduce 61
117 numerictype shift 29
153 BYTE shift 3
10 BYTE reduce 107
171 retstmnt shift 27
85 PROTECTED reduce 70
129 RBRACE reduce 100
9 IF reduce 38
32 BYTE shift 3
17 INTERFACE reduce 67
192 simplename shift 26
27 FOR reduce 109
62 RPAREN shift 205
51 assignexpr shift 18
33 INT reduce 26
173 BECOME reduce 30
60 methoddecl shift 33
197 ifthen shift 83
40 BOOLEAN shift 39
47 IF reduce 13
147 IF reduce 95
28 PUBLIC reduce 65
59 PUBLIC reduce 80
178 PUBLIC reduce 39
28 BOOLEAN reduce 65
197 exprstmnt shift 12
72 PUBLIC reduce 78
166 BYTE reduce 97
14 COMMA reduce 7
178 EOF reduce 39
197 FOR shift 113
150 expr shift 91
152 DOT reduce 64
134 DOT reduce 89
59 STATIC reduce 80
31 condexpr shift 30
83 RBRACE reduce 98
47 WHILE reduce 13
180 stmnt shift 206
150 assignexpr shift 18
166 SEMI reduce 97
117 referencetype shift 15
160 BOOLEAN reduce 31
63 SEMI reduce 73
150 RPAREN shift 207
95 EOF reduce 79
131 simplename shift 26
37 RBRACE reduce 18
33 PRIVATE reduce 26
166 BOOLEAN reduce 97
158 while shift 129
36 FOR reduce 11
40 BYTE shift 3
105 BYTE reduce 14
40 retstmnt shift 27
169 assign shift 14
19 INT reduce 17
192 BECOME reduce 30
61 BYTE reduce 69
105 FOR reduce 14
117 PROTECTED shift 84
46 CHAR reduce 94
117 PRIVATE shift 17
195 WHILE reduce 124
206 SEMI reduce 34
193 SEMI shift 208
70 LBRACK reduce 118
