67
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
76
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
constructordecl
constructordeclor
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
134
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
constructordecl modifiers constructordeclor block
constructordeclor simplename LPAREN params RPAREN
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interface
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
199
1373
133 ELSE reduce 104
98 BYTE reduce 18
57 name shift 1
35 lefthand shift 2
158 PROTECTED reduce 73
181 BYTE reduce 20
33 BOOLEAN reduce 24
113 BOOLEAN reduce 109
195 SHORT reduce 33
17 BYTE reduce 106
16 param shift 3
89 simplename shift 4
191 WHILE reduce 13
10 SHORT reduce 110
193 RPAREN shift 5
61 fieldaccess shift 6
24 ID reduce 76
148 qualifiedname shift 7
82 DOT reduce 68
41 RPAREN reduce 36
111 FINAL reduce 21
94 BYTE reduce 107
48 simplename shift 4
4 LBRACK reduce 77
157 condexpr shift 8
72 SEMI reduce 126
4 LBRACE reduce 77
16 BOOLEAN shift 9
118 for shift 10
57 emptystmnt shift 11
111 CHAR reduce 21
167 LBRACK reduce 127
159 ABSTRACT reduce 75
92 VOID reduce 12
18 SEMI reduce 35
52 FINAL reduce 75
84 RETURN reduce 106
106 ID reduce 62
17 INT reduce 106
148 SHORT shift 12
51 BOOLEAN reduce 117
80 BYTE reduce 61
79 PUBLIC reduce 34
86 LBRACK shift 13
187 LBRACE reduce 103
98 CHAR reduce 18
10 LBRACE reduce 110
16 arraytype shift 14
79 BYTE reduce 34
144 referencetype shift 15
193 COMMA shift 16
32 RBRACE reduce 115
25 stmntnotrail shift 17
57 SEMI shift 18
25 emptystmnt shift 11
165 DOT reduce 4
144 constructordeclor shift 19
197 assign shift 20
23 FINAL reduce 85
138 BECOME reduce 100
184 BYTE reduce 63
53 INT reduce 74
37 LBRACE reduce 65
35 fieldaccess shift 6
84 BOOLEAN reduce 106
169 WHILE shift 21
10 INT reduce 110
105 BYTE reduce 14
84 FOR reduce 106
73 COMMA reduce 87
86 BECOME reduce 51
85 CHAR reduce 108
156 BYTE shift 22
0 BOF shift 23
187 BYTE reduce 103
172 modifier shift 24
92 FOR reduce 12
146 FINAL reduce 70
16 simplename shift 4
183 LBRACK reduce 128
85 INT reduce 108
84 ELSE shift 25
176 interface shift 26
191 LBRACE reduce 13
116 RPAREN reduce 8
169 IF shift 27
194 SHORT reduce 60
79 FINAL reduce 34
186 CHAR reduce 44
198 RPAREN shift 28
133 WHILE reduce 104
114 PUBLIC reduce 46
94 INT reduce 107
186 RETURN reduce 44
13 arrayaccess shift 29
130 ID shift 30
110 FINAL reduce 69
186 RBRACE reduce 44
16 CHAR shift 31
159 INT reduce 75
169 block shift 32
19 block shift 33
146 SHORT reduce 70
80 RBRACE reduce 61
160 extendsinterfaces shift 34
86 LPAREN shift 35
127 SEMI reduce 47
35 expr shift 36
111 INT reduce 21
146 PUBLIC reduce 70
118 IF shift 27
157 qualifiedname shift 7
176 ID shift 30
45 methoddeclor shift 37
99 SEMI shift 18
147 arrayaccess shift 29
130 assign shift 38
118 block shift 32
148 params shift 39
128 ID shift 40
33 RBRACE reduce 24
92 FINAL reduce 12
103 simplename shift 4
23 STATIC reduce 85
54 SHORT reduce 22
159 FINAL reduce 75
148 arraytype shift 14
113 SHORT reduce 109
44 LBRACK reduce 93
46 SEMI reduce 118
62 assignexpr shift 41
188 BOOLEAN reduce 19
56 COMMA shift 42
69 COMMA reduce 37
181 SHORT reduce 20
189 simplename shift 4
58 arrayaccess shift 29
184 ID reduce 63
78 INTERFACE reduce 105
50 PUBLIC reduce 48
57 CHAR shift 31
62 simplename shift 4
35 assignexpr shift 41
150 LBRACK shift 43
78 STATIC reduce 105
57 numerictype shift 44
192 FOR reduce 16
144 VOID shift 45
99 retstmnt shift 46
92 SEMI reduce 12
60 type shift 47
99 stmntnotrail shift 17
158 ABSTRACT reduce 73
143 RBRACE reduce 113
70 STATIC reduce 72
23 PACKAGE shift 48
24 SHORT reduce 76
63 primary shift 49
16 qualifiedname shift 7
184 ABSTRACT reduce 63
166 ABSTRACT reduce 49
11 WHILE reduce 116
100 CHAR reduce 71
50 INTERFACE reduce 48
32 BYTE reduce 115
186 SEMI reduce 44
54 CHAR reduce 22
44 ID reduce 93
155 BYTE reduce 45
33 STATIC reduce 24
146 ABSTRACT reduce 70
181 FINAL reduce 20
60 SHORT shift 12
60 COMMA reduce 88
30 LBRACE reduce 79
80 BOOLEAN reduce 61
52 singletypeimport shift 50
57 qualifiedname shift 7
191 SHORT reduce 13
167 SEMI reduce 127
183 BECOME reduce 128
30 LBRACK reduce 79
169 exprstmnt shift 51
54 ABSTRACT reduce 22
60 numerictype shift 44
114 importdecls shift 52
10 IF reduce 110
172 NATIVE shift 53
94 WHILE reduce 107
89 BECOME reduce 38
10 ID reduce 110
100 FINAL reduce 71
105 WHILE reduce 14
97 BECOME reduce 38
146 VOID reduce 70
159 classbodydecl shift 54
60 ID shift 30
51 IF reduce 117
51 ID reduce 117
89 assignexpr shift 41
68 LBRACK shift 13
82 COMMA reduce 68
54 VOID reduce 22
11 LBRACE reduce 116
188 CHAR reduce 19
181 RBRACE reduce 20
57 INT shift 55
178 LBRACK reduce 77
136 variabledecls shift 56
51 LBRACE reduce 117
130 fieldaccess shift 6
58 condexpr shift 8
101 blockstmnts shift 57
59 LBRACK reduce 127
162 ABSTRACT reduce 86
170 SEMI reduce 41
110 STATIC reduce 69
92 WHILE reduce 12
63 lefthand shift 2
184 SHORT reduce 63
7 IMPLEMENTS reduce 78
80 PUBLIC reduce 61
73 LBRACK shift 43
32 CHAR reduce 115
62 assign shift 38
191 FOR reduce 13
53 CHAR reduce 74
114 CLASS reduce 46
52 EOF reduce 121
92 PROTECTED reduce 12
46 RBRACE reduce 118
146 NATIVE reduce 70
115 NATIVE reduce 39
58 qualifiedname shift 7
17 RBRACE reduce 106
192 RETURN reduce 16
154 COMMA reduce 89
158 BOOLEAN reduce 73
162 CLASS reduce 86
119 SHORT reduce 133
184 STATIC reduce 63
16 INT shift 55
103 condexpr shift 8
169 RETURN shift 58
58 BECOME reduce 38
70 BOOLEAN reduce 72
195 RBRACE reduce 33
170 BOOLEAN reduce 41
57 SHORT shift 12
130 qualifiedname shift 7
94 RBRACE reduce 107
187 RETURN reduce 103
111 PUBLIC reduce 21
136 ID shift 59
41 SEMI reduce 36
178 LPAREN shift 60
11 SHORT reduce 116
2 assignop shift 61
40 LPAREN shift 62
187 IF reduce 103
23 ABSTRACT reduce 85
187 ID reduce 103
192 SHORT reduce 16
113 SEMI reduce 109
163 SEMI shift 63
146 STATIC reduce 70
156 primitivetype shift 64
51 SEMI reduce 117
157 assignexpr shift 41
158 PUBLIC reduce 73
180 DOT reduce 98
23 INTERFACE reduce 85
138 LBRACK reduce 100
138 LBRACE reduce 100
97 assignexpr shift 41
99 FOR shift 65
192 WHILE reduce 16
70 BYTE reduce 72
197 primnoarray shift 66
142 RBRACE shift 67
156 name shift 1
53 PROTECTED reduce 74
97 name shift 68
147 ID shift 30
35 RPAREN reduce 1
182 SEMI reduce 84
80 ABSTRACT reduce 61
80 CHAR reduce 61
11 BOOLEAN reduce 116
119 INT reduce 133
197 lefthand shift 2
157 fieldaccess shift 6
51 CHAR reduce 117
63 SEMI shift 69
144 ABSTRACT shift 70
96 variabledecls shift 71
110 SHORT reduce 69
92 SHORT reduce 12
79 PROTECTED reduce 34
157 variableinit shift 72
99 WHILE shift 21
11 ELSE reduce 116
47 variabledeclid shift 73
78 EOF reduce 105
187 BOOLEAN reduce 103
51 BYTE reduce 117
105 SHORT reduce 14
157 arrayinit shift 74
112 ID reduce 7
3 COMMA reduce 90
24 BOOLEAN reduce 76
24 ABSTRACT reduce 76
17 IF reduce 106
17 ID reduce 106
64 LBRACK shift 75
33 NATIVE reduce 24
195 FINAL reduce 33
59 RPAREN reduce 127
168 super shift 76
146 BOOLEAN reduce 70
161 RPAREN shift 77
94 SHORT reduce 107
32 WHILE reduce 115
170 SHORT reduce 41
89 arrayaccess shift 29
92 BYTE reduce 12
110 PUBLIC reduce 69
182 IMPORT reduce 84
146 CLASS reduce 70
101 FOR reduce 15
194 CHAR reduce 60
125 SEMI shift 78
130 name shift 68
187 RBRACE reduce 103
159 methoddecl shift 79
113 CHAR reduce 109
7 DOT reduce 78
77 COMMA reduce 67
195 STATIC reduce 33
173 SEMI reduce 130
79 STATIC reduce 34
141 block shift 80
110 BYTE reduce 69
54 ID reduce 22
52 CLASS reduce 75
124 classbody shift 81
7 LPAREN reduce 78
183 SEMI reduce 128
188 INT reduce 19
57 stmntnotrail shift 17
50 SEMI reduce 48
80 FINAL reduce 61
93 RPAREN shift 82
155 CHAR reduce 45
172 CLASS shift 83
64 ID reduce 119
25 for shift 10
24 PROTECTED reduce 76
18 RETURN reduce 35
148 RPAREN reduce 88
97 lefthand shift 2
97 condexpr shift 8
169 stmntnotrail shift 84
156 ID shift 30
22 ID reduce 80
13 assignexpr shift 41
118 ifthenelse shift 85
23 PROTECTED reduce 85
63 name shift 86
13 lefthand shift 2
57 localvardecl shift 87
53 ABSTRACT reduce 74
53 BYTE reduce 74
70 INTERFACE reduce 72
192 SEMI reduce 16
138 DOT reduce 100
55 ID reduce 82
46 ELSE reduce 118
110 CLASS reduce 69
197 primary shift 49
70 CLASS reduce 72
195 NATIVE reduce 33
116 COMMA reduce 8
63 forupdate shift 88
159 BOOLEAN reduce 75
197 LPAREN shift 89
51 RBRACE reduce 117
113 RBRACE reduce 109
85 SHORT reduce 108
166 STATIC reduce 49
101 WHILE reduce 15
127 PROTECTED reduce 47
186 FOR reduce 44
10 BOOLEAN reduce 110
60 arraytype shift 14
100 INTERFACE reduce 71
61 assign shift 38
156 arraytype shift 14
127 IMPORT reduce 47
159 NATIVE reduce 75
189 name shift 90
191 RBRACE reduce 13
62 name shift 68
192 IF reduce 16
192 ID reduce 16
63 DOT reduce 38
54 INT reduce 22
155 FOR reduce 45
113 FOR reduce 109
147 expr shift 91
194 RBRACE reduce 60
127 INTERFACE reduce 47
35 qualifiedname shift 7
38 SEMI reduce 10
103 ID shift 30
157 SEMI reduce 5
51 WHILE reduce 117
57 RBRACE shift 92
69 RBRACE reduce 37
46 ID reduce 118
46 IF reduce 118
32 FOR reduce 115
144 NATIVE shift 53
188 NATIVE reduce 19
156 SHORT shift 12
115 FINAL reduce 39
62 arglist shift 93
92 CHAR reduce 12
84 SHORT reduce 106
101 IF reduce 15
101 ID reduce 15
99 for shift 10
182 PUBLIC reduce 84
187 WHILE reduce 103
17 CHAR reduce 106
82 RBRACE reduce 68
99 ifthen shift 94
197 arraycreate shift 95
144 type shift 96
20 COMMA reduce 111
33 INT reduce 24
106 BOOLEAN reduce 62
74 SEMI reduce 132
157 assign shift 38
57 ifthen shift 94
99 ifthenelse shift 85
59 COMMA reduce 127
121 SEMI shift 97
80 ID reduce 61
25 retstmnt shift 46
138 IMPLEMENTS reduce 100
11 ID reduce 116
25 ifthen shift 94
159 classmemberdecl shift 98
11 IF reduce 116
32 SHORT reduce 115
157 name shift 68
183 RPAREN reduce 128
88 RBRACE shift 99
186 BOOLEAN reduce 44
147 condexpr shift 8
138 LPAREN reduce 100
182 FINAL reduce 84
147 qualifiedname shift 7
181 NATIVE reduce 20
182 EOF reduce 84
118 stmntnotrail shift 17
158 NATIVE reduce 73
172 STATIC shift 100
61 BECOME reduce 38
80 VOID reduce 61
18 RBRACE reduce 35
110 CHAR reduce 69
162 FINAL reduce 86
195 BOOLEAN reduce 33
22 LBRACK reduce 80
57 RETURN shift 58
11 FOR reduce 116
85 SEMI reduce 108
99 LBRACE shift 101
63 LPAREN shift 89
52 SEMI shift 102
140 RBRACE reduce 43
192 BOOLEAN reduce 16
33 ID reduce 24
101 BOOLEAN reduce 15
27 LPAREN shift 103
197 arrayaccess shift 104
166 FINAL reduce 49
99 IF shift 27
38 RPAREN reduce 10
184 PUBLIC reduce 63
188 PUBLIC reduce 19
57 stmnt shift 105
141 SEMI shift 106
101 SEMI reduce 15
55 LBRACK reduce 82
100 ABSTRACT reduce 71
26 LBRACE reduce 29
158 STATIC reduce 73
169 FOR shift 65
58 expr shift 107
115 ID reduce 39
103 assign shift 38
70 FINAL reduce 72
52 classdecl shift 108
180 COMMA reduce 112
156 INT shift 55
4 IMPLEMENTS reduce 77
174 COMMA reduce 3
78 PUBLIC reduce 105
57 FOR shift 65
13 qualifiedname shift 7
92 LBRACE reduce 12
18 BYTE reduce 35
130 assignexpr shift 41
97 assign shift 38
50 EOF reduce 48
192 INT reduce 16
60 primitivetype shift 64
147 fieldaccess shift 6
188 ABSTRACT reduce 19
106 CHAR reduce 62
159 RBRACE shift 109
197 SEMI shift 69
162 IMPORT reduce 86
150 COMMA reduce 125
92 PUBLIC reduce 12
172 PUBLIC shift 110
94 FOR reduce 107
133 BYTE reduce 104
181 VOID reduce 20
103 fieldaccess shift 6
10 WHILE reduce 110
32 SEMI reduce 115
111 ID reduce 21
111 STATIC reduce 21
144 qualifiedname shift 7
8 RBRACE reduce 9
46 RETURN reduce 118
147 BECOME reduce 38
79 INT reduce 34
169 retstmnt shift 46
190 COMMA reduce 131
58 assignexpr shift 41
132 ID reduce 6
18 INT reduce 35
84 RBRACE reduce 106
159 BYTE reduce 75
77 RBRACE reduce 67
113 IF reduce 109
124 LBRACE shift 111
113 ID reduce 109
89 condexpr shift 8
63 simplename shift 4
162 SEMI reduce 86
144 STATIC shift 100
85 LBRACE reduce 108
25 exprstmnt shift 51
67 EOF reduce 50
63 qualifiedname shift 7
53 BOOLEAN reduce 74
123 RBRACK shift 112
194 BYTE reduce 60
80 INT reduce 61
25 while shift 113
6 BECOME reduce 52
85 RBRACE reduce 108
100 PROTECTED reduce 71
51 FOR reduce 117
54 NATIVE reduce 22
23 packagedecl shift 114
9 ID reduce 94
100 SHORT reduce 71
13 fieldaccess shift 6
157 arrayaccess shift 29
97 qualifiedname shift 7
189 qualifiedname shift 7
71 SEMI shift 115
166 SEMI reduce 49
61 condexpr shift 8
61 assignexpr shift 116
116 RBRACK reduce 8
62 arrayaccess shift 29
52 interfacedecl shift 117
91 RPAREN shift 118
116 RBRACE reduce 8
118 stmnt shift 119
89 qualifiedname shift 7
85 FOR reduce 108
184 FINAL reduce 63
173 COMMA reduce 130
37 SEMI reduce 65
100 ID reduce 71
63 THIS shift 120
192 RBRACE reduce 16
139 SEMI reduce 42
156 forinit shift 121
98 SHORT reduce 18
133 ID reduce 104
25 IF shift 27
138 ID reduce 100
197 qualifiedname shift 7
133 IF reduce 104
4 SEMI reduce 77
70 PUBLIC reduce 72
115 RBRACE reduce 39
144 primitivetype shift 64
188 SHORT reduce 19
115 CHAR reduce 39
146 ID reduce 70
70 ID reduce 72
103 expr shift 122
144 ID shift 30
78 ABSTRACT reduce 105
63 arraycreate shift 95
105 LBRACE reduce 14
182 NATIVE reduce 84
52 NATIVE reduce 75
182 CLASS reduce 84
184 CHAR reduce 63
188 FINAL reduce 19
84 SEMI reduce 106
51 RETURN reduce 117
58 ID shift 30
24 NATIVE reduce 76
46 CHAR reduce 118
63 arrayaccess shift 104
13 BECOME reduce 38
92 RETURN reduce 12
18 CHAR reduce 35
146 PROTECTED reduce 70
13 ID shift 30
147 simplename shift 4
24 CLASS reduce 76
8 RBRACK reduce 9
118 RETURN shift 58
78 NATIVE reduce 105
79 NATIVE reduce 34
184 RBRACE reduce 63
133 SHORT reduce 104
188 STATIC reduce 19
89 assign shift 38
166 CLASS reduce 49
98 VOID reduce 18
85 RETURN reduce 108
100 VOID reduce 71
31 ID reduce 83
50 NATIVE reduce 48
52 PUBLIC reduce 75
1 LBRACK shift 123
4 BECOME reduce 77
70 VOID reduce 72
76 interfaces shift 124
13 condexpr shift 8
110 ABSTRACT reduce 69
70 NATIVE reduce 72
24 VOID reduce 76
185 ID shift 30
114 EOF reduce 46
99 emptystmnt shift 11
17 RETURN reduce 106
106 RBRACE reduce 62
33 CHAR reduce 24
31 LBRACK reduce 83
170 FOR reduce 41
18 FOR reduce 35
25 LBRACE shift 101
126 SEMI reduce 66
185 name shift 125
130 lefthand shift 2
54 FINAL reduce 22
39 RPAREN shift 126
97 simplename shift 4
52 importdecl shift 127
167 COMMA reduce 127
166 INTERFACE reduce 49
105 RBRACE reduce 14
95 DOT reduce 92
158 CLASS reduce 73
90 IMPLEMENTS reduce 27
182 PROTECTED reduce 84
7 LBRACE reduce 78
157 simplename shift 4
63 ID shift 30
49 DOT shift 128
103 qualifiedname shift 7
136 variabledecl shift 129
62 ID shift 30
7 LBRACK reduce 78
84 CHAR reduce 106
157 BECOME reduce 38
23 EOF reduce 85
93 COMMA shift 130
133 CHAR reduce 104
152 DOT shift 131
169 emptystmnt shift 11
75 RBRACK shift 132
57 for shift 10
149 DOT shift 131
18 ID reduce 35
170 RBRACE reduce 41
107 SEMI shift 133
18 IF reduce 35
13 expr shift 134
137 EOF shift 135
59 SEMI reduce 127
115 PUBLIC reduce 39
187 SEMI reduce 103
10 FOR reduce 110
7 ID reduce 78
46 LBRACE reduce 118
57 type shift 136
101 RBRACE reduce 15
158 BYTE reduce 73
13 name shift 68
60 qualifiedname shift 7
81 EOF reduce 23
15 ID reduce 120
94 ID reduce 107
23 PUBLIC reduce 85
157 COMMA reduce 5
133 FOR reduce 104
186 LBRACE reduce 44
16 type shift 47
94 IF reduce 107
50 PROTECTED reduce 48
98 NATIVE reduce 18
53 PUBLIC reduce 74
57 BOOLEAN shift 9
166 EOF reduce 49
23 CLASS reduce 85
30 ID reduce 79
10 RETURN reduce 110
79 SHORT reduce 34
133 LBRACE reduce 104
99 exprstmnt shift 51
78 CLASS reduce 105
115 VOID reduce 39
32 IF reduce 115
177 COMMA reduce 114
12 ID reduce 81
105 RETURN reduce 14
57 ifthenelse shift 85
130 simplename shift 4
155 SEMI reduce 45
24 STATIC reduce 76
178 ID reduce 77
46 INT reduce 118
184 BOOLEAN reduce 63
53 CLASS reduce 74
24 INTERFACE reduce 76
57 exprstmnt shift 51
155 INT reduce 45
156 numerictype shift 44
151 BECOME reduce 52
170 WHILE reduce 41
14 ID reduce 102
155 LBRACE reduce 45
23 file shift 137
153 ID shift 138
158 SHORT reduce 73
156 localvardecl shift 139
63 stmntexprlst shift 140
46 FOR reduce 118
85 BYTE reduce 108
146 CHAR reduce 70
100 BOOLEAN reduce 71
17 BOOLEAN reduce 106
32 ID reduce 115
110 ID reduce 69
84 WHILE reduce 106
147 assignexpr shift 41
186 SHORT reduce 44
114 FINAL reduce 46
148 BOOLEAN shift 9
176 simplename shift 4
99 RETURN shift 58
98 FINAL reduce 18
159 methodhead shift 141
100 STATIC reduce 71
24 PUBLIC reduce 76
156 type shift 136
89 name shift 68
34 LBRACE shift 142
63 stmntexpr shift 143
168 IMPLEMENTS reduce 26
158 CHAR reduce 73
119 RBRACE reduce 133
89 lefthand shift 2
159 modifiers shift 144
35 COMMA reduce 1
187 CHAR reduce 103
20 RBRACE reduce 111
172 INTERFACE shift 145
51 SHORT reduce 117
101 BYTE reduce 15
114 INTERFACE reduce 46
188 PROTECTED reduce 19
33 PROTECTED reduce 24
111 NATIVE reduce 21
57 while shift 113
144 PROTECTED shift 146
21 LPAREN shift 147
167 LPAREN shift 148
98 RBRACE reduce 18
197 BECOME reduce 38
162 PUBLIC reduce 86
17 LBRACE reduce 106
189 ID shift 30
57 WHILE shift 21
63 BECOME reduce 38
62 lefthand shift 2
170 RETURN reduce 41
48 name shift 149
8 RPAREN reduce 9
136 variabledeclid shift 150
102 EOF reduce 124
100 NATIVE reduce 71
32 INT reduce 115
63 fieldaccess shift 151
52 INTERFACE reduce 75
105 CHAR reduce 14
197 simplename shift 4
105 BOOLEAN reduce 14
57 IF shift 27
174 RPAREN reduce 3
57 ID shift 30
35 assign shift 38
98 ID reduce 18
194 FOR reduce 60
92 BOOLEAN reduce 12
106 STATIC reduce 62
119 BOOLEAN reduce 133
61 arrayaccess shift 29
57 arraytype shift 14
181 BOOLEAN reduce 20
168 LBRACE reduce 26
118 emptystmnt shift 11
176 name shift 152
144 modifier shift 24
101 CHAR reduce 15
16 ID shift 30
96 variabledeclid shift 150
169 LBRACE shift 101
125 DOT shift 153
11 CHAR reduce 116
13 assign shift 38
111 ABSTRACT reduce 21
16 referencetype shift 15
17 SHORT reduce 106
98 INT reduce 18
148 referencetype shift 15
108 EOF reduce 122
175 LBRACE reduce 64
18 WHILE reduce 35
25 ifthenelse shift 85
61 name shift 68
197 ID shift 30
148 numerictype shift 44
23 NATIVE reduce 85
32 RETURN reduce 115
144 CHAR shift 31
183 COMMA reduce 128
60 param shift 154
100 INT reduce 71
94 LBRACE reduce 107
100 PUBLIC reduce 71
130 condexpr shift 8
148 CHAR shift 31
177 RBRACE reduce 114
25 block shift 32
118 WHILE shift 21
144 BOOLEAN shift 9
25 stmnt shift 155
85 BOOLEAN reduce 108
89 fieldaccess shift 6
13 simplename shift 4
111 BYTE reduce 21
158 INT reduce 73
155 ID reduce 45
65 LBRACE shift 156
155 IF reduce 45
97 fieldaccess shift 6
182 ABSTRACT reduce 84
161 COMMA shift 130
50 IMPORT reduce 48
80 PROTECTED reduce 61
157 lefthand shift 2
195 VOID reduce 33
148 primitivetype shift 64
133 SEMI reduce 104
71 COMMA shift 42
62 RPAREN reduce 1
148 INT shift 55
110 BOOLEAN reduce 69
99 block shift 32
61 simplename shift 4
148 type shift 47
150 BECOME shift 157
106 NATIVE reduce 62
144 arraytype shift 14
110 PROTECTED reduce 69
159 PUBLIC reduce 75
166 NATIVE reduce 49
144 FINAL shift 158
57 simplename shift 4
35 ID shift 30
52 ABSTRACT reduce 75
70 ABSTRACT reduce 72
105 FOR reduce 14
85 ID reduce 108
175 SEMI reduce 64
85 IF reduce 108
111 classbodydecls shift 159
154 RPAREN reduce 89
32 BOOLEAN reduce 115
53 FINAL reduce 74
103 lefthand shift 2
192 LBRACE reduce 16
195 ID reduce 33
145 ID shift 160
33 BYTE reduce 24
147 lefthand shift 2
172 FINAL shift 158
184 PROTECTED reduce 63
127 ABSTRACT reduce 47
118 retstmnt shift 46
187 INT reduce 103
48 qualifiedname shift 7
35 arglist shift 161
17 FOR reduce 106
94 BOOLEAN reduce 107
84 INT reduce 106
24 BYTE reduce 76
60 BOOLEAN shift 9
149 SEMI shift 162
114 IMPORT reduce 46
156 simplename shift 4
103 assignexpr shift 41
144 INT shift 55
5 LBRACE reduce 25
96 variabledecl shift 129
197 name shift 86
106 PROTECTED reduce 62
53 SHORT reduce 74
62 condexpr shift 8
141 LBRACE shift 101
57 BYTE shift 22
195 CHAR reduce 33
74 COMMA reduce 132
97 expr shift 163
2 BECOME shift 164
7 SEMI reduce 78
50 CLASS reduce 48
33 FINAL reduce 24
47 ID shift 59
148 name shift 1
134 RBRACK shift 165
28 DOT reduce 96
127 NATIVE reduce 47
11 RBRACE reduce 116
85 WHILE reduce 108
98 STATIC reduce 18
184 INT reduce 63
197 fieldaccess shift 151
78 IMPORT reduce 105
158 VOID reduce 73
57 referencetype shift 15
78 FINAL reduce 105
59 BECOME reduce 127
16 SHORT shift 12
52 ondemandimport shift 166
186 WHILE reduce 44
58 fieldaccess shift 6
191 SEMI reduce 13
159 STATIC reduce 75
104 DOT reduce 99
119 RETURN reduce 133
60 RPAREN reduce 88
60 INT shift 55
130 arrayaccess shift 29
118 FOR shift 65
78 SEMI reduce 105
197 THIS shift 120
96 ID shift 167
8 SEMI reduce 9
25 FOR shift 65
105 INT reduce 14
155 SHORT reduce 45
84 ID reduce 106
48 ID shift 30
84 IF reduce 106
162 STATIC reduce 86
176 qualifiedname shift 7
35 condexpr shift 8
4 ID reduce 77
83 ID shift 168
182 STATIC reduce 84
33 ABSTRACT reduce 24
195 PUBLIC reduce 33
181 ABSTRACT reduce 20
148 simplename shift 4
32 ELSE reduce 115
84 BYTE reduce 106
23 IMPORT reduce 85
51 ELSE reduce 117
162 NATIVE reduce 86
122 RPAREN shift 169
90 LBRACE reduce 27
118 exprstmnt shift 51
52 STATIC reduce 75
99 stmnt shift 170
80 STATIC reduce 61
115 INT reduce 39
111 VOID reduce 21
41 RBRACK reduce 36
158 ID reduce 73
114 NATIVE reduce 46
118 LBRACE shift 101
170 IF reduce 41
191 RETURN reduce 13
7 BECOME reduce 78
18 BOOLEAN reduce 35
148 COMMA reduce 88
159 PROTECTED reduce 75
170 ID reduce 41
118 while shift 113
172 PROTECTED shift 146
170 INT reduce 41
11 RETURN reduce 116
178 DOT reduce 77
89 ID shift 30
195 PROTECTED reduce 33
92 NATIVE reduce 12
46 SHORT reduce 118
110 INTERFACE reduce 69
126 LBRACE reduce 66
4 LPAREN reduce 77
45 ID shift 171
101 INT reduce 15
70 SHORT reduce 72
80 NATIVE reduce 61
39 COMMA shift 16
185 qualifiedname shift 7
113 RETURN reduce 109
62 fieldaccess shift 6
156 BOOLEAN shift 9
113 WHILE reduce 109
30 SEMI reduce 79
127 EOF reduce 47
164 ID reduce 11
127 STATIC reduce 47
110 NATIVE reduce 69
98 ABSTRACT reduce 18
30 LPAREN reduce 79
101 RETURN reduce 15
79 VOID reduce 34
17 WHILE reduce 106
84 LBRACE reduce 106
106 SHORT reduce 62
146 INTERFACE reduce 70
144 BYTE shift 22
92 ABSTRACT reduce 12
166 PUBLIC reduce 49
129 SEMI reduce 129
52 modifiers shift 172
190 SEMI reduce 131
46 BYTE reduce 118
159 SHORT reduce 75
192 BYTE reduce 16
30 DOT reduce 79
115 PROTECTED reduce 39
104 BECOME reduce 53
98 PROTECTED reduce 18
106 FINAL reduce 62
78 PROTECTED reduce 105
10 RBRACE reduce 110
61 ID shift 30
16 primitivetype shift 64
106 VOID reduce 62
42 variabledecl shift 173
130 expr shift 174
50 STATIC reduce 48
127 CLASS reduce 47
42 ID shift 59
29 BECOME reduce 53
76 LBRACE reduce 28
106 PUBLIC reduce 62
96 methoddeclor shift 175
159 CHAR reduce 75
10 BYTE reduce 110
169 ifthen shift 94
109 EOF reduce 17
53 STATIC reduce 74
169 while shift 113
70 INT reduce 72
144 PUBLIC shift 110
118 SEMI shift 18
97 arrayaccess shift 29
9 LBRACK reduce 94
116 SEMI reduce 8
60 simplename shift 4
99 while shift 113
194 RETURN reduce 60
115 BOOLEAN reduce 39
146 BYTE reduce 70
114 SEMI reduce 46
181 ID reduce 20
76 IMPLEMENTS shift 176
187 ELSE reduce 103
155 RETURN reduce 45
188 VOID reduce 19
115 ABSTRACT reduce 39
158 FINAL reduce 73
186 BYTE reduce 44
113 INT reduce 109
92 ELSE reduce 12
79 BOOLEAN reduce 34
98 PUBLIC reduce 18
191 ID reduce 13
169 ifthenelse shift 85
191 IF reduce 13
94 SEMI reduce 107
165 BECOME reduce 4
72 COMMA reduce 126
191 INT reduce 13
159 VOID reduce 75
138 SEMI reduce 100
54 BOOLEAN reduce 22
53 ID reduce 74
188 BYTE reduce 19
115 STATIC reduce 39
170 BYTE reduce 41
11 SEMI reduce 116
32 LBRACE reduce 115
1 ID reduce 101
197 stmntexpr shift 177
130 BECOME reduce 38
50 FINAL reduce 48
92 STATIC reduce 12
106 ABSTRACT reduce 62
194 IF reduce 60
144 name shift 1
194 ID reduce 60
135 ABSTRACT reduce 0
119 BYTE reduce 133
94 RETURN reduce 107
100 BYTE reduce 71
52 PROTECTED reduce 75
129 COMMA reduce 129
156 referencetype shift 15
16 name shift 1
191 BYTE reduce 13
120 DOT reduce 95
181 INT reduce 20
100 CLASS reduce 71
113 BYTE reduce 109
62 COMMA reduce 1
167 BECOME reduce 127
169 SEMI shift 18
18 LBRACE reduce 35
144 simplename shift 178
25 WHILE shift 21
115 BYTE reduce 39
52 typedecl shift 179
113 LBRACE reduce 109
10 SEMI reduce 110
195 BYTE reduce 33
106 INT reduce 62
25 RETURN shift 58
197 methodinvoke shift 180
159 constructordecl shift 181
155 BOOLEAN reduce 45
79 ID reduce 34
62 BECOME reduce 38
63 primnoarray shift 66
57 retstmnt shift 46
101 SHORT reduce 15
155 WHILE reduce 45
155 RBRACE reduce 45
38 RBRACE reduce 10
57 primitivetype shift 64
111 BOOLEAN reduce 21
196 SEMI shift 182
1 DOT shift 131
53 INTERFACE reduce 74
38 RBRACK reduce 10
58 simplename shift 4
35 name shift 68
181 PUBLIC reduce 20
194 WHILE reduce 60
90 DOT shift 131
54 RBRACE reduce 22
25 SEMI shift 18
106 BYTE reduce 62
133 RBRACE reduce 104
127 FINAL reduce 47
24 CHAR reduce 76
94 CHAR reduce 107
61 qualifiedname shift 7
70 PROTECTED reduce 72
103 BECOME reduce 38
61 lefthand shift 2
11 INT reduce 116
133 RETURN reduce 104
68 BECOME reduce 51
97 ID shift 30
105 SEMI reduce 14
30 IMPLEMENTS reduce 79
54 STATIC reduce 22
184 NATIVE reduce 63
58 assign shift 38
60 referencetype shift 15
63 assign shift 20
36 COMMA reduce 2
144 SHORT shift 12
33 SHORT reduce 24
33 VOID reduce 24
43 RBRACK shift 183
114 ABSTRACT reduce 46
119 LBRACE reduce 133
10 CHAR reduce 110
58 name shift 68
194 SEMI reduce 60
141 methodbody shift 184
119 CHAR reduce 133
166 PROTECTED reduce 49
170 CHAR reduce 41
98 BOOLEAN reduce 18
148 BYTE shift 22
53 VOID reduce 74
127 PUBLIC reduce 47
33 PUBLIC reduce 24
68 DOT shift 131
181 STATIC reduce 20
52 IMPORT shift 185
36 RPAREN reduce 2
143 COMMA reduce 113
8 COMMA reduce 9
35 BECOME reduce 38
18 SHORT reduce 35
18 ELSE reduce 35
169 stmnt shift 186
115 SHORT reduce 39
166 IMPORT reduce 49
181 CHAR reduce 20
194 LBRACE reduce 60
58 SEMI shift 187
30 BECOME reduce 79
171 LPAREN shift 148
79 RBRACE reduce 34
187 FOR reduce 103
101 LBRACE reduce 15
38 COMMA reduce 10
162 INTERFACE reduce 86
54 BYTE reduce 22
188 RBRACE reduce 19
192 CHAR reduce 16
159 staticinit shift 188
185 simplename shift 4
194 INT reduce 60
194 BOOLEAN reduce 60
16 BYTE shift 22
60 BYTE shift 22
16 numerictype shift 44
119 WHILE reduce 133
111 SHORT reduce 21
51 INT reduce 117
184 VOID reduce 63
105 ID reduce 14
168 EXTENDS shift 189
157 expr shift 190
57 localvardeclstmnt shift 191
105 IF reduce 14
19 LBRACE shift 101
77 DOT reduce 67
42 variabledeclid shift 150
114 STATIC reduce 46
157 ID shift 30
57 blockstmnt shift 192
60 CHAR shift 31
54 PROTECTED reduce 22
41 COMMA reduce 36
60 name shift 1
164 BECOME reduce 11
46 WHILE reduce 118
180 RBRACE reduce 112
119 FOR reduce 133
179 EOF reduce 40
195 INT reduce 33
56 SEMI reduce 59
92 ID reduce 12
114 PROTECTED reduce 46
66 DOT reduce 91
169 for shift 10
103 name shift 68
60 params shift 193
87 SEMI shift 194
35 simplename shift 4
46 BOOLEAN reduce 118
172 ABSTRACT shift 70
195 ABSTRACT reduce 33
11 BYTE reduce 116
23 SEMI reduce 85
70 CHAR reduce 72
151 DOT reduce 97
119 ID reduce 133
119 IF reduce 133
156 CHAR shift 31
57 block shift 32
144 numerictype shift 44
186 ID reduce 44
162 PROTECTED reduce 86
159 ID reduce 75
186 IF reduce 44
79 CHAR reduce 34
92 IF reduce 12
182 INTERFACE reduce 84
53 NATIVE reduce 74
146 INT reduce 70
57 LBRACE shift 101
24 INT reduce 76
158 INTERFACE reduce 73
12 LBRACK reduce 81
162 EOF reduce 86
159 fielddecl shift 195
54 PUBLIC reduce 22
156 qualifiedname shift 7
73 RPAREN reduce 87
148 ID shift 30
117 EOF reduce 123
133 INT reduce 104
181 PROTECTED reduce 20
188 ID reduce 19
80 SHORT reduce 61
110 INT reduce 69
131 ID shift 138
92 RBRACE reduce 12
147 name shift 68
133 BOOLEAN reduce 104
79 ABSTRACT reduce 34
191 CHAR reduce 13
3 RPAREN reduce 90
62 expr shift 36
186 INT reduce 44
4 DOT reduce 77
110 VOID reduce 69
187 SHORT reduce 103
152 LBRACE reduce 32
58 lefthand shift 2
119 SEMI reduce 133
170 LBRACE reduce 41
191 BOOLEAN reduce 13
50 ABSTRACT reduce 48
118 ifthen shift 94
86 DOT shift 131
92 INT reduce 12
24 FINAL reduce 76
153 STAR shift 196
148 param shift 154
140 COMMA shift 197
111 PROTECTED reduce 21
17 SEMI reduce 106
111 RBRACE reduce 21
35 arrayaccess shift 29
62 qualifiedname shift 7
150 SEMI reduce 125
147 assign shift 38
63 methodinvoke shift 180
103 arrayaccess shift 29
89 expr shift 198
197 DOT reduce 38
