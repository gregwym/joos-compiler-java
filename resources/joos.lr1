66
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
75
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
constructordecl
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclr
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
127
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interface
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methoddeclr ID LPAREN params RPAREN
methodhead modifiers type methoddeclr
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype arraytype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
185
1223
44 CHAR reduce 102
175 DOT shift 1
12 LBRACE shift 2
163 PROTECTED reduce 45
120 CHAR reduce 29
28 ELSE reduce 31
48 condexpr shift 3
85 SHORT reduce 97
138 STATIC reduce 44
149 assignexpr shift 4
156 BYTE reduce 68
4 COMMA reduce 32
91 super shift 5
4 SEMI reduce 32
68 ABSTRACT shift 6
6 STATIC reduce 67
56 RBRACE reduce 18
168 BYTE shift 7
31 SHORT reduce 101
180 primnoarray shift 8
116 BYTE reduce 65
54 PROTECTED reduce 59
180 name shift 9
2 SEMI reduce 13
168 INT shift 10
164 INT reduce 56
155 COMMA reduce 5
66 CHAR reduce 69
182 PUBLIC reduce 79
150 RBRACE reduce 99
2 blockstmnts shift 11
24 NATIVE reduce 81
74 FINAL reduce 16
46 SHORT reduce 20
106 BOOLEAN reduce 66
134 RPAREN shift 12
78 retstmnt shift 13
145 block shift 14
28 BYTE reduce 31
115 name shift 15
172 COMMA reduce 33
71 ABSTRACT reduce 35
174 EOF reduce 21
131 block shift 16
80 LBRACE reduce 126
66 SHORT reduce 69
97 COMMA reduce 120
56 CHAR reduce 18
180 forupdate shift 17
30 localvardecl shift 18
103 SEMI reduce 43
113 type shift 19
92 BOOLEAN reduce 40
57 BOOLEAN reduce 109
98 CHAR reduce 71
37 SHORT shift 20
165 name shift 15
91 EXTENDS shift 21
160 RBRACE shift 22
125 BOOLEAN reduce 17
108 FINAL reduce 42
80 WHILE reduce 126
166 RBRACK reduce 6
156 CLASS reduce 68
77 DOT reduce 95
11 exprstmnt shift 23
166 RBRACE reduce 6
24 INTERFACE reduce 81
169 COMMA reduce 84
88 EOF reduce 98
74 CHAR reduce 16
71 CHAR reduce 35
127 SHORT reduce 58
114 IMPORT reduce 80
61 SEMI shift 24
139 PROTECTED reduce 30
48 qualifiedname shift 25
123 COMMA reduce 123
74 BOOLEAN reduce 16
98 CLASS reduce 71
180 fieldaccess shift 26
180 methodinvoke shift 27
12 SEMI shift 28
127 BOOLEAN reduce 58
181 INT reduce 11
112 qualifiedname shift 25
76 BYTE reduce 96
69 ID reduce 87
76 ELSE reduce 96
76 SEMI reduce 96
118 variabledeclid shift 29
158 RBRACE reduce 106
40 LBRACE shift 30
160 CHAR reduce 70
78 ifthenelse shift 31
91 LBRACE reduce 22
139 SHORT reduce 30
155 expr shift 32
113 CHAR shift 33
48 name shift 15
13 WHILE reduce 111
131 LBRACE shift 2
149 assign shift 34
81 lefthand shift 35
45 CLASS reduce 70
114 CLASS reduce 80
180 lefthand shift 35
145 LBRACE shift 2
159 BOOLEAN reduce 37
66 BYTE reduce 69
144 methodinvoke shift 27
135 RPAREN shift 36
45 STATIC reduce 70
41 BECOME reduce 120
154 FINAL reduce 19
105 ID reduce 89
97 LPAREN shift 37
136 arrayaccess shift 38
128 fieldaccess shift 39
115 assignexpr shift 4
79 BECOME reduce 34
138 IMPORT reduce 44
131 FOR shift 40
11 FOR shift 40
71 STATIC reduce 35
31 BOOLEAN reduce 101
118 ID shift 41
103 FINAL reduce 43
30 INT shift 10
6 INT reduce 67
128 expr shift 42
112 fieldaccess shift 39
156 PROTECTED reduce 68
92 RETURN reduce 40
115 ID shift 43
13 FOR reduce 111
16 IF reduce 108
28 IF reduce 31
126 while shift 44
155 assignexpr shift 4
108 importdecls shift 45
25 SEMI reduce 73
119 ABSTRACT reduce 64
152 SEMI reduce 61
160 classbodydecl shift 46
57 ELSE reduce 109
99 EOF shift 47
108 PROTECTED reduce 42
25 DOT reduce 73
63 LPAREN shift 48
37 type shift 49
160 PUBLIC reduce 70
79 name shift 15
144 DOT reduce 34
2 SHORT reduce 13
128 assignexpr shift 4
131 exprstmnt shift 23
42 COMMA reduce 2
103 NATIVE reduce 43
11 primitivetype shift 50
85 LBRACE reduce 97
170 BOOLEAN reduce 41
131 SEMI shift 28
31 BYTE reduce 101
31 RBRACE reduce 101
156 SHORT reduce 68
80 BYTE reduce 126
132 RETURN reduce 12
141 FOR reduce 14
45 PROTECTED reduce 70
133 RPAREN shift 51
14 RBRACE reduce 57
173 COMMA shift 52
165 simplename shift 53
106 INT reduce 66
141 SEMI reduce 14
145 methodbody shift 54
165 lefthand shift 35
29 LBRACK shift 55
81 qualifiedname shift 25
154 RBRACE reduce 19
160 constructordecl shift 56
139 FINAL reduce 30
115 condexpr shift 3
181 SHORT reduce 11
106 PUBLIC reduce 66
120 RBRACE reduce 29
164 CHAR reduce 56
78 emptystmnt shift 57
5 interfaces shift 58
5 IMPLEMENTS shift 59
159 LBRACE reduce 37
114 NATIVE reduce 80
30 arraytype shift 60
28 FOR reduce 31
6 SHORT reduce 67
160 BOOLEAN reduce 70
136 condexpr shift 3
116 ABSTRACT reduce 65
116 BOOLEAN reduce 65
183 RPAREN reduce 82
141 LBRACE reduce 14
165 BECOME reduce 34
14 STATIC reduce 57
147 name shift 61
155 arrayaccess shift 38
16 INT reduce 108
114 ABSTRACT reduce 80
85 ELSE reduce 97
79 assign shift 34
127 BYTE reduce 58
150 RETURN reduce 99
65 DOT shift 62
78 WHILE shift 63
155 BECOME reduce 34
161 WHILE reduce 10
78 stmntnotrail shift 64
80 RBRACE reduce 126
144 primary shift 65
113 NATIVE shift 66
136 qualifiedname shift 25
180 arraycreate shift 67
23 BOOLEAN reduce 110
162 INT reduce 100
45 modifiers shift 68
37 numerictype shift 69
170 BYTE reduce 41
79 fieldaccess shift 39
87 RBRACE shift 70
136 BECOME reduce 34
161 IF reduce 10
89 ID reduce 9
83 SEMI shift 71
45 SEMI shift 72
149 arrayaccess shift 38
144 arrayaccess shift 73
160 classmemberdecl shift 74
160 STATIC reduce 70
162 SEMI reduce 100
155 variableinit shift 75
149 SEMI shift 76
175 LBRACE reduce 28
106 CHAR reduce 66
98 PUBLIC reduce 71
132 FOR reduce 12
31 IF reduce 101
46 FINAL reduce 20
137 ID shift 77
149 simplename shift 53
132 BOOLEAN reduce 12
168 primitivetype shift 50
139 RBRACE reduce 30
88 STATIC reduce 98
94 FOR reduce 103
127 CHAR reduce 58
182 SEMI reduce 79
57 CHAR reduce 109
150 INT reduce 99
112 lefthand shift 35
122 RPAREN shift 78
45 FINAL reduce 70
53 LPAREN reduce 72
76 CHAR reduce 96
115 lefthand shift 35
148 SEMI shift 79
161 ABSTRACT reduce 10
11 emptystmnt shift 57
12 stmnt shift 80
113 primitivetype shift 50
115 qualifiedname shift 25
165 assignexpr shift 4
162 BYTE reduce 100
54 FINAL reduce 59
103 STATIC reduce 43
37 CHAR shift 33
111 RPAREN reduce 3
139 STATIC reduce 30
54 RBRACE reduce 59
132 CHAR reduce 12
125 RBRACE reduce 17
129 assign shift 34
11 retstmnt shift 13
159 BYTE reduce 37
46 NATIVE reduce 20
180 LPAREN shift 81
6 BOOLEAN reduce 67
9 BECOME reduce 47
113 ABSTRACT shift 6
48 ID shift 43
31 SEMI reduce 101
176 RBRACK shift 82
129 condexpr shift 3
46 BYTE reduce 20
54 ABSTRACT reduce 59
74 BYTE reduce 16
59 ID shift 43
180 BECOME reduce 34
114 EOF reduce 80
103 ABSTRACT reduce 43
57 IF reduce 109
127 STATIC reduce 58
116 CLASS reduce 65
127 NATIVE reduce 58
34 RPAREN reduce 8
24 PROTECTED reduce 81
74 PUBLIC reduce 16
45 PUBLIC reduce 70
162 RETURN reduce 100
19 variabledecls shift 83
159 FOR reduce 37
59 interface shift 84
112 name shift 15
80 CHAR reduce 126
146 SEMI shift 85
108 SEMI reduce 42
37 param shift 86
23 FOR reduce 110
95 LBRACE shift 87
52 variabledeclid shift 29
46 CHAR reduce 20
71 RBRACE reduce 35
159 SEMI reduce 37
178 SEMI shift 88
57 RETURN reduce 109
128 BECOME reduce 34
35 BECOME shift 89
30 referencetype shift 90
30 primitivetype shift 50
108 CLASS reduce 42
117 ID shift 91
78 stmnt shift 92
150 SEMI reduce 99
94 BYTE reduce 103
88 PROTECTED reduce 98
77 SEMI reduce 95
56 STATIC reduce 18
128 arglist shift 93
88 IMPORT reduce 98
126 for shift 94
113 arraytype shift 60
119 BYTE reduce 64
156 ABSTRACT reduce 68
160 ABSTRACT reduce 70
92 WHILE reduce 40
171 extendsinterfaces shift 95
24 CLASS reduce 81
56 PUBLIC reduce 18
2 FOR reduce 13
79 expr shift 96
2 BOOLEAN reduce 13
139 ABSTRACT reduce 30
161 FINAL reduce 10
23 WHILE reduce 110
13 CHAR reduce 111
92 SHORT reduce 40
126 LBRACE shift 2
19 ID shift 97
128 COMMA reduce 1
53 DOT reduce 72
116 PROTECTED reduce 65
164 LBRACE reduce 56
166 COMMA reduce 6
12 exprstmnt shift 23
45 ABSTRACT reduce 70
94 SEMI reduce 103
64 CHAR reduce 99
24 ABSTRACT reduce 81
41 COMMA reduce 120
103 CLASS reduce 43
113 modifier shift 98
114 file shift 99
42 RPAREN reduce 2
45 interfacedecl shift 100
41 RPAREN reduce 120
137 STAR shift 101
16 BOOLEAN reduce 108
78 for shift 94
170 RBRACE reduce 41
37 primitivetype shift 50
160 PROTECTED reduce 70
92 RBRACE reduce 40
48 BECOME reduce 34
79 lefthand shift 35
119 PROTECTED reduce 64
79 assignexpr shift 4
155 arrayinit shift 102
170 SEMI reduce 41
182 EOF reduce 79
78 exprstmnt shift 23
161 INT reduce 10
56 PROTECTED reduce 18
127 PUBLIC reduce 58
154 SHORT reduce 19
2 LBRACE reduce 13
64 FOR reduce 99
45 importdecl shift 103
119 FINAL reduce 64
144 assign shift 104
85 BOOLEAN reduce 97
156 FINAL reduce 68
24 EOF reduce 81
94 RBRACE reduce 103
125 FINAL reduce 17
150 IF reduce 99
37 BOOLEAN shift 105
41 SEMI reduce 120
155 condexpr shift 3
125 SHORT reduce 17
149 fieldaccess shift 39
27 RBRACE reduce 105
77 LBRACK reduce 95
150 BOOLEAN reduce 99
30 BOOLEAN shift 105
106 CLASS reduce 66
120 INT reduce 29
155 fieldaccess shift 39
82 DOT reduce 4
44 INT reduce 102
77 LBRACE reduce 95
68 STATIC shift 106
81 expr shift 107
2 WHILE reduce 13
38 BECOME reduce 49
114 packagedecl shift 108
165 condexpr shift 3
180 stmntexprlst shift 109
36 COMMA reduce 63
66 INT reduce 69
64 RBRACE reduce 99
45 IMPORT shift 110
91 IMPLEMENTS reduce 22
128 assign shift 34
71 PUBLIC reduce 35
57 RBRACE reduce 109
136 expr shift 111
71 PROTECTED reduce 35
141 IF reduce 14
56 FINAL reduce 18
150 SHORT reduce 99
54 CHAR reduce 59
64 RETURN reduce 99
154 PROTECTED reduce 19
127 INT reduce 58
181 RETURN reduce 11
86 COMMA reduce 83
149 name shift 15
97 BECOME reduce 120
28 BOOLEAN reduce 31
161 BYTE reduce 10
164 WHILE reduce 56
23 IF reduce 110
177 RBRACE reduce 107
35 assignop shift 112
129 lefthand shift 35
170 INT reduce 41
160 modifiers shift 113
131 while shift 44
183 LBRACK shift 55
163 INTERFACE reduce 45
81 arrayaccess shift 38
139 BYTE reduce 30
28 SHORT reduce 31
179 DOT reduce 62
182 ABSTRACT reduce 79
114 PROTECTED reduce 80
0 BOF shift 114
116 CHAR reduce 65
141 BYTE reduce 14
151 LPAREN shift 115
83 COMMA shift 52
116 INT reduce 65
43 BECOME reduce 74
12 for shift 94
161 RBRACE reduce 10
28 INT reduce 31
80 INT reduce 126
119 INTERFACE reduce 64
113 INT shift 10
111 COMMA reduce 3
154 PUBLIC reduce 19
136 assignexpr shift 4
68 PROTECTED shift 116
80 SEMI reduce 126
54 STATIC reduce 59
11 SHORT shift 20
103 EOF reduce 43
108 STATIC reduce 42
49 ID shift 41
147 simplename shift 53
132 INT reduce 12
126 retstmnt shift 13
139 PUBLIC reduce 30
98 STATIC reduce 71
182 NATIVE reduce 79
11 WHILE shift 63
23 SHORT reduce 110
80 RETURN reduce 126
44 SHORT reduce 102
128 ID shift 43
127 ABSTRACT reduce 58
81 assign shift 34
13 BYTE reduce 111
106 NATIVE reduce 66
76 FOR reduce 96
139 INT reduce 30
68 CLASS shift 117
41 LBRACK reduce 120
3 SEMI reduce 7
64 IF reduce 99
108 ABSTRACT reduce 42
161 FOR reduce 10
30 type shift 118
113 PUBLIC shift 119
71 NATIVE reduce 35
160 fielddecl shift 120
81 ID shift 43
21 ID shift 43
156 CHAR reduce 68
19 variabledecl shift 121
3 COMMA reduce 7
66 BOOLEAN reduce 69
92 FOR reduce 40
24 IMPORT reduce 81
48 assignexpr shift 4
182 PROTECTED reduce 79
115 expr shift 122
182 INTERFACE reduce 79
56 BYTE reduce 18
23 ELSE reduce 110
48 fieldaccess shift 39
184 BECOME reduce 121
180 simplename shift 53
46 RBRACE reduce 20
31 INT reduce 101
88 CLASS reduce 98
7 ID reduce 75
110 qualifiedname shift 25
106 FINAL reduce 66
88 FINAL reduce 98
168 CHAR shift 33
11 arraytype shift 60
132 SEMI reduce 12
46 INT reduce 20
138 ABSTRACT reduce 44
6 NATIVE reduce 67
52 variabledecl shift 123
161 ELSE reduce 10
136 ID shift 43
57 BYTE reduce 109
13 LBRACE reduce 111
129 ID shift 43
132 WHILE reduce 12
107 RPAREN shift 124
28 LBRACE reduce 31
132 RBRACE reduce 12
141 WHILE reduce 14
160 staticinit shift 125
79 simplename shift 53
19 variabledeclid shift 29
51 LBRACE reduce 60
153 LBRACE reduce 23
64 ELSE shift 126
106 ABSTRACT reduce 66
129 name shift 15
6 FINAL reduce 67
79 ID shift 43
145 SEMI shift 127
31 WHILE reduce 101
141 SHORT reduce 14
141 RETURN reduce 14
180 DOT reduce 34
9 LPAREN shift 128
116 STATIC reduce 65
119 PUBLIC reduce 64
74 ABSTRACT reduce 16
15 LBRACK shift 129
57 INT reduce 109
48 arrayaccess shift 38
62 ID shift 130
17 RBRACE shift 131
98 PROTECTED reduce 71
159 CHAR reduce 37
88 INTERFACE reduce 98
11 stmnt shift 132
37 params shift 133
129 BECOME reduce 34
64 BYTE reduce 99
48 expr shift 134
128 simplename shift 53
170 IF reduce 41
173 SEMI reduce 55
113 STATIC shift 106
29 SEMI reduce 118
45 INTERFACE reduce 70
120 PUBLIC reduce 29
119 NATIVE reduce 64
165 assign shift 34
94 LBRACE reduce 103
85 SEMI reduce 97
165 arglist shift 135
6 PROTECTED reduce 67
64 SEMI reduce 99
162 FOR reduce 100
66 ABSTRACT reduce 69
135 COMMA shift 136
182 STATIC reduce 79
85 CHAR reduce 97
163 SEMI reduce 45
54 BOOLEAN reduce 59
78 while shift 44
76 INT reduce 96
78 LBRACE shift 2
46 PUBLIC reduce 20
178 DOT shift 137
131 emptystmnt shift 57
26 BECOME reduce 48
16 FOR reduce 108
94 IF reduce 103
31 CHAR reduce 101
116 SHORT reduce 65
81 condexpr shift 3
125 PUBLIC reduce 17
84 LBRACE reduce 25
57 WHILE reduce 109
13 SEMI reduce 111
170 RETURN reduce 41
32 SEMI reduce 124
103 INTERFACE reduce 43
121 SEMI reduce 122
161 SHORT reduce 10
165 fieldaccess shift 39
165 expr shift 42
154 INT reduce 19
15 BECOME reduce 47
181 BOOLEAN reduce 11
30 SHORT shift 20
11 CHAR shift 33
13 BOOLEAN reduce 111
45 singletypeimport shift 138
106 INTERFACE reduce 66
6 CHAR reduce 67
66 CLASS reduce 69
6 BYTE reduce 67
92 INT reduce 40
56 BOOLEAN reduce 18
184 COMMA reduce 121
14 PUBLIC reduce 57
138 CLASS reduce 44
160 methoddecl shift 139
161 NATIVE reduce 10
162 IF reduce 100
11 localvardecl shift 140
98 NATIVE reduce 71
46 PROTECTED reduce 20
75 COMMA reduce 119
181 IF reduce 11
76 SHORT reduce 96
31 FOR reduce 101
92 SEMI reduce 40
23 CHAR reduce 110
16 WHILE reduce 108
94 INT reduce 103
5 LBRACE reduce 24
116 FINAL reduce 65
74 PROTECTED reduce 16
88 NATIVE reduce 98
112 simplename shift 53
11 blockstmnt shift 141
68 NATIVE shift 66
30 numerictype shift 69
168 numerictype shift 69
162 RBRACE reduce 100
128 RPAREN reduce 1
125 BYTE reduce 17
180 THIS shift 142
163 NATIVE reduce 45
104 COMMA reduce 104
2 RETURN reduce 13
68 INTERFACE shift 143
20 ID reduce 76
160 NATIVE reduce 70
156 STATIC reduce 68
165 qualifiedname shift 25
106 PROTECTED reduce 66
92 IF reduce 40
113 SHORT shift 20
14 ABSTRACT reduce 57
144 qualifiedname shift 25
77 BECOME reduce 95
181 WHILE reduce 11
181 BYTE reduce 11
28 WHILE reduce 31
106 SHORT reduce 66
109 COMMA shift 144
155 lefthand shift 35
165 COMMA reduce 1
181 RBRACE reduce 11
110 ID shift 43
126 WHILE shift 63
12 ifthenelse shift 31
167 EOF reduce 36
68 PUBLIC shift 119
138 INTERFACE reduce 44
180 qualifiedname shift 25
154 BYTE reduce 19
162 LBRACE reduce 100
158 COMMA reduce 106
74 STATIC reduce 16
54 BYTE reduce 59
25 LPAREN reduce 73
114 STATIC reduce 80
150 BYTE reduce 99
110 simplename shift 53
12 WHILE shift 63
78 block shift 16
180 arrayaccess shift 73
52 ID shift 41
118 variabledecl shift 121
160 methodhead shift 145
155 qualifiedname shift 25
74 NATIVE reduce 16
127 PROTECTED reduce 58
149 expr shift 146
169 RPAREN reduce 84
120 STATIC reduce 29
53 LBRACE reduce 72
22 EOF reduce 15
53 LBRACK reduce 72
44 WHILE reduce 102
159 SHORT reduce 37
13 INT reduce 111
119 STATIC reduce 64
112 assign shift 34
156 INT reduce 68
36 RBRACE reduce 63
56 NATIVE reduce 18
81 assignexpr shift 4
182 CLASS reduce 79
25 BECOME reduce 73
168 arraytype shift 60
88 ABSTRACT reduce 98
15 DOT shift 1
172 RBRACE reduce 33
114 PACKAGE shift 147
128 condexpr shift 3
144 LPAREN shift 81
44 FOR reduce 102
16 BYTE reduce 108
73 DOT reduce 94
125 CHAR reduce 17
43 SEMI reduce 74
44 IF reduce 102
100 EOF reduce 116
97 LBRACK reduce 120
30 forinit shift 148
166 RPAREN reduce 6
119 INT reduce 64
10 ID reduce 77
76 BOOLEAN reduce 96
27 DOT reduce 93
108 IMPORT reduce 42
37 arraytype shift 60
138 PROTECTED reduce 44
6 INTERFACE reduce 67
121 COMMA reduce 122
14 BYTE reduce 57
2 RBRACE reduce 13
12 RETURN shift 149
11 stmntnotrail shift 150
139 CHAR reduce 30
94 RETURN reduce 103
113 BOOLEAN shift 105
80 IF reduce 126
11 BOOLEAN shift 105
14 FINAL reduce 57
126 IF shift 151
144 THIS shift 142
68 modifier shift 98
19 methoddeclr shift 152
129 qualifiedname shift 25
144 simplename shift 53
21 name shift 153
54 INT reduce 59
131 for shift 94
163 PUBLIC reduce 45
71 INT reduce 35
58 LBRACE shift 154
162 SHORT reduce 100
71 BOOLEAN reduce 35
54 PUBLIC reduce 59
9 DOT shift 1
85 IF reduce 97
144 name shift 9
128 qualifiedname shift 25
56 ABSTRACT reduce 18
24 FINAL reduce 81
71 FINAL reduce 35
154 CHAR reduce 19
39 BECOME reduce 48
34 RBRACE reduce 8
161 STATIC reduce 10
34 RBRACK reduce 8
131 ifthenelse shift 31
126 stmntnotrail shift 150
165 arrayaccess shift 38
45 NATIVE reduce 70
142 DOT reduce 90
129 arrayaccess shift 38
29 BECOME shift 155
154 NATIVE reduce 19
8 DOT reduce 85
21 qualifiedname shift 25
48 simplename shift 53
170 CHAR reduce 41
125 INT reduce 17
132 LBRACE reduce 12
51 SEMI reduce 60
156 INTERFACE reduce 68
3 RBRACE reduce 7
86 RPAREN reduce 83
112 ID shift 43
68 FINAL shift 156
11 SEMI shift 28
119 CHAR reduce 64
4 RBRACK reduce 32
12 IF shift 151
128 lefthand shift 35
184 RPAREN reduce 121
45 classdecl shift 157
80 BOOLEAN reduce 126
3 RBRACK reduce 7
103 PUBLIC reduce 43
59 qualifiedname shift 25
161 BOOLEAN reduce 10
120 SHORT reduce 29
80 SHORT reduce 126
92 LBRACE reduce 40
180 stmntexpr shift 158
81 fieldaccess shift 39
59 simplename shift 53
131 stmnt shift 159
115 simplename shift 53
164 RBRACE reduce 56
164 BYTE reduce 56
119 BOOLEAN reduce 64
183 COMMA reduce 82
74 RBRACE reduce 16
144 arraycreate shift 67
27 COMMA reduce 105
170 LBRACE reduce 41
136 fieldaccess shift 39
163 FINAL reduce 45
119 CLASS reduce 64
144 primnoarray shift 8
156 NATIVE reduce 68
162 WHILE reduce 100
11 for shift 94
18 SEMI reduce 38
12 stmntnotrail shift 150
108 EOF reduce 42
180 primary shift 65
57 FOR reduce 109
43 LBRACK reduce 74
108 NATIVE reduce 42
180 ID shift 43
114 SEMI reduce 80
64 LBRACE reduce 99
43 LBRACE reduce 74
164 IF reduce 56
66 PROTECTED reduce 69
28 RETURN reduce 31
97 SEMI reduce 120
181 LBRACE reduce 11
70 EOF reduce 46
141 RBRACE reduce 14
44 LBRACE reduce 102
170 SHORT reduce 41
155 name shift 15
128 name shift 15
182 FINAL reduce 79
98 BYTE reduce 71
129 fieldaccess shift 39
113 PROTECTED shift 116
124 DOT reduce 91
154 classbodydecls shift 160
43 DOT reduce 74
92 CHAR reduce 40
155 simplename shift 53
154 STATIC reduce 19
16 LBRACE reduce 108
37 BYTE shift 7
184 LBRACK reduce 121
11 block shift 16
11 RETURN shift 149
32 COMMA reduce 124
125 NATIVE reduce 17
163 STATIC reduce 45
64 INT reduce 99
120 BOOLEAN reduce 29
160 INT reduce 70
23 RBRACE reduce 110
57 SEMI reduce 109
147 ID shift 43
23 RETURN reduce 110
115 assign shift 34
73 BECOME reduce 49
126 exprstmnt shift 23
115 fieldaccess shift 39
180 assign shift 104
2 IF reduce 13
33 ID reduce 78
12 block shift 16
44 RETURN reduce 102
155 assign shift 34
12 while shift 44
78 IF shift 151
126 FOR shift 40
125 STATIC reduce 17
138 NATIVE reduce 44
23 SEMI reduce 110
14 PROTECTED reduce 57
155 SEMI reduce 5
11 RBRACE shift 161
159 RETURN reduce 37
161 PUBLIC reduce 10
112 condexpr shift 3
30 CHAR shift 33
131 ifthen shift 162
76 RBRACE reduce 96
116 PUBLIC reduce 65
45 ondemandimport shift 163
129 simplename shift 53
132 BYTE reduce 12
93 COMMA shift 136
154 BOOLEAN reduce 19
140 SEMI shift 164
14 BOOLEAN reduce 57
149 BECOME reduce 34
114 INTERFACE reduce 80
85 RETURN reduce 97
120 PROTECTED reduce 29
64 WHILE reduce 99
182 IMPORT reduce 79
141 BOOLEAN reduce 14
12 FOR shift 40
34 SEMI reduce 8
85 FOR reduce 97
36 DOT reduce 63
67 DOT reduce 86
43 LPAREN reduce 74
79 qualifiedname shift 25
153 IMPLEMENTS reduce 23
81 simplename shift 53
23 BYTE reduce 110
159 WHILE reduce 37
34 COMMA reduce 8
98 BOOLEAN reduce 71
128 arrayaccess shift 38
11 while shift 44
130 LPAREN shift 165
76 RETURN reduce 96
163 IMPORT reduce 45
179 COMMA reduce 62
161 LBRACE reduce 10
112 assignexpr shift 166
28 RBRACE reduce 31
57 SHORT reduce 109
28 CHAR reduce 31
76 IF reduce 96
131 retstmnt shift 13
114 FINAL reduce 80
102 SEMI reduce 125
150 WHILE reduce 99
53 SEMI reduce 72
13 RETURN reduce 111
106 BYTE reduce 66
12 emptystmnt shift 57
152 LBRACE reduce 61
92 BYTE reduce 40
120 FINAL reduce 29
16 RETURN reduce 108
181 FOR reduce 11
6 CLASS reduce 67
126 block shift 16
4 RPAREN reduce 32
144 lefthand shift 35
153 DOT shift 1
85 BYTE reduce 97
25 LBRACE reduce 73
14 INT reduce 57
21 simplename shift 53
164 SEMI reduce 56
120 BYTE reduce 29
77 IMPLEMENTS reduce 95
164 BOOLEAN reduce 56
168 type shift 49
163 EOF reduce 45
31 LBRACE reduce 101
50 ID reduce 112
11 ifthenelse shift 31
78 SEMI shift 28
89 BECOME reduce 9
61 DOT shift 1
12 retstmnt shift 13
168 SHORT shift 20
112 BECOME reduce 34
98 INT reduce 71
154 ABSTRACT reduce 19
168 referencetype shift 90
126 ifthenelse shift 31
149 qualifiedname shift 25
45 typedecl shift 167
43 IMPLEMENTS reduce 74
75 SEMI reduce 119
98 ABSTRACT reduce 71
108 INTERFACE reduce 42
74 SHORT reduce 16
127 RBRACE reduce 58
109 RBRACE reduce 39
126 emptystmnt shift 57
131 stmntnotrail shift 150
132 IF reduce 12
31 RETURN reduce 101
16 SEMI reduce 108
13 SHORT reduce 111
64 SHORT reduce 99
123 SEMI reduce 123
131 WHILE shift 63
11 INT shift 10
138 FINAL reduce 44
163 CLASS reduce 45
149 condexpr shift 3
133 COMMA shift 168
104 RBRACE reduce 104
116 NATIVE reduce 65
168 param shift 169
44 BYTE reduce 102
126 stmnt shift 170
13 IF reduce 111
141 INT reduce 14
9 LBRACK shift 129
143 ID shift 171
180 SEMI shift 172
13 RBRACE reduce 111
179 RBRACE reduce 62
85 INT reduce 97
118 variabledecls shift 173
37 referencetype shift 90
157 EOF reduce 115
56 INT reduce 18
161 SEMI reduce 10
78 RETURN shift 149
11 LBRACE shift 2
79 condexpr shift 3
144 SEMI shift 172
116 INTERFACE reduce 65
25 LBRACK reduce 73
2 BYTE reduce 13
156 PUBLIC reduce 68
81 name shift 15
58 classbody shift 174
115 arrayaccess shift 38
170 WHILE reduce 41
164 FOR reduce 56
80 FOR reduce 126
132 SHORT reduce 12
59 name shift 175
136 simplename shift 53
113 numerictype shift 69
161 PROTECTED reduce 10
138 EOF reduce 44
139 BOOLEAN reduce 30
14 CHAR reduce 57
160 FINAL reduce 70
94 SHORT reduce 103
102 COMMA reduce 125
2 CHAR reduce 13
170 FOR reduce 41
126 SEMI shift 28
181 CHAR reduce 11
165 ID shift 43
11 referencetype shift 90
23 INT reduce 110
136 assign shift 34
184 SEMI reduce 121
129 expr shift 176
90 ID reduce 113
46 ABSTRACT reduce 20
162 CHAR reduce 100
144 ID shift 43
136 name shift 15
66 NATIVE reduce 69
3 RPAREN reduce 7
77 LPAREN reduce 95
54 NATIVE reduce 59
82 BECOME reduce 4
144 stmntexpr shift 177
79 arrayaccess shift 38
110 name shift 178
166 SEMI reduce 6
24 SEMI reduce 81
98 INTERFACE reduce 71
11 numerictype shift 69
138 SEMI reduce 44
144 fieldaccess shift 26
113 referencetype shift 90
74 INT reduce 16
103 PROTECTED reduce 43
98 SHORT reduce 71
138 PUBLIC reduce 44
76 WHILE reduce 96
53 IMPLEMENTS reduce 72
46 BOOLEAN reduce 20
160 SHORT reduce 70
94 WHILE reduce 103
56 SHORT reduce 18
66 INTERFACE reduce 69
54 SHORT reduce 59
11 BYTE shift 7
44 BOOLEAN reduce 102
37 INT shift 10
16 SHORT reduce 108
88 PUBLIC reduce 98
177 COMMA reduce 107
108 PUBLIC reduce 42
150 CHAR reduce 99
6 PUBLIC reduce 67
76 LBRACE reduce 96
164 SHORT reduce 56
94 CHAR reduce 103
94 BOOLEAN reduce 103
141 CHAR reduce 14
115 BECOME reduce 34
155 ID shift 43
30 BYTE shift 7
81 BECOME reduce 34
160 BYTE reduce 70
106 STATIC reduce 66
139 NATIVE reduce 30
113 BYTE shift 7
120 ABSTRACT reduce 29
11 type shift 118
93 RPAREN shift 179
156 BOOLEAN reduce 68
149 lefthand shift 35
66 PUBLIC reduce 69
29 COMMA reduce 118
96 SEMI shift 180
11 IF shift 151
181 SEMI reduce 11
44 RBRACE reduce 102
44 SEMI reduce 102
57 LBRACE reduce 109
149 ID shift 43
159 INT reduce 37
119 SHORT reduce 64
120 NATIVE reduce 29
23 LBRACE reduce 110
161 RETURN reduce 10
127 FINAL reduce 58
126 ifthen shift 162
78 ifthen shift 162
14 SHORT reduce 57
85 RBRACE reduce 97
161 CHAR reduce 10
147 qualifiedname shift 25
150 FOR reduce 99
112 arrayaccess shift 38
144 BECOME reduce 34
16 ELSE reduce 108
25 IMPLEMENTS reduce 73
48 lefthand shift 35
165 RPAREN reduce 1
129 assignexpr shift 4
11 localvardeclstmnt shift 181
66 STATIC reduce 69
64 BOOLEAN reduce 99
2 INT reduce 13
126 RETURN shift 149
163 ABSTRACT reduce 45
16 RBRACE reduce 108
71 SHORT reduce 35
12 ifthen shift 162
11 ifthen shift 162
28 SEMI reduce 31
24 PUBLIC reduce 81
1 ID shift 77
114 PUBLIC reduce 80
113 FINAL shift 156
101 SEMI shift 182
46 STATIC reduce 20
98 FINAL reduce 71
26 DOT reduce 92
125 PROTECTED reduce 17
47 ABSTRACT reduce 0
49 variabledeclid shift 183
13 ELSE reduce 111
24 STATIC reduce 81
88 SEMI reduce 98
131 RETURN shift 149
72 EOF reduce 117
131 IF shift 151
60 ID reduce 88
16 CHAR reduce 108
6 ABSTRACT reduce 67
136 lefthand shift 35
53 BECOME reduce 72
150 LBRACE reduce 99
164 RETURN reduce 56
78 FOR shift 40
55 RBRACK shift 184
103 IMPORT reduce 43
71 BYTE reduce 35
85 WHILE reduce 97
162 BOOLEAN reduce 100
125 ABSTRACT reduce 17
45 EOF reduce 114
14 NATIVE reduce 57
159 IF reduce 37
168 BOOLEAN shift 105
48 assign shift 34
159 RBRACE reduce 37
66 FINAL reduce 69
