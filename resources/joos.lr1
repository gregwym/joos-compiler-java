67
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
75
S
arglist
arrayaccess
arraycreate
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
constructordecl
constructordeclor
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledeclor
variabledeclid
variabledeclors
variableinit
while
S
132
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
constructordecl modifiers constructordeclor block
constructordeclor simplename LPAREN params RPAREN
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interface
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledeclors SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledeclors
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledeclor variabledeclid
variabledeclor variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledeclors variabledeclor
variabledeclors variabledeclors COMMA variabledeclor
variableinit expr
while WHILE LPAREN expr RPAREN stmnt
198
1368
135 IMPORT reduce 104
176 RETURN reduce 43
140 VOID reduce 72
46 lefthand shift 1
175 SHORT shift 2
194 RETURN reduce 102
5 LBRACK reduce 93
174 PROTECTED shift 3
153 FOR reduce 12
6 BYTE reduce 115
3 PUBLIC reduce 69
188 RBRACE reduce 13
135 PUBLIC reduce 104
194 INT reduce 102
33 SEMI shift 4
14 IMPORT reduce 85
67 BOOLEAN shift 5
82 emptystmnt shift 6
88 RBRACE reduce 113
56 SEMI reduce 14
144 PROTECTED reduce 83
111 CHAR shift 7
137 condexpr shift 8
95 COMMA shift 9
108 BOOLEAN reduce 34
154 WHILE reduce 15
103 BECOME reduce 37
126 ID reduce 23
140 PUBLIC reduce 72
14 NATIVE reduce 85
150 NATIVE reduce 73
45 LBRACE reduce 27
87 name shift 10
100 qualifiedname shift 11
105 BOOLEAN reduce 11
6 CHAR reduce 115
192 DOT reduce 76
81 simplename shift 12
176 ID reduce 43
46 condexpr shift 8
85 IF reduce 40
14 PUBLIC reduce 85
97 BYTE reduce 17
82 qualifiedname shift 11
85 ID reduce 40
176 IF reduce 43
179 BOOLEAN reduce 62
139 fieldaccess shift 13
170 SEMI shift 14
162 lefthand shift 1
94 ID reduce 81
163 ifthen shift 15
169 FOR shift 16
193 VOID reduce 32
44 CHAR reduce 18
15 RETURN reduce 106
135 EOF reduce 104
158 COMMA reduce 87
63 DOT reduce 67
44 VOID reduce 18
66 SHORT reduce 59
137 simplename shift 12
194 BOOLEAN reduce 102
63 COMMA reduce 67
188 ID reduce 13
51 LBRACE shift 17
25 LBRACE reduce 63
188 IF reduce 13
108 LBRACE reduce 34
134 BECOME reduce 126
64 FINAL reduce 75
50 variabledeclor shift 18
78 RBRACK shift 19
161 CHAR reduce 103
35 RBRACE reduce 36
10 DOT shift 20
136 RPAREN reduce 127
82 CHAR shift 7
116 FINAL reduce 71
168 PUBLIC reduce 46
162 qualifiedname shift 11
152 interfacedecl shift 21
84 STATIC reduce 84
140 FINAL reduce 72
46 name shift 22
32 FOR reduce 107
174 PUBLIC shift 23
55 variabledeclors shift 24
79 BECOME reduce 52
38 condexpr shift 8
104 BECOME reduce 37
134 RPAREN reduce 126
165 LBRACE reduce 25
130 SEMI reduce 45
14 STATIC reduce 85
127 COMMA reduce 89
193 STATIC reduce 32
182 CHAR reduce 19
189 methoddeclor shift 25
82 IF shift 26
59 SEMI reduce 130
82 ID shift 27
165 IMPLEMENTS reduce 25
36 FOR reduce 116
27 BECOME reduce 78
189 variabledeclid shift 28
103 primary shift 29
11 SEMI reduce 77
137 expr shift 30
149 IMPLEMENTS reduce 99
116 ID reduce 71
48 name shift 31
27 LPAREN reduce 78
133 BECOME reduce 37
140 CLASS reduce 72
6 INT reduce 115
15 INT reduce 106
169 ifthenelse shift 32
66 LBRACE reduce 59
67 forinit shift 33
114 ABSTRACT reduce 47
197 SHORT reduce 21
67 ID shift 27
101 FOR reduce 114
67 BYTE shift 34
190 ID shift 27
9 SEMI shift 35
163 exprstmnt shift 36
75 BOOLEAN reduce 74
9 arrayaccess shift 37
197 PROTECTED reduce 21
22 LBRACK shift 38
50 variabledeclid shift 28
179 SHORT reduce 62
122 ABSTRACT reduce 33
129 FOR reduce 105
64 SHORT reduce 75
82 SHORT shift 2
163 while shift 39
135 ABSTRACT reduce 104
15 LBRACE reduce 106
153 LBRACE reduce 12
139 simplename shift 12
39 SHORT reduce 108
75 CHAR reduce 74
120 expr shift 40
36 SHORT reduce 116
176 BOOLEAN reduce 43
138 RETURN reduce 44
47 LBRACK shift 38
71 variabledeclid shift 41
81 name shift 42
109 stmnt shift 43
77 LBRACK reduce 92
179 STATIC reduce 62
32 CHAR reduce 107
75 staticinit shift 44
165 super shift 45
41 RPAREN reduce 86
89 LPAREN shift 46
9 DOT reduce 37
76 simplename shift 12
3 INT reduce 69
140 ABSTRACT reduce 72
144 PUBLIC reduce 83
9 name shift 47
144 STATIC reduce 83
152 IMPORT shift 48
28 LBRACK shift 49
163 IF shift 26
46 simplename shift 12
159 SEMI reduce 117
24 COMMA shift 50
133 ID shift 27
161 FOR reduce 103
105 NATIVE reduce 11
13 BECOME reduce 51
109 while shift 39
45 interfaces shift 51
82 arraytype shift 52
163 stmntnotrail shift 53
141 PROTECTED reduce 61
56 CHAR reduce 14
133 name shift 22
109 ifthenelse shift 32
114 SEMI reduce 47
141 BOOLEAN reduce 61
97 RBRACE reduce 17
14 EOF reduce 85
169 ifthen shift 15
93 PROTECTED reduce 48
75 ID reduce 74
108 CHAR reduce 34
39 RBRACE reduce 108
93 NATIVE reduce 48
168 EOF reduce 46
17 INT reduce 20
137 RPAREN reduce 1
75 INT reduce 74
84 NATIVE reduce 84
189 ID shift 54
133 condexpr shift 8
159 CHAR reduce 117
53 RBRACE reduce 105
11 LPAREN reduce 77
82 type shift 55
169 LBRACE shift 56
185 VOID reduce 38
15 RBRACE reduce 106
75 methodhead shift 57
42 DOT shift 20
108 FOR reduce 34
46 BECOME reduce 37
3 ID reduce 69
139 BECOME reduce 37
15 CHAR reduce 106
153 RBRACE reduce 12
167 RPAREN shift 58
116 SHORT reduce 71
100 expr shift 59
84 SEMI reduce 84
103 name shift 47
32 RBRACE reduce 107
12 IMPLEMENTS reduce 76
46 ID shift 27
150 PROTECTED reduce 73
138 BOOLEAN reduce 44
176 INT reduce 43
75 BYTE reduce 74
61 BECOME reduce 51
138 RBRACE reduce 44
107 RBRACE reduce 109
137 COMMA reduce 1
129 BYTE reduce 105
125 ABSTRACT reduce 60
125 ID reduce 60
64 VOID reduce 75
136 COMMA reduce 127
38 qualifiedname shift 11
44 INT reduce 18
6 RBRACE reduce 115
80 RPAREN shift 60
190 qualifiedname shift 11
125 BOOLEAN reduce 60
163 LBRACE shift 56
168 SEMI reduce 46
103 fieldaccess shift 61
4 assignexpr shift 62
154 FOR reduce 15
27 DOT reduce 78
130 CLASS reduce 45
105 BYTE reduce 11
6 IF reduce 115
56 BYTE reduce 14
6 ID reduce 115
138 LBRACE reduce 44
64 CHAR reduce 75
108 INT reduce 34
152 FINAL reduce 74
85 SEMI reduce 40
130 STATIC reduce 45
66 FOR reduce 59
75 NATIVE reduce 74
157 RPAREN shift 63
174 modifier shift 64
84 FINAL reduce 84
197 STATIC reduce 21
125 NATIVE reduce 60
182 INT reduce 19
9 simplename shift 12
9 THIS shift 65
92 SEMI shift 66
182 VOID reduce 19
135 SEMI reduce 104
162 condexpr shift 8
16 LBRACE shift 67
153 RETURN reduce 12
161 INT reduce 103
28 COMMA reduce 124
193 NATIVE reduce 32
8 RBRACE reduce 8
73 LBRACK shift 68
154 ID reduce 15
136 BECOME reduce 127
43 SEMI reduce 131
85 INT reduce 40
41 COMMA reduce 86
154 IF reduce 15
8 RBRACK reduce 8
39 RETURN reduce 108
152 CLASS reduce 74
175 BOOLEAN shift 5
153 SHORT reduce 12
161 BYTE reduce 103
88 COMMA reduce 113
86 DOT reduce 95
105 LBRACE reduce 11
97 CHAR reduce 17
159 ELSE reduce 117
122 CHAR reduce 33
114 IMPORT reduce 47
66 WHILE reduce 59
9 arraycreate shift 69
111 arraytype shift 52
75 RBRACE shift 70
4 ID shift 27
6 BOOLEAN reduce 115
133 qualifiedname shift 11
85 RETURN reduce 40
158 type shift 71
62 RPAREN reduce 35
193 CHAR reduce 32
105 PROTECTED reduce 11
96 SEMI reduce 9
185 BOOLEAN reduce 38
32 INT reduce 107
64 BYTE reduce 75
44 NATIVE reduce 18
141 ID reduce 61
158 RPAREN reduce 87
186 BECOME reduce 10
189 variabledeclor shift 72
44 STATIC reduce 18
134 LBRACK reduce 126
82 primitivetype shift 73
138 BYTE reduce 44
175 STATIC shift 74
17 classbodydecls shift 75
8 RPAREN reduce 8
74 STATIC reduce 70
138 INT reduce 44
150 INT reduce 73
39 BOOLEAN reduce 108
82 name shift 42
150 PUBLIC reduce 73
67 simplename shift 12
19 DOT reduce 4
109 LBRACE shift 56
23 SHORT reduce 68
87 simplename shift 12
74 PUBLIC reduce 70
3 INTERFACE reduce 69
188 RETURN reduce 13
165 EXTENDS shift 76
144 CLASS reduce 83
107 WHILE reduce 109
139 lefthand shift 1
141 STATIC reduce 61
136 SEMI reduce 127
137 BECOME reduce 37
32 SEMI reduce 107
111 RPAREN reduce 87
91 SEMI reduce 41
168 CLASS reduce 46
161 ELSE reduce 103
76 ID shift 27
97 ID reduce 17
4 name shift 22
193 INT reduce 32
81 numerictype shift 77
105 SEMI reduce 11
3 BOOLEAN reduce 69
38 expr shift 78
120 arrayaccess shift 79
161 RETURN reduce 103
101 LBRACE reduce 114
196 DOT shift 20
43 IF reduce 131
44 BOOLEAN reduce 18
100 BECOME reduce 37
194 BYTE reduce 102
153 ID reduce 12
108 IF reduce 34
139 expr shift 80
119 COMMA shift 81
161 RBRACE reduce 103
153 IF reduce 12
108 ID reduce 34
149 DOT reduce 99
178 COMMA shift 81
56 blockstmnts shift 82
140 SHORT reduce 72
93 INTERFACE reduce 48
140 BOOLEAN reduce 72
101 RETURN reduce 114
159 RETURN reduce 117
53 INT reduce 105
196 IMPLEMENTS reduce 26
179 PROTECTED reduce 62
55 variabledeclor shift 72
169 stmntnotrail shift 53
98 COMMA reduce 88
105 PUBLIC reduce 11
87 interface shift 83
101 BOOLEAN reduce 114
111 BOOLEAN shift 5
0 BOF shift 84
53 WHILE reduce 105
162 fieldaccess shift 13
125 VOID reduce 60
75 FINAL reduce 74
169 stmnt shift 85
104 fieldaccess shift 13
76 qualifiedname shift 11
122 PUBLIC reduce 33
107 RETURN reduce 109
144 ABSTRACT reduce 83
105 FINAL reduce 11
115 RPAREN shift 86
93 EOF reduce 48
82 exprstmnt shift 36
182 ABSTRACT reduce 19
45 IMPLEMENTS shift 87
67 arraytype shift 52
9 stmntexpr shift 88
184 fieldaccess shift 13
182 ID reduce 19
158 qualifiedname shift 11
125 CHAR reduce 60
197 INT reduce 21
193 BYTE reduce 32
141 VOID reduce 61
81 CHAR shift 7
111 SHORT shift 2
74 ABSTRACT reduce 70
149 BECOME reduce 99
163 emptystmnt shift 6
122 FINAL reduce 33
43 ID reduce 131
37 DOT reduce 98
4 BECOME reduce 37
43 BOOLEAN reduce 131
3 FINAL reduce 69
152 STATIC reduce 74
82 WHILE shift 89
6 FOR reduce 115
120 assignexpr shift 62
193 FINAL reduce 32
141 SHORT reduce 61
56 RETURN reduce 14
134 COMMA reduce 126
17 BOOLEAN reduce 20
184 lefthand shift 1
140 INT reduce 72
64 PUBLIC reduce 75
3 SHORT reduce 69
82 referencetype shift 90
56 SHORT reduce 14
101 CHAR reduce 114
93 ABSTRACT reduce 48
140 PROTECTED reduce 72
168 PROTECTED reduce 46
56 FOR reduce 14
104 lefthand shift 1
14 ABSTRACT reduce 85
114 EOF reduce 47
139 condexpr shift 8
67 localvardecl shift 91
161 SHORT reduce 103
150 VOID reduce 73
60 exprstmnt shift 36
161 SEMI reduce 103
11 LBRACE reduce 77
164 RBRACK reduce 7
137 ID shift 27
101 SHORT reduce 114
182 BYTE reduce 19
44 PUBLIC reduce 18
179 INT reduce 62
11 LBRACK reduce 77
150 BYTE reduce 73
184 ID shift 27
97 INT reduce 17
164 RBRACE reduce 7
23 BOOLEAN reduce 68
120 simplename shift 12
54 LBRACK reduce 126
11 IMPLEMENTS reduce 77
188 CHAR reduce 13
81 ID shift 27
169 IF shift 26
168 IMPORT reduce 46
82 localvardecl shift 92
75 SHORT reduce 74
53 FOR reduce 105
137 assignexpr shift 62
154 BOOLEAN reduce 15
18 SEMI reduce 129
152 ondemandimport shift 93
161 LBRACE reduce 103
4 condexpr shift 8
85 LBRACE reduce 40
135 FINAL reduce 104
197 CHAR reduce 21
56 WHILE reduce 14
105 FOR reduce 11
104 ID shift 27
158 INT shift 94
129 CHAR reduce 105
3 VOID reduce 69
103 stmntexprlst shift 95
36 BOOLEAN reduce 116
56 BOOLEAN reduce 14
4 assign shift 96
75 classmemberdecl shift 97
129 RETURN reduce 105
135 CLASS reduce 104
9 ID shift 27
111 param shift 98
17 ABSTRACT reduce 20
142 COMMA reduce 111
38 arrayaccess shift 79
46 qualifiedname shift 11
109 WHILE shift 89
139 qualifiedname shift 11
82 while shift 39
9 lefthand shift 1
135 NATIVE reduce 104
126 FINAL reduce 23
15 BOOLEAN reduce 106
48 ID shift 27
152 NATIVE reduce 74
140 NATIVE reduce 72
188 SEMI reduce 13
152 PROTECTED reduce 74
105 STATIC reduce 11
84 IMPORT reduce 84
36 RETURN reduce 116
148 ID shift 99
28 BECOME shift 100
109 block shift 101
105 ID reduce 11
22 DOT shift 20
144 SEMI reduce 83
185 RBRACE reduce 38
15 SHORT reduce 106
105 IF reduce 11
184 assign shift 96
156 EOF reduce 123
39 FOR reduce 108
85 WHILE reduce 40
48 simplename shift 12
184 expr shift 102
60 LBRACE shift 56
53 BYTE reduce 105
163 WHILE shift 89
56 ID reduce 14
56 IF reduce 14
124 SEMI shift 103
82 LBRACE shift 56
9 primary shift 29
23 PUBLIC reduce 68
61 DOT reduce 96
149 LPAREN reduce 99
159 FOR reduce 117
103 LPAREN shift 104
125 INT reduce 60
160 SEMI reduce 125
103 simplename shift 12
55 variabledeclid shift 28
82 RBRACE shift 105
68 RBRACK shift 106
8 COMMA reduce 8
150 ID reduce 73
64 PROTECTED reduce 75
160 COMMA reduce 125
82 for shift 107
6 WHILE reduce 115
197 VOID reduce 21
150 CLASS reduce 73
169 SEMI shift 108
12 ID reduce 76
141 FINAL reduce 61
108 RETURN reduce 34
114 STATIC reduce 47
120 BECOME reduce 37
154 CHAR reduce 15
58 RBRACE reduce 66
152 PUBLIC reduce 74
105 CHAR reduce 11
100 ID shift 27
36 RBRACE reduce 116
64 CLASS reduce 75
37 BECOME reduce 52
77 ID reduce 92
133 simplename shift 12
32 IF reduce 107
32 ID reduce 107
147 RPAREN shift 109
178 RPAREN shift 110
9 fieldaccess shift 61
185 ABSTRACT reduce 38
54 LPAREN shift 111
141 ABSTRACT reduce 61
60 for shift 107
43 WHILE reduce 131
175 constructordeclor shift 112
23 NATIVE reduce 68
27 IMPLEMENTS reduce 78
93 STATIC reduce 48
108 BYTE reduce 34
188 INT reduce 13
17 FINAL reduce 20
108 SEMI reduce 34
87 qualifiedname shift 11
129 IF reduce 105
129 ID reduce 105
159 BYTE reduce 117
141 NATIVE reduce 61
169 block shift 101
138 FOR reduce 44
8 SEMI reduce 8
180 EOF shift 113
152 singletypeimport shift 114
135 STATIC reduce 104
154 BYTE reduce 15
185 PROTECTED reduce 38
175 PROTECTED shift 3
64 STATIC reduce 75
100 simplename shift 12
162 ID shift 27
116 BYTE reduce 71
43 CHAR reduce 131
159 RBRACE reduce 117
154 SHORT reduce 15
109 FOR shift 16
120 qualifiedname shift 11
104 expr shift 115
17 PROTECTED reduce 20
12 BECOME reduce 76
174 ABSTRACT shift 116
151 extendsinterfaces shift 117
53 BOOLEAN reduce 105
125 SHORT reduce 60
84 CLASS reduce 84
103 primnoarray shift 118
83 LBRACE reduce 28
69 DOT reduce 91
120 lefthand shift 1
3 STATIC reduce 69
133 COMMA reduce 1
74 BOOLEAN reduce 70
81 BOOLEAN shift 5
109 ifthen shift 15
158 params shift 119
188 LBRACE reduce 13
163 RETURN shift 120
132 RBRACK shift 121
75 PROTECTED reduce 74
193 ID reduce 32
133 assignexpr shift 62
58 COMMA reduce 66
154 RETURN reduce 15
130 EOF reduce 45
107 FOR reduce 109
2 ID reduce 80
109 SEMI shift 108
75 methoddecl shift 122
31 DOT shift 123
72 COMMA reduce 128
110 SEMI reduce 65
74 FINAL reduce 70
81 INT shift 94
67 primitivetype shift 73
4 expr shift 124
107 SHORT reduce 109
138 WHILE reduce 44
57 block shift 125
116 VOID reduce 71
2 LBRACK reduce 80
81 referencetype shift 90
175 INT shift 94
60 RETURN shift 120
111 referencetype shift 90
133 expr shift 30
120 fieldaccess shift 13
111 INT shift 94
14 CLASS reduce 85
125 STATIC reduce 60
46 fieldaccess shift 13
126 NATIVE reduce 23
184 qualifiedname shift 11
23 BYTE reduce 68
84 ABSTRACT reduce 84
177 COMMA reduce 110
112 block shift 126
81 param shift 127
6 SHORT reduce 115
105 ELSE reduce 11
46 assign shift 96
122 ID reduce 33
19 BECOME reduce 4
197 FINAL reduce 21
66 ID reduce 59
60 while shift 39
66 IF reduce 59
28 SEMI reduce 124
100 assign shift 96
51 classbody shift 128
36 ELSE reduce 116
104 arrayaccess shift 79
125 RBRACE reduce 60
36 CHAR reduce 116
82 BOOLEAN shift 5
3 CHAR reduce 69
60 stmntnotrail shift 129
185 FINAL reduce 38
107 SEMI reduce 109
164 COMMA reduce 7
162 BECOME reduce 37
194 WHILE reduce 102
107 BYTE reduce 109
105 RETURN reduce 11
137 qualifiedname shift 11
17 PUBLIC reduce 20
54 COMMA reduce 126
84 packagedecl shift 130
153 CHAR reduce 12
100 lefthand shift 1
39 ID reduce 108
176 LBRACE reduce 43
126 INT reduce 23
123 STAR shift 131
6 ELSE reduce 115
39 IF reduce 108
32 RETURN reduce 107
105 RBRACE reduce 11
150 FINAL reduce 73
153 BOOLEAN reduce 12
97 BOOLEAN reduce 17
168 NATIVE reduce 46
15 WHILE reduce 106
111 qualifiedname shift 11
64 ABSTRACT reduce 75
44 PROTECTED reduce 18
67 SHORT shift 2
99 LPAREN shift 111
101 ELSE reduce 114
54 SEMI reduce 126
42 LBRACK shift 132
104 condexpr shift 8
186 ID reduce 10
179 ABSTRACT reduce 62
23 STATIC reduce 68
34 LBRACK reduce 79
126 STATIC reduce 23
15 ID reduce 106
140 STATIC reduce 72
15 IF reduce 106
162 name shift 22
4 fieldaccess shift 13
146 LPAREN shift 133
55 ID shift 134
60 emptystmnt shift 6
122 NATIVE reduce 33
179 FINAL reduce 62
59 COMMA reduce 130
153 INT reduce 12
17 NATIVE reduce 20
161 WHILE reduce 103
149 ID reduce 99
25 SEMI reduce 63
31 SEMI shift 135
188 SHORT reduce 13
175 CHAR shift 7
100 fieldaccess shift 13
138 IF reduce 44
138 ID reduce 44
49 RBRACK shift 136
130 IMPORT reduce 45
161 BOOLEAN reduce 103
87 ID shift 27
109 for shift 107
175 referencetype shift 90
169 while shift 39
67 name shift 42
158 simplename shift 12
108 ELSE reduce 34
32 WHILE reduce 107
47 LPAREN shift 137
193 PROTECTED reduce 32
126 VOID reduce 23
3 PROTECTED reduce 69
179 VOID reduce 62
12 SEMI reduce 76
116 CHAR reduce 71
4 simplename shift 12
194 SHORT reduce 102
164 SEMI reduce 7
82 INT shift 94
142 DOT reduce 97
27 LBRACE reduce 78
27 LBRACK reduce 78
163 stmnt shift 138
10 LBRACE reduce 31
129 WHILE reduce 105
105 VOID reduce 11
175 primitivetype shift 73
150 SHORT reduce 73
184 assignexpr shift 62
5 ID reduce 93
35 COMMA reduce 36
109 IF shift 26
188 FOR reduce 13
43 RBRACE reduce 131
179 CHAR reduce 62
133 lefthand shift 1
130 PUBLIC reduce 45
23 CLASS reduce 68
104 qualifiedname shift 11
107 BOOLEAN reduce 109
26 LPAREN shift 139
175 FINAL shift 140
141 CHAR reduce 61
196 LBRACE reduce 26
150 ABSTRACT reduce 73
75 VOID reduce 74
153 WHILE reduce 12
53 ID reduce 105
195 RBRACE reduce 112
194 LBRACE reduce 102
56 LBRACE reduce 14
193 RBRACE reduce 32
175 name shift 42
4 lefthand shift 1
3 BYTE reduce 69
53 SHORT reduce 105
101 BYTE reduce 114
39 BYTE reduce 108
184 condexpr shift 8
176 SEMI reduce 43
176 BYTE reduce 43
101 WHILE reduce 114
144 INTERFACE reduce 83
140 INTERFACE reduce 72
57 SEMI shift 141
53 IF reduce 105
46 arrayaccess shift 79
175 numerictype shift 77
11 ID reduce 77
194 RBRACE reduce 102
141 PUBLIC reduce 61
179 PUBLIC reduce 62
122 BOOLEAN reduce 33
162 simplename shift 12
158 BOOLEAN shift 5
9 BECOME reduce 37
103 methodinvoke shift 142
23 VOID reduce 68
12 DOT reduce 76
145 LBRACE reduce 24
113 ABSTRACT reduce 0
117 LBRACE shift 143
171 EOF reduce 49
131 SEMI shift 144
185 STATIC reduce 38
9 LPAREN shift 104
194 FOR reduce 102
96 RPAREN reduce 9
111 numerictype shift 77
36 BYTE reduce 116
103 ID shift 27
60 IF shift 26
159 LBRACE reduce 117
128 EOF reduce 22
39 LBRACE reduce 108
119 RPAREN shift 145
74 INTERFACE reduce 70
38 assignexpr shift 62
74 VOID reduce 70
108 WHILE reduce 34
60 ifthen shift 15
182 BOOLEAN reduce 19
23 CHAR reduce 68
181 ID shift 146
96 COMMA reduce 9
175 BYTE shift 34
169 for shift 107
17 ID reduce 20
60 ifthenelse shift 32
74 PROTECTED reduce 70
176 CHAR reduce 43
152 INTERFACE reduce 74
192 LBRACK reduce 76
130 PROTECTED reduce 45
111 type shift 71
36 INT reduce 116
139 assignexpr shift 62
101 INT reduce 114
36 LBRACE reduce 116
9 qualifiedname shift 11
32 BYTE reduce 107
133 assign shift 96
129 SEMI reduce 105
159 WHILE reduce 117
46 expr shift 147
15 BYTE reduce 106
175 VOID shift 148
20 ID shift 149
136 LBRACK reduce 127
141 BYTE reduce 61
46 assignexpr shift 62
150 BOOLEAN reduce 73
139 arrayaccess shift 79
141 INT reduce 61
54 BECOME reduce 126
114 PUBLIC reduce 47
144 IMPORT reduce 83
38 ID shift 27
158 CHAR shift 7
175 PUBLIC shift 23
191 EOF reduce 121
120 ID shift 27
163 ifthenelse shift 32
108 RBRACE reduce 34
168 INTERFACE reduce 46
17 VOID reduce 20
116 INTERFACE reduce 71
126 PROTECTED reduce 23
36 ID reduce 116
36 IF reduce 116
82 stmntnotrail shift 53
64 INTERFACE reduce 75
105 WHILE reduce 11
175 NATIVE shift 150
135 INTERFACE reduce 104
109 exprstmnt shift 36
101 ID reduce 114
194 CHAR reduce 102
101 IF reduce 114
153 BYTE reduce 12
187 ID shift 151
3 ABSTRACT reduce 69
17 SHORT reduce 20
175 modifier shift 64
116 STATIC reduce 71
197 BOOLEAN reduce 21
185 PUBLIC reduce 38
162 assign shift 96
174 STATIC shift 74
101 RBRACE reduce 114
57 LBRACE shift 56
53 CHAR reduce 105
163 block shift 101
133 fieldaccess shift 13
130 importdecls shift 152
100 condexpr shift 8
188 WHILE reduce 13
129 SHORT reduce 105
126 RBRACE reduce 23
185 INT reduce 38
43 INT reduce 131
43 SHORT reduce 131
122 VOID reduce 33
197 ABSTRACT reduce 21
62 SEMI reduce 35
103 lefthand shift 1
58 DOT reduce 66
82 localvardeclstmnt shift 153
82 blockstmnt shift 154
126 CHAR reduce 23
189 variabledeclors shift 155
3 CLASS reduce 69
152 SEMI shift 156
122 INT reduce 33
169 exprstmnt shift 36
193 SHORT reduce 32
138 SEMI reduce 44
11 BECOME reduce 77
154 LBRACE reduce 15
169 WHILE shift 89
48 qualifiedname shift 11
111 ID shift 27
129 BOOLEAN reduce 105
60 WHILE shift 89
112 LBRACE shift 56
14 SEMI reduce 85
44 RBRACE reduce 18
140 BYTE reduce 72
14 FINAL reduce 85
153 SEMI reduce 12
73 ID reduce 118
133 arglist shift 157
192 LPAREN shift 158
85 FOR reduce 40
47 DOT shift 20
110 LBRACE reduce 65
195 COMMA reduce 112
60 retstmnt shift 159
182 FINAL reduce 19
100 variableinit shift 160
74 NATIVE reduce 70
30 RPAREN reduce 2
175 ID shift 27
105 SHORT reduce 11
40 SEMI shift 161
158 name shift 42
137 fieldaccess shift 13
41 LBRACK shift 49
95 RBRACE reduce 42
53 RETURN reduce 105
1 assignop shift 162
74 CLASS reduce 70
174 FINAL shift 140
163 FOR shift 16
185 BYTE reduce 38
74 ID reduce 70
38 BECOME reduce 37
84 PUBLIC reduce 84
137 lefthand shift 1
97 VOID reduce 17
93 FINAL reduce 48
176 SHORT reduce 43
43 RETURN reduce 131
67 qualifiedname shift 11
129 ELSE shift 163
109 retstmnt shift 159
137 arrayaccess shift 79
162 assignexpr shift 164
140 CHAR reduce 72
194 IF reduce 102
129 INT reduce 105
144 EOF reduce 83
194 ID reduce 102
82 RETURN shift 120
183 ID shift 165
188 BYTE reduce 13
23 ID reduce 68
38 fieldaccess shift 13
98 RPAREN reduce 88
81 BYTE shift 34
148 methoddeclor shift 166
169 emptystmnt shift 6
125 PROTECTED reduce 60
18 COMMA reduce 129
70 EOF reduce 16
116 BOOLEAN reduce 71
130 ABSTRACT reduce 45
38 name shift 22
141 RBRACE reduce 61
104 simplename shift 12
166 SEMI reduce 64
103 arraycreate shift 69
174 NATIVE shift 150
84 PROTECTED reduce 84
163 for shift 107
93 SEMI reduce 48
60 FOR shift 16
21 EOF reduce 122
158 ID shift 27
130 FINAL reduce 45
126 PUBLIC reduce 23
194 ELSE reduce 102
129 RBRACE reduce 105
116 ABSTRACT reduce 71
100 arrayaccess shift 79
122 SHORT reduce 33
38 assign shift 96
150 CHAR reduce 73
63 RBRACE reduce 67
137 arglist shift 167
182 NATIVE reduce 19
185 CHAR reduce 38
75 STATIC reduce 74
97 FINAL reduce 17
158 BYTE shift 34
111 BYTE shift 34
82 simplename shift 12
96 RBRACE reduce 9
185 NATIVE reduce 38
129 LBRACE reduce 105
43 BYTE reduce 131
149 SEMI reduce 99
15 SEMI reduce 106
172 EOF reduce 39
154 SEMI reduce 15
30 COMMA reduce 2
109 emptystmnt shift 6
82 SEMI shift 108
105 ABSTRACT reduce 11
96 RBRACK reduce 9
184 arrayaccess shift 79
23 PROTECTED reduce 68
111 COMMA reduce 87
62 RBRACK reduce 35
23 INTERFACE reduce 68
182 SHORT reduce 19
67 type shift 55
144 FINAL reduce 83
85 BOOLEAN reduce 40
104 name shift 22
101 SEMI reduce 114
137 name shift 22
64 BOOLEAN reduce 75
152 importdecl shift 168
82 BYTE shift 34
173 RBRACE shift 169
158 param shift 98
152 ABSTRACT reduce 74
9 methodinvoke shift 142
125 PUBLIC reduce 60
36 WHILE reduce 116
81 arraytype shift 52
82 FOR shift 16
116 PROTECTED reduce 71
107 LBRACE reduce 109
188 BOOLEAN reduce 13
32 LBRACE reduce 107
197 PUBLIC reduce 21
66 BOOLEAN reduce 59
90 ID reduce 119
184 simplename shift 12
47 BECOME reduce 50
109 RETURN shift 120
184 name shift 22
6 LBRACE reduce 115
190 name shift 170
39 INT reduce 108
168 STATIC reduce 46
56 INT reduce 14
84 EOF reduce 84
108 SHORT reduce 34
64 NATIVE reduce 75
143 RBRACE shift 171
100 assignexpr shift 62
6 SEMI reduce 115
122 BYTE reduce 33
158 arraytype shift 52
74 CHAR reduce 70
152 typedecl shift 172
159 SHORT reduce 117
152 EOF reduce 120
177 RBRACE reduce 110
134 SEMI reduce 126
38 simplename shift 12
81 type shift 71
126 BYTE reduce 23
116 INT reduce 71
179 ID reduce 62
114 CLASS reduce 47
94 LBRACK reduce 81
125 FINAL reduce 60
182 STATIC reduce 19
114 PROTECTED reduce 47
166 LBRACE reduce 64
114 FINAL reduce 47
53 LBRACE reduce 105
60 SEMI shift 108
60 block shift 101
39 SEMI reduce 108
23 INT reduce 68
67 numerictype shift 77
103 forupdate shift 173
152 modifiers shift 174
72 SEMI reduce 128
161 IF reduce 103
111 simplename shift 12
179 NATIVE reduce 62
161 ID reduce 103
107 IF reduce 109
163 retstmnt shift 159
122 RBRACE reduce 33
107 ID reduce 109
111 name shift 42
75 modifiers shift 175
121 ID reduce 6
17 CHAR reduce 20
158 SHORT shift 2
4 arrayaccess shift 79
126 BOOLEAN reduce 23
159 IF reduce 117
66 INT reduce 59
168 FINAL reduce 46
159 ID reduce 117
11 DOT reduce 77
60 stmnt shift 176
67 INT shift 94
185 ID reduce 38
34 ID reduce 79
116 PUBLIC reduce 71
32 SHORT reduce 107
66 CHAR reduce 59
82 block shift 101
105 INT reduce 11
43 LBRACE reduce 131
64 ID reduce 75
114 NATIVE reduce 47
103 qualifiedname shift 11
135 PROTECTED reduce 104
159 BOOLEAN reduce 117
97 NATIVE reduce 17
75 ABSTRACT reduce 74
175 qualifiedname shift 11
142 RBRACE reduce 111
103 assign shift 177
130 NATIVE reduce 45
190 simplename shift 12
42 ID reduce 100
107 CHAR reduce 109
56 RBRACE reduce 14
103 DOT reduce 37
130 INTERFACE reduce 45
125 BYTE reduce 60
158 referencetype shift 90
23 ABSTRACT reduce 68
44 BYTE reduce 18
150 INTERFACE reduce 73
111 params shift 178
43 FOR reduce 131
65 DOT reduce 94
82 retstmnt shift 159
176 FOR reduce 43
93 IMPORT reduce 48
164 RPAREN reduce 7
24 SEMI reduce 58
139 name shift 22
57 methodbody shift 179
82 ifthenelse shift 32
84 file shift 180
74 SHORT reduce 70
81 primitivetype shift 73
102 RPAREN reduce 3
66 BYTE reduce 59
118 DOT reduce 90
162 arrayaccess shift 79
120 name shift 22
52 ID reduce 101
138 SHORT reduce 44
85 CHAR reduce 40
38 lefthand shift 1
29 DOT shift 181
103 arrayaccess shift 37
139 ID shift 27
137 assign shift 96
140 ID reduce 72
12 LBRACK reduce 76
75 PUBLIC reduce 74
75 constructordecl shift 182
7 ID reduce 82
66 RBRACE reduce 59
182 RBRACE reduce 19
158 primitivetype shift 73
179 RBRACE reduce 62
174 CLASS shift 183
97 PUBLIC reduce 17
167 COMMA shift 184
176 RBRACE reduce 43
182 PROTECTED reduce 19
17 STATIC reduce 20
157 COMMA shift 184
81 SHORT shift 2
155 SEMI shift 185
23 FINAL reduce 68
1 BECOME shift 186
93 PUBLIC reduce 48
174 INTERFACE shift 187
169 RETURN shift 120
3 NATIVE reduce 69
17 BYTE reduce 20
36 SEMI reduce 116
93 CLASS reduce 48
15 FOR reduce 106
84 INTERFACE reduce 84
82 stmnt shift 188
122 STATIC reduce 33
175 arraytype shift 52
6 RETURN reduce 115
127 RPAREN reduce 89
27 ID reduce 78
176 WHILE reduce 43
116 CLASS reduce 71
85 SHORT reduce 40
175 ABSTRACT shift 116
39 CHAR reduce 108
22 BECOME reduce 50
9 primnoarray shift 118
159 INT reduce 117
50 ID shift 134
185 SHORT reduce 38
184 BECOME reduce 37
97 PROTECTED reduce 17
97 ABSTRACT reduce 17
179 BYTE reduce 62
149 LBRACE reduce 99
175 type shift 189
149 LBRACK reduce 99
81 qualifiedname shift 11
150 STATIC reduce 73
85 BYTE reduce 40
66 RETURN reduce 59
32 BOOLEAN reduce 107
197 RBRACE reduce 21
67 referencetype shift 90
66 SEMI reduce 59
84 PACKAGE shift 190
74 BYTE reduce 70
53 SEMI reduce 105
103 SEMI shift 35
67 CHAR shift 7
197 BYTE reduce 21
152 classdecl shift 191
126 ABSTRACT reduce 23
193 ABSTRACT reduce 32
133 RPAREN reduce 1
193 PUBLIC reduce 32
106 ID reduce 5
27 SEMI reduce 78
44 ABSTRACT reduce 18
97 SHORT reduce 17
102 COMMA reduce 3
192 ID reduce 76
12 LBRACE reduce 76
12 LPAREN reduce 76
182 PUBLIC reduce 19
133 arrayaccess shift 79
170 DOT shift 20
17 RBRACE reduce 20
82 numerictype shift 77
158 numerictype shift 77
14 PROTECTED reduce 85
154 RBRACE reduce 15
9 assign shift 177
44 FINAL reduce 18
197 ID reduce 21
120 condexpr shift 8
82 ifthen shift 15
39 WHILE reduce 108
7 LBRACK reduce 82
44 SHORT reduce 18
197 NATIVE reduce 21
64 INT reduce 75
109 stmntnotrail shift 53
175 simplename shift 192
62 COMMA reduce 35
75 fielddecl shift 193
97 STATIC reduce 17
194 SEMI reduce 102
120 SEMI shift 194
144 NATIVE reduce 83
120 assign shift 96
111 primitivetype shift 73
154 INT reduce 15
100 name shift 22
123 ID shift 149
122 PROTECTED reduce 33
114 INTERFACE reduce 47
126 SHORT reduce 23
103 THIS shift 65
163 SEMI shift 108
138 CHAR reduce 44
104 assignexpr shift 62
4 qualifiedname shift 11
193 BOOLEAN reduce 32
139 assign shift 96
155 COMMA shift 50
103 stmntexpr shift 195
169 retstmnt shift 159
14 INTERFACE reduce 85
71 ID shift 134
76 name shift 196
85 RBRACE reduce 40
75 classbodydecl shift 197
44 ID reduce 18
168 ABSTRACT reduce 46
107 INT reduce 109
104 assign shift 96
116 NATIVE reduce 71
74 INT reduce 70
