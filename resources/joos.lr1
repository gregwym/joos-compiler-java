66
ABSTRACT
BOF
EOF
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
STATIC
INT
INTLIT
EXTENDS
NATIVE
75
S
arglist
arrayaccess
arraycreate
arrayinit
arraytype
assign
assignexpr
assignop
block
blockstmnt
blockstmnts
classbody
classbodydecl
classbodydecls
classdecl
classmemberdecl
condexpr
constructordecl
emptystmnt
expr
exprstmnt
stmntexpr
stmntexprlst
stmntnotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
forinit
forupdate
ifthen
ifthenelse
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclr
methodhead
methodinvoke
modifiers
modifier
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmnt
super
type
typedecl
variabledecl
variabledeclid
variabledecls
variableinit
while
S
130
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayinit
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assignexpr
assignexpr condexpr
assignexpr assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interface
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
emptystmnt SEMI
expr assignexpr
stmntexpr SEMI
fieldaccess
fielddecl modifiers type variabledecls SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit localvardecl
forupdate stmntexprlst
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnotrail ELSE stmnt
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledecls
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methoddeclr ID LPAREN params RPAREN
methodhead modifiers type methoddeclr
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntnotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexprlst stmntexpr
stmntexprlst stmntexprlst COMMA stmntexpr
stmntnotrail block
stmntnotrail emptystmnt
stmntnotrail exprstmnt
stmntnotrail retstmnt
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
variabledecl variabledeclid
variabledecl variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledecls variabledecl
variabledecls variabledecls COMMA variabledecl
variableinit expr
variableinit arrayinit
while WHILE LPAREN expr RPAREN stmnt
190
1303
152 NATIVE reduce 20
53 assign shift 1
154 LBRACE reduce 16
10 BECOME reduce 76
168 PROTECTED reduce 81
36 RETURN shift 2
144 WHILE reduce 14
163 BOOLEAN reduce 21
151 ABSTRACT reduce 101
36 SEMI shift 3
12 arrayaccess shift 4
17 RBRACE reduce 15
132 PUBLIC reduce 60
75 CHAR reduce 99
122 COMMA shift 5
74 INT reduce 71
84 fieldaccess shift 6
107 LBRACK reduce 96
151 IMPORT reduce 101
44 condexpr shift 7
17 ID reduce 15
34 RPAREN reduce 124
17 IF reduce 15
54 RETURN reduce 105
126 SHORT reduce 37
107 LBRACE reduce 96
11 IMPLEMENTS reduce 74
54 ID reduce 105
129 name shift 8
54 IF reduce 105
40 FOR reduce 114
98 SEMI reduce 126
77 BYTE reduce 66
119 ifthen shift 9
146 ID shift 10
84 simplename shift 11
166 PROTECTED reduce 32
93 LPAREN shift 12
39 FINAL shift 13
126 CHAR reduce 37
37 BYTE reduce 12
12 assign shift 1
119 referencetype shift 14
187 RBRACE reduce 8
37 RBRACE reduce 12
46 INT shift 15
56 BECOME reduce 51
186 lefthand shift 16
187 RBRACK reduce 8
39 simplename shift 11
119 LBRACE shift 17
147 IF shift 18
23 LBRACK reduce 90
169 EOF reduce 82
87 ABSTRACT reduce 19
183 BYTE reduce 59
154 IF reduce 16
166 BOOLEAN reduce 32
154 ID reduce 16
132 BYTE reduce 60
91 IF shift 18
58 BYTE reduce 113
116 PUBLIC reduce 68
145 ID reduce 7
60 PROTECTED reduce 83
88 LBRACE reduce 104
77 INT reduce 66
33 BECOME reduce 11
69 ABSTRACT reduce 44
72 LBRACE reduce 129
176 ELSE reduce 100
169 FINAL reduce 82
44 ID shift 10
82 CHAR reduce 67
90 arraytype shift 19
2 qualifiedname shift 20
116 STATIC reduce 68
20 SEMI reduce 75
37 LBRACE reduce 12
53 name shift 8
147 for shift 21
39 CHAR shift 22
49 COMMA reduce 35
150 PUBLIC reduce 18
13 BYTE reduce 70
39 BOOLEAN shift 23
119 emptystmnt shift 24
166 INT reduce 32
129 fieldaccess shift 25
134 RBRACE shift 26
2 simplename shift 11
178 SEMI reduce 46
156 ifthen shift 9
150 NATIVE reduce 18
115 ID shift 27
170 SHORT reduce 31
75 BOOLEAN reduce 99
163 BYTE reduce 21
116 SHORT reduce 68
10 SEMI reduce 76
181 CLASS reduce 45
77 ABSTRACT reduce 66
36 FOR shift 28
75 BYTE reduce 99
72 RBRACE reduce 129
119 FOR shift 28
167 SEMI reduce 47
2 assignexpr shift 29
167 STATIC reduce 47
138 expr shift 30
24 ELSE reduce 112
37 NATIVE reduce 12
181 SEMI reduce 45
166 SHORT reduce 32
183 RBRACE reduce 59
78 interface shift 31
60 FINAL reduce 83
44 qualifiedname shift 20
13 CHAR reduce 70
39 qualifiedname shift 20
71 BOOLEAN reduce 73
13 NATIVE reduce 70
121 ABSTRACT reduce 22
146 assignexpr shift 29
150 INT reduce 18
132 STATIC reduce 60
129 lefthand shift 16
11 ID reduce 74
109 ID reduce 6
90 numerictype shift 32
166 PUBLIC reduce 32
135 NATIVE reduce 61
16 BECOME shift 33
176 BOOLEAN reduce 100
178 FINAL reduce 46
45 RBRACK shift 34
22 ID reduce 80
46 ID shift 10
84 stmntexpr shift 35
106 INTERFACE reduce 69
163 ID reduce 21
10 DOT reduce 76
38 BOOLEAN reduce 42
139 RPAREN shift 36
71 FINAL reduce 73
119 RBRACE shift 37
77 CLASS reduce 66
91 stmnt shift 38
21 BOOLEAN reduce 106
161 modifiers shift 39
130 WHILE reduce 13
85 COMMA reduce 122
47 ID shift 10
51 IF reduce 102
167 INTERFACE reduce 47
51 ID reduce 102
94 COMMA reduce 125
3 INT reduce 33
106 STATIC reduce 69
87 RBRACE reduce 19
77 INTERFACE reduce 66
114 SEMI reduce 62
116 BYTE reduce 68
95 RBRACE reduce 107
3 BOOLEAN reduce 33
34 LBRACK reduce 124
91 retstmnt shift 40
161 SHORT reduce 72
47 simplename shift 11
132 PROTECTED reduce 60
157 variabledeclid shift 41
114 LBRACE reduce 62
53 simplename shift 11
27 LBRACK reduce 123
163 STATIC reduce 21
142 COMMA reduce 123
13 CLASS reduce 70
17 CHAR reduce 15
3 CHAR reduce 33
46 primitivetype shift 42
156 IF shift 18
15 LBRACK reduce 79
9 RETURN reduce 103
106 INT reduce 69
124 SHORT shift 43
37 PROTECTED reduce 12
3 BYTE reduce 33
38 WHILE reduce 42
120 COMMA shift 44
172 FINAL reduce 72
172 CLASS reduce 72
131 qualifiedname shift 20
72 BYTE reduce 129
78 simplename shift 11
41 LBRACK shift 45
20 ID reduce 75
116 ID reduce 68
125 COMMA reduce 121
3 SHORT reduce 33
84 ID shift 10
142 LPAREN shift 46
175 LBRACE reduce 39
53 BECOME reduce 36
87 NATIVE reduce 19
79 LPAREN shift 47
38 SHORT reduce 42
163 INT reduce 21
172 STATIC reduce 72
90 referencetype shift 14
60 CLASS reduce 83
12 expr shift 48
20 BECOME reduce 75
75 SEMI reduce 99
81 FINAL shift 13
91 FOR shift 28
47 condexpr shift 7
149 FOR reduce 58
93 SEMI shift 49
146 simplename shift 11
183 PUBLIC reduce 59
38 RBRACE reduce 42
89 LBRACE reduce 25
108 COMMA shift 5
49 RBRACE reduce 35
3 ELSE reduce 33
93 qualifiedname shift 20
82 PROTECTED reduce 67
141 RPAREN shift 50
91 stmntnotrail shift 51
11 LPAREN reduce 74
59 expr shift 52
37 BOOLEAN reduce 12
126 STATIC reduce 37
176 LBRACE reduce 100
123 IMPLEMENTS reduce 24
29 COMMA reduce 34
72 FOR reduce 129
37 SEMI reduce 12
181 STATIC reduce 45
168 PUBLIC reduce 81
10 LBRACK reduce 76
96 ID reduce 111
96 IF reduce 111
124 ID shift 10
2 lefthand shift 16
10 LBRACE reduce 76
152 FINAL reduce 20
9 IF reduce 103
65 LBRACK reduce 77
9 ID reduce 103
16 assignop shift 53
91 while shift 54
53 ID shift 10
93 arraycreate shift 55
119 retstmnt shift 40
93 arrayaccess shift 56
120 RPAREN shift 57
24 BYTE reduce 112
9 CHAR reduce 103
124 qualifiedname shift 20
186 qualifiedname shift 20
36 retstmnt shift 40
62 EOF reduce 17
156 exprstmnt shift 58
167 IMPORT reduce 47
18 LPAREN shift 59
135 BYTE reduce 61
152 STATIC reduce 20
47 assign shift 1
161 INT reduce 72
110 simplename shift 11
149 BOOLEAN reduce 58
43 LBRACK reduce 78
117 ABSTRACT reduce 0
118 SEMI shift 60
50 COMMA reduce 65
75 WHILE reduce 99
44 BECOME reduce 36
12 ID shift 10
147 ifthen shift 9
172 IMPORT shift 61
2 assign shift 1
161 RBRACE shift 62
64 BOOLEAN reduce 102
146 arrayinit shift 63
144 SEMI reduce 14
119 stmntnotrail shift 64
106 PROTECTED reduce 69
119 BYTE shift 65
138 assign shift 1
147 emptystmnt shift 24
40 ID reduce 114
24 RETURN reduce 112
77 BOOLEAN reduce 66
140 ID shift 66
21 FOR reduce 106
123 LBRACE reduce 24
188 RPAREN reduce 3
152 SHORT reduce 20
119 primitivetype shift 42
40 IF reduce 114
74 INTERFACE reduce 71
71 PUBLIC reduce 73
31 LBRACE reduce 27
146 expr shift 67
113 ID shift 68
169 packagedecl shift 69
51 WHILE reduce 102
154 SEMI reduce 16
135 PUBLIC reduce 61
82 BOOLEAN reduce 67
8 DOT shift 70
39 arraytype shift 19
87 FINAL reduce 19
91 for shift 21
119 BOOLEAN shift 23
24 ID reduce 112
24 IF reduce 112
50 DOT reduce 65
26 EOF reduce 48
39 modifier shift 71
59 simplename shift 11
36 stmnt shift 72
98 COMMA reduce 126
32 LBRACK reduce 89
176 BYTE reduce 100
17 WHILE reduce 15
59 ID shift 10
189 interfaces shift 73
82 STATIC reduce 67
71 CLASS reduce 73
82 ABSTRACT reduce 67
90 simplename shift 11
151 PUBLIC reduce 101
154 SHORT reduce 16
39 BYTE shift 65
81 NATIVE shift 74
2 SEMI shift 75
151 INTERFACE reduce 101
59 arrayaccess shift 4
119 INT shift 15
129 BECOME reduce 36
186 fieldaccess shift 25
170 PROTECTED reduce 31
163 CHAR reduce 21
44 assign shift 1
88 INT reduce 104
21 SEMI reduce 106
156 retstmnt shift 40
11 BECOME reduce 74
147 while shift 54
77 CHAR reduce 66
9 WHILE reduce 103
80 LBRACK shift 76
39 PUBLIC shift 77
144 INT reduce 14
47 arrayaccess shift 4
189 IMPLEMENTS shift 78
87 PROTECTED reduce 19
176 FOR reduce 100
13 ABSTRACT reduce 70
74 CLASS reduce 71
19 ID reduce 98
154 CHAR reduce 16
147 WHILE shift 79
158 DOT reduce 94
54 WHILE reduce 105
20 LPAREN reduce 75
176 SEMI reduce 100
96 SEMI reduce 111
119 name shift 80
13 ID reduce 70
135 BOOLEAN reduce 61
87 CHAR reduce 19
36 emptystmnt shift 24
182 BECOME reduce 36
183 SHORT reduce 59
150 BOOLEAN reduce 18
72 SEMI reduce 129
37 FOR reduce 12
17 SEMI reduce 15
186 COMMA reduce 1
172 modifiers shift 81
75 ELSE reduce 99
143 RETURN reduce 43
81 PROTECTED shift 82
144 SHORT reduce 14
150 ID reduce 18
72 WHILE reduce 129
141 COMMA shift 44
172 PUBLIC reduce 72
158 RBRACE reduce 108
3 LBRACE reduce 33
44 arrayaccess shift 4
107 DOT reduce 96
84 THIS shift 83
137 COMMA shift 84
119 numerictype shift 32
47 name shift 8
146 COMMA reduce 5
183 CHAR reduce 59
75 INT reduce 99
36 IF shift 18
91 RETURN shift 2
90 name shift 80
150 BYTE reduce 18
144 BOOLEAN reduce 14
77 ID reduce 66
146 variableinit shift 85
21 BYTE reduce 106
118 DOT shift 70
46 numerictype shift 32
51 LBRACE reduce 102
154 FOR reduce 16
106 BOOLEAN reduce 69
84 SEMI shift 49
58 RETURN reduce 113
7 COMMA reduce 9
73 classbody shift 86
88 RBRACE reduce 104
121 RBRACE reduce 22
161 staticinit shift 87
36 ifthenelse shift 88
110 name shift 89
175 WHILE reduce 39
27 SEMI reduce 123
28 LBRACE shift 90
132 NATIVE reduce 60
96 BYTE reduce 111
52 RPAREN shift 91
2 expr shift 92
144 BYTE reduce 14
93 THIS shift 83
143 WHILE reduce 43
103 SEMI shift 93
175 INT reduce 39
69 PROTECTED reduce 44
116 BOOLEAN reduce 68
151 CLASS reduce 101
161 ABSTRACT reduce 72
143 BYTE reduce 43
6 BECOME reduce 50
172 EOF reduce 117
115 variabledecl shift 94
8 BECOME reduce 49
69 CLASS reduce 44
84 LPAREN shift 12
17 INT reduce 15
146 condexpr shift 7
59 assignexpr shift 29
39 primitivetype shift 42
11 DOT reduce 74
38 FOR reduce 42
69 SEMI reduce 44
105 COMMA reduce 2
24 INT reduce 112
163 RBRACE reduce 21
149 SHORT reduce 58
121 SHORT reduce 22
93 lefthand shift 16
51 SEMI reduce 102
149 WHILE reduce 58
93 assign shift 95
3 IF reduce 33
3 ID reduce 33
9 LBRACE reduce 103
57 RBRACE reduce 64
119 RETURN shift 2
107 LPAREN reduce 96
71 PROTECTED reduce 73
169 INTERFACE reduce 82
37 ELSE reduce 12
170 BYTE reduce 31
183 NATIVE reduce 59
186 condexpr shift 7
175 SHORT reduce 39
80 DOT shift 70
130 INT reduce 13
143 INT reduce 43
71 INTERFACE reduce 73
36 block shift 96
87 BYTE reduce 19
126 INT reduce 37
175 RETURN reduce 39
105 RPAREN reduce 2
61 qualifiedname shift 20
77 STATIC reduce 66
44 fieldaccess shift 25
166 NATIVE reduce 32
116 INTERFACE reduce 68
46 param shift 97
126 PUBLIC reduce 37
21 SHORT reduce 106
36 WHILE shift 79
5 variabledecl shift 98
58 SHORT reduce 113
125 SEMI reduce 121
91 emptystmnt shift 24
165 COMMA reduce 86
119 localvardecl shift 99
21 RETURN reduce 106
169 PUBLIC reduce 82
93 name shift 100
106 NATIVE reduce 69
97 COMMA reduce 85
93 stmntexpr shift 101
181 NATIVE reduce 45
30 RBRACK shift 102
151 STATIC reduce 101
174 SEMI reduce 63
130 RBRACE reduce 13
154 BOOLEAN reduce 16
147 exprstmnt shift 58
47 fieldaccess shift 25
24 CHAR reduce 112
37 ABSTRACT reduce 12
186 simplename shift 11
149 SEMI reduce 58
156 for shift 21
34 BECOME reduce 124
129 expr shift 103
156 LBRACE shift 17
172 NATIVE reduce 72
13 INTERFACE reduce 70
152 PUBLIC reduce 20
156 stmntnotrail shift 64
153 DOT shift 70
144 RBRACE reduce 14
127 STAR shift 104
144 CHAR reduce 14
151 EOF reduce 101
71 BYTE reduce 73
91 WHILE shift 79
84 arraycreate shift 55
138 ID shift 10
119 simplename shift 11
71 ID reduce 73
27 COMMA reduce 123
147 SEMI shift 3
65 ID reduce 77
25 BECOME reduce 50
186 expr shift 105
81 ABSTRACT shift 106
127 ID shift 107
20 DOT reduce 75
151 SEMI reduce 101
154 WHILE reduce 16
181 EOF reduce 45
37 SHORT reduce 12
96 WHILE reduce 111
46 BYTE shift 65
59 fieldaccess shift 25
115 variabledecls shift 108
84 assign shift 95
60 SEMI reduce 83
182 COMMA reduce 1
9 FOR reduce 103
64 RBRACE reduce 102
186 assignexpr shift 29
72 BOOLEAN reduce 129
144 FOR reduce 14
133 RBRACK shift 109
72 IF reduce 129
161 ID reduce 72
24 RBRACE reduce 112
72 ID reduce 129
116 FINAL reduce 68
88 SEMI reduce 104
170 NATIVE reduce 31
54 INT reduce 105
106 PUBLIC reduce 69
156 while shift 54
64 IF reduce 102
64 ID reduce 102
123 EXTENDS shift 110
29 RPAREN reduce 34
96 FOR reduce 111
90 ID shift 10
187 RPAREN reduce 8
93 forupdate shift 111
131 ID shift 10
71 CHAR reduce 73
34 SEMI reduce 124
93 primary shift 112
91 LBRACE shift 17
112 DOT shift 113
74 ID reduce 71
152 BOOLEAN reduce 20
96 SHORT reduce 111
74 BOOLEAN reduce 71
178 IMPORT reduce 46
143 BOOLEAN reduce 43
82 PUBLIC reduce 67
78 ID shift 10
184 DOT reduce 92
61 ID shift 10
38 SEMI reduce 42
124 CHAR shift 22
53 fieldaccess shift 25
128 RPAREN shift 114
29 SEMI reduce 34
13 PUBLIC reduce 70
119 type shift 115
119 IF shift 18
119 ID shift 10
116 INT reduce 68
129 simplename shift 11
124 referencetype shift 14
37 FINAL reduce 12
75 SHORT reduce 99
166 STATIC reduce 32
175 CHAR reduce 39
3 WHILE reduce 33
168 EOF reduce 81
87 STATIC reduce 19
61 simplename shift 11
38 ID reduce 42
126 PROTECTED reduce 37
38 IF reduce 42
37 PUBLIC reduce 12
96 LBRACE reduce 111
129 condexpr shift 7
7 RBRACK reduce 9
40 BYTE reduce 114
2 arrayaccess shift 4
116 CHAR reduce 68
34 COMMA reduce 124
121 STATIC reduce 22
88 IF reduce 104
7 RBRACE reduce 9
90 BOOLEAN shift 23
58 RBRACE reduce 113
143 SEMI reduce 43
81 STATIC shift 116
166 ABSTRACT reduce 32
168 NATIVE reduce 81
58 IF reduce 113
187 COMMA reduce 8
84 name shift 100
58 ID reduce 113
39 name shift 80
64 INT reduce 102
88 ID reduce 104
51 FOR reduce 102
69 EOF reduce 44
38 LBRACE reduce 42
185 EOF shift 117
169 STATIC reduce 82
42 ID reduce 115
146 BECOME reduce 36
131 name shift 118
57 DOT reduce 64
17 blockstmnts shift 119
181 FINAL reduce 45
182 arglist shift 120
51 SHORT reduce 102
149 RETURN reduce 58
39 ABSTRACT shift 106
46 simplename shift 11
157 ID shift 27
188 COMMA reduce 3
154 BYTE reduce 16
75 ID reduce 99
75 IF reduce 99
176 CHAR reduce 100
110 ID shift 10
58 BOOLEAN reduce 113
147 RETURN shift 2
168 IMPORT reduce 81
81 PUBLIC shift 77
4 BECOME reduce 51
90 CHAR shift 22
9 SHORT reduce 103
6 DOT reduce 93
161 classbodydecl shift 121
107 BECOME reduce 96
47 qualifiedname shift 20
177 variabledecls shift 122
168 INTERFACE reduce 81
40 LBRACE reduce 114
91 ifthen shift 9
69 FINAL reduce 44
144 IF reduce 14
96 ELSE reduce 111
170 ABSTRACT reduce 31
164 ID shift 123
128 COMMA shift 124
44 simplename shift 11
151 FINAL reduce 101
5 variabledeclid shift 125
46 BOOLEAN shift 23
46 arraytype shift 19
122 SEMI shift 126
173 DOT shift 127
13 PROTECTED reduce 70
146 qualifiedname shift 20
167 EOF reduce 47
56 DOT reduce 95
182 name shift 8
161 PROTECTED reduce 72
138 qualifiedname shift 20
156 emptystmnt shift 24
144 ID reduce 14
9 RBRACE reduce 103
182 arrayaccess shift 4
135 PROTECTED reduce 61
2 fieldaccess shift 25
24 SEMI reduce 112
162 SEMI reduce 40
152 CHAR reduce 20
3 SEMI reduce 33
152 PROTECTED reduce 20
106 ABSTRACT reduce 69
136 DOT reduce 87
51 CHAR reduce 102
46 params shift 128
90 qualifiedname shift 20
124 BOOLEAN shift 23
124 name shift 80
144 RETURN reduce 14
138 name shift 8
146 name shift 8
180 SEMI shift 129
13 INT reduce 70
152 ABSTRACT reduce 20
107 ID reduce 96
47 assignexpr shift 29
72 CHAR reduce 129
119 localvardeclstmnt shift 130
143 LBRACE reduce 43
51 BOOLEAN reduce 102
87 BOOLEAN reduce 19
36 while shift 54
39 PROTECTED shift 82
130 LBRACE reduce 13
169 PACKAGE shift 131
37 RETURN reduce 12
63 SEMI reduce 128
53 qualifiedname shift 20
147 ifthenelse shift 88
167 PROTECTED reduce 47
149 CHAR reduce 58
155 SEMI shift 132
167 PUBLIC reduce 47
183 STATIC reduce 59
37 WHILE reduce 12
90 type shift 115
186 ID shift 10
170 CHAR reduce 31
82 INT reduce 67
166 ID reduce 32
82 CLASS reduce 67
42 LBRACK shift 133
160 LBRACE shift 134
179 EOF reduce 118
124 numerictype shift 32
43 ID reduce 78
155 methodbody shift 135
88 SHORT reduce 104
167 ABSTRACT reduce 47
170 ID reduce 31
47 BECOME reduce 36
93 primnoarray shift 136
58 WHILE reduce 113
93 BECOME reduce 36
175 BOOLEAN reduce 39
40 WHILE reduce 114
172 INTERFACE reduce 72
58 LBRACE reduce 113
1 SEMI reduce 10
130 FOR reduce 13
161 BYTE reduce 72
167 FINAL reduce 47
87 INT reduce 19
44 assignexpr shift 29
93 stmntexprlst shift 137
126 FINAL reduce 37
36 ifthen shift 9
37 STATIC reduce 12
35 COMMA reduce 110
152 INT reduce 20
132 ID reduce 60
100 LBRACK shift 138
129 qualifiedname shift 20
166 RBRACE reduce 32
146 assign shift 1
80 ID reduce 97
116 PROTECTED reduce 68
170 BOOLEAN reduce 31
130 RETURN reduce 13
40 ELSE reduce 114
39 STATIC shift 116
21 IF reduce 106
150 STATIC reduce 18
119 ifthenelse shift 88
21 ID reduce 106
121 BOOLEAN reduce 22
72 INT reduce 129
178 INTERFACE reduce 46
161 PUBLIC reduce 72
47 expr shift 139
2 BECOME reduce 36
64 LBRACE reduce 102
10 IMPLEMENTS reduce 76
82 ID reduce 67
81 modifier shift 71
60 INTERFACE reduce 83
129 arrayaccess shift 4
91 exprstmnt shift 58
82 SHORT reduce 67
150 FINAL reduce 18
152 BYTE reduce 20
3 FOR reduce 33
119 arraytype shift 19
59 name shift 8
96 CHAR reduce 111
39 NATIVE shift 74
55 DOT reduce 88
153 LBRACE reduce 30
182 RPAREN reduce 1
172 PROTECTED reduce 72
96 RETURN reduce 111
14 ID reduce 116
138 simplename shift 11
176 SHORT reduce 100
178 NATIVE reduce 46
106 BYTE reduce 69
146 arrayaccess shift 4
147 block shift 96
64 SEMI reduce 102
101 RBRACE reduce 109
110 qualifiedname shift 20
156 block shift 96
124 simplename shift 11
147 stmntnotrail shift 64
21 INT reduce 106
171 EOF reduce 120
96 INT reduce 111
135 ABSTRACT reduce 61
181 PROTECTED reduce 45
12 name shift 8
87 SHORT reduce 19
161 NATIVE reduce 72
152 ID reduce 20
81 INTERFACE shift 140
21 WHILE reduce 106
3 RBRACE reduce 33
94 SEMI reduce 125
163 NATIVE reduce 21
84 primnoarray shift 136
166 CHAR reduce 32
138 fieldaccess shift 25
186 arglist shift 141
106 ID reduce 69
91 SEMI shift 3
149 INT reduce 58
9 BYTE reduce 103
29 RBRACK reduce 34
124 arraytype shift 19
90 SHORT shift 43
121 NATIVE reduce 22
88 WHILE reduce 104
60 PUBLIC reduce 83
175 ID reduce 39
154 RBRACE reduce 16
175 IF reduce 39
106 CLASS reduce 69
88 BOOLEAN reduce 104
177 ID shift 142
121 FINAL reduce 22
91 block shift 96
147 stmnt shift 143
178 STATIC reduce 46
64 SHORT reduce 102
90 BYTE shift 65
12 condexpr shift 7
119 stmnt shift 144
60 NATIVE reduce 83
93 DOT reduce 36
76 RBRACK shift 145
46 name shift 80
39 numerictype shift 32
175 BYTE reduce 39
86 EOF reduce 23
181 PUBLIC reduce 45
186 RPAREN reduce 1
54 RBRACE reduce 105
125 BECOME shift 146
101 COMMA reduce 109
13 FINAL reduce 70
77 PUBLIC reduce 66
132 ABSTRACT reduce 60
137 RBRACE reduce 41
130 CHAR reduce 13
71 INT reduce 73
69 STATIC reduce 44
119 exprstmnt shift 58
90 INT shift 15
132 CHAR reduce 60
116 ABSTRACT reduce 68
12 assignexpr shift 29
12 BECOME reduce 36
64 FOR reduce 102
39 referencetype shift 14
175 RBRACE reduce 39
72 RETURN reduce 129
156 SEMI shift 3
82 FINAL reduce 67
97 RPAREN reduce 85
155 LBRACE shift 17
13 SHORT reduce 70
20 IMPLEMENTS reduce 75
1 RPAREN reduce 10
143 SHORT reduce 43
40 SHORT reduce 114
67 SEMI reduce 127
181 ABSTRACT reduce 45
178 EOF reduce 46
74 ABSTRACT reduce 71
21 CHAR reduce 106
88 RETURN reduce 104
149 BYTE reduce 58
181 INTERFACE reduce 45
142 LBRACK reduce 123
27 BECOME reduce 123
53 lefthand shift 16
144 LBRACE reduce 14
168 FINAL reduce 81
108 SEMI reduce 57
158 COMMA reduce 108
75 RETURN reduce 99
51 ELSE shift 147
21 RBRACE reduce 106
100 DOT shift 70
172 interfacedecl shift 148
78 qualifiedname shift 20
51 INT reduce 102
60 ABSTRACT reduce 83
84 lefthand shift 16
130 SEMI reduce 13
59 assign shift 1
99 SEMI shift 149
64 WHILE reduce 102
40 INT reduce 114
36 for shift 21
154 RETURN reduce 16
161 classmemberdecl shift 150
119 while shift 54
126 NATIVE reduce 37
119 for shift 21
146 fieldaccess shift 25
135 ID reduce 61
129 ID shift 10
135 RBRACE reduce 61
173 SEMI shift 151
63 COMMA reduce 128
64 RETURN reduce 102
44 lefthand shift 16
150 SHORT reduce 18
77 FINAL reduce 66
161 constructordecl shift 152
170 INT reduce 31
87 PUBLIC reduce 19
130 IF reduce 13
174 LBRACE reduce 63
130 ID reduce 13
13 STATIC reduce 70
78 name shift 153
178 PUBLIC reduce 46
96 RBRACE reduce 111
2 ID shift 10
182 condexpr shift 7
126 BOOLEAN reduce 37
58 INT reduce 113
129 assignexpr shift 29
135 STATIC reduce 61
132 BOOLEAN reduce 60
93 fieldaccess shift 6
119 SEMI shift 3
96 BOOLEAN reduce 111
170 FINAL reduce 31
64 BYTE reduce 102
126 ABSTRACT reduce 37
135 CHAR reduce 61
12 qualifiedname shift 20
119 blockstmnt shift 154
161 methodhead shift 155
111 RBRACE shift 156
69 IMPORT reduce 44
163 PUBLIC reduce 21
70 ID shift 107
93 simplename shift 11
124 type shift 157
146 SEMI reduce 5
161 FINAL reduce 72
161 BOOLEAN reduce 72
32 ID reduce 89
3 RETURN reduce 33
84 methodinvoke shift 158
150 PROTECTED reduce 18
74 FINAL reduce 71
129 assign shift 1
54 BYTE reduce 105
27 RPAREN reduce 123
183 ID reduce 59
163 ABSTRACT reduce 21
102 BECOME reduce 4
36 stmntnotrail shift 64
40 SEMI reduce 114
40 RETURN reduce 114
15 ID reduce 79
149 LBRACE reduce 58
41 COMMA reduce 84
24 WHILE reduce 112
54 BOOLEAN reduce 105
46 SHORT shift 43
23 ID reduce 90
12 lefthand shift 16
172 typedecl shift 159
74 PROTECTED reduce 71
89 IMPLEMENTS reduce 25
38 RETURN reduce 42
126 RBRACE reduce 37
24 FOR reduce 112
182 expr shift 105
53 condexpr shift 7
176 RETURN reduce 100
88 FOR reduce 104
150 CHAR reduce 18
66 extendsinterfaces shift 160
170 RBRACE reduce 31
182 qualifiedname shift 20
169 IMPORT reduce 82
51 RETURN reduce 102
187 SEMI reduce 8
90 primitivetype shift 42
147 FOR shift 28
77 NATIVE reduce 66
163 classbodydecls shift 161
67 COMMA reduce 127
142 BECOME reduce 123
165 RPAREN reduce 86
146 lefthand shift 16
69 NATIVE reduce 44
1 RBRACK reduce 10
54 SEMI reduce 105
106 SHORT reduce 69
41 RPAREN reduce 84
90 localvardecl shift 162
170 STATIC reduce 31
178 ABSTRACT reduce 46
58 SEMI reduce 113
176 WHILE reduce 100
183 ABSTRACT reduce 59
143 CHAR reduce 43
24 BOOLEAN reduce 112
1 RBRACE reduce 10
135 INT reduce 61
167 NATIVE reduce 47
149 RBRACE reduce 58
12 simplename shift 11
73 LBRACE shift 163
51 BYTE reduce 102
150 ABSTRACT reduce 18
71 ABSTRACT reduce 73
147 retstmnt shift 40
64 CHAR reduce 102
2 name shift 8
119 qualifiedname shift 20
186 name shift 8
59 qualifiedname shift 20
95 COMMA reduce 107
47 lefthand shift 16
161 CHAR reduce 72
138 arrayaccess shift 4
186 BECOME reduce 36
54 CHAR reduce 105
88 BYTE reduce 104
10 LPAREN reduce 76
11 LBRACK reduce 74
100 BECOME reduce 49
182 assign shift 1
135 SHORT reduce 61
154 INT reduce 16
183 BOOLEAN reduce 59
81 CLASS shift 164
82 NATIVE reduce 67
169 CLASS reduce 82
2 condexpr shift 7
135 FINAL reduce 61
58 FOR reduce 113
87 ID reduce 19
168 SEMI reduce 81
24 SHORT reduce 112
71 STATIC reduce 73
69 PUBLIC reduce 44
36 exprstmnt shift 58
132 SHORT reduce 60
74 PUBLIC reduce 71
156 RETURN shift 2
126 BYTE reduce 37
124 param shift 165
132 INT reduce 60
182 lefthand shift 16
40 RBRACE reduce 114
148 EOF reduce 119
116 CLASS reduce 68
38 CHAR reduce 42
163 SHORT reduce 21
121 PROTECTED reduce 22
161 methoddecl shift 166
39 SHORT shift 43
172 ondemandimport shift 167
51 RBRACE reduce 102
11 LBRACE reduce 74
116 NATIVE reduce 68
177 variabledeclid shift 125
178 CLASS reduce 46
54 FOR reduce 105
75 FOR reduce 99
130 BYTE reduce 13
151 NATIVE reduce 101
37 CHAR reduce 12
11 SEMI reduce 74
183 PROTECTED reduce 59
183 FINAL reduce 59
17 BYTE reduce 15
119 SHORT shift 43
152 RBRACE reduce 20
77 PROTECTED reduce 66
74 STATIC reduce 71
54 SHORT reduce 105
74 SHORT reduce 71
40 BOOLEAN reduce 114
60 STATIC reduce 83
121 ID reduce 22
143 FOR reduce 43
107 SEMI reduce 96
130 SHORT reduce 13
60 EOF reduce 83
126 ID reduce 37
82 BYTE reduce 67
104 SEMI shift 168
169 PROTECTED reduce 82
39 ID shift 10
186 arrayaccess shift 4
33 ID reduce 11
172 ABSTRACT reduce 72
74 BYTE reduce 71
38 INT reduce 42
0 BOF shift 169
59 BECOME reduce 36
91 ifthenelse shift 88
161 fielddecl shift 170
75 LBRACE reduce 99
119 block shift 96
163 FINAL reduce 21
172 SEMI shift 171
50 RBRACE reduce 65
130 BOOLEAN reduce 13
169 SEMI reduce 82
84 BECOME reduce 36
9 SEMI reduce 103
151 PROTECTED reduce 101
159 EOF reduce 38
53 arrayaccess shift 4
163 PROTECTED reduce 21
13 BOOLEAN reduce 70
9 INT reduce 103
69 importdecls shift 172
84 arrayaccess shift 56
124 primitivetype shift 42
138 assignexpr shift 29
168 ABSTRACT reduce 81
102 DOT reduce 4
166 BYTE reduce 32
74 NATIVE reduce 71
72 SHORT reduce 129
60 IMPORT reduce 83
58 ELSE reduce 113
143 ID reduce 43
156 ifthenelse shift 88
143 IF reduce 43
182 fieldaccess shift 25
121 INT reduce 22
169 ABSTRACT reduce 82
10 ID reduce 76
84 qualifiedname shift 20
83 DOT reduce 91
132 RBRACE reduce 60
175 SEMI reduce 39
1 COMMA reduce 10
38 BYTE reduce 42
125 LBRACK shift 45
166 FINAL reduce 32
9 BOOLEAN reduce 103
93 ID shift 10
61 name shift 173
17 BOOLEAN reduce 15
84 primary shift 112
39 INT shift 15
46 qualifiedname shift 20
182 simplename shift 11
186 assign shift 1
24 LBRACE reduce 112
106 FINAL reduce 69
177 methoddeclr shift 174
58 CHAR reduce 113
93 methodinvoke shift 158
88 CHAR reduce 104
156 stmnt shift 175
20 LBRACK reduce 75
138 condexpr shift 7
92 SEMI shift 176
131 simplename shift 11
20 LBRACE reduce 75
39 type shift 177
21 LBRACE reduce 106
84 DOT reduce 36
107 IMPLEMENTS reduce 96
17 FOR reduce 15
7 RPAREN reduce 9
46 type shift 157
119 WHILE shift 79
124 BYTE shift 65
40 CHAR reduce 114
37 IF reduce 12
36 LBRACE shift 17
168 STATIC reduce 81
37 ID reduce 12
172 singletypeimport shift 178
182 ID shift 10
119 CHAR shift 22
168 CLASS reduce 81
7 SEMI reduce 9
172 classdecl shift 179
182 assignexpr shift 29
77 SHORT reduce 66
176 INT reduce 100
12 fieldaccess shift 25
121 PUBLIC reduce 22
44 name shift 8
69 INTERFACE reduce 44
37 INT reduce 12
54 LBRACE reduce 105
90 forinit shift 180
172 importdecl shift 181
100 LPAREN shift 182
57 COMMA reduce 64
178 PROTECTED reduce 46
155 block shift 183
121 CHAR reduce 22
138 BECOME reduce 36
161 STATIC reduce 72
175 FOR reduce 39
177 variabledecl shift 94
48 RPAREN shift 184
143 RBRACE reduce 43
169 file shift 185
35 RBRACE reduce 110
115 variabledeclid shift 125
124 INT shift 15
181 IMPORT reduce 45
59 lefthand shift 16
22 LBRACK reduce 80
68 LPAREN shift 186
17 RETURN reduce 15
5 ID shift 27
156 FOR shift 28
71 SHORT reduce 73
17 LBRACE reduce 15
142 SEMI reduce 123
156 WHILE shift 79
74 CHAR reduce 71
8 LBRACK shift 138
46 CHAR shift 22
53 assignexpr shift 187
44 expr shift 188
167 CLASS reduce 47
17 SHORT reduce 15
149 IF reduce 58
149 ID reduce 58
170 PUBLIC reduce 31
123 super shift 189
46 referencetype shift 14
150 RBRACE reduce 18
121 BYTE reduce 22
59 condexpr shift 7
147 LBRACE shift 17
138 lefthand shift 16
85 SEMI reduce 122
132 FINAL reduce 60
189 LBRACE reduce 26
106 CHAR reduce 69
183 INT reduce 59
176 IF reduce 100
75 RBRACE reduce 99
169 NATIVE reduce 82
71 NATIVE reduce 73
89 DOT shift 70
176 RBRACE reduce 100
82 INTERFACE reduce 67
176 ID reduce 100
