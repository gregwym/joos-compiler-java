69
BOF
EOF
ABSTRACT
EQ
FINAL
PLUS
MINUS
SLASH
BYTE
STAR
LPAREN
RPAREN
PRIVATE
LBRACK
RBRACK
PERCENT
BECOME
LT
GT
BAND
BOR
SEMI
THIS
NOT
BOOLEAN
BOOLLIT
CHAR
CHARLIT
PACKAGE
SHORT
SUPER
LEQ
GEQ
OR
AND
NEQ
NEW
COMMENT
COLON
CLASS
RBRACE
PROTECTED
PUBLIC
LPARAM
INTERFACE
RPARAM
LBRACE
NULL
ZERO
ID
RETURN
WHILE
TYPE
COMMA
IF
ELSE
FOR
STRING
STRINGLIT
DOT
IMPORT
IMPLEMENTS
INSTANCEOF
STATIC
INT
INTLIT
EXTENDS
NATIVE
VOID
90
S
arglist
arrayaccess
arraycreate
arraytype
addiexpr
assign
assignop
block
blockstmnt
blockstmnts
castexpr
classbody
classbodydecl
classbodydecls
classcreateexpr
classdecl
classmemberdecl
condexpr
candexpr
corexpr
relationexpr
constexpr
constructordecl
constructordeclor
dim
dims
dimexpr
emptystmnt
expr
exprstmnt
equalexpr
stmntexpr
stmntwotrail
extendsinterfaces
fieldaccess
fielddecl
file
for
fornoshort
forinit
forupdate
ifthen
ifthenelse
ifthenelsenoshort
importdecls
importdecl
interface
interfaces
interfacedecl
interfacelist
lefthand
literal
localvardecl
localvardeclstmnt
methodbody
methoddecl
methoddeclor
methodhead
methodinvoke
modifiers
modifier
multiexpr
name
numerictype
ondemandimport
packagedecl
param
params
primary
primitivetype
primnoarray
qualifiedname
retstmnt
referencetype
simplename
singletypeimport
staticinit
stmntnoshort
stmnt
super
type
typedecl
unaryexpr
variabledeclor
variabledeclid
variabledeclors
variableinit
while
whilenoshort
S
177
S BOF file EOF
arglist
arglist expr
arglist arglist COMMA expr
arrayaccess name LBRACK expr RBRACK
arrayaccess primnoarray LBRACK expr RBRACK
arraycreate NEW primitivetype dimexpr
arraycreate NEW name dimexpr
arraytype primitivetype LBRACK RBRACK
arraytype name LBRACK RBRACK
assign lefthand assignop assign
assignop BECOME
block LBRACE blockstmnts RBRACE
blockstmnt localvardeclstmnt
blockstmnt stmnt
blockstmnts
blockstmnts blockstmnts blockstmnt
classbody LBRACE classbodydecls RBRACE
classbodydecl classmemberdecl
classbodydecl staticinit
classbodydecl constructordecl
classbodydecls
classbodydecls classbodydecls classbodydecl
classdecl modifiers CLASS ID super interfaces classbody
constructordecl modifiers constructordeclor block
constructordeclor simplename LPAREN params RPAREN
dimexpr LBRACK expr RBRACK
dims
dims dim
dim LBRACK RBRACK
super
super EXTENDS name
interfaces
interfaces IMPLEMENTS interfacelist
interfacelist
interfacelist interfacelist interface
interface name
classmemberdecl fielddecl
classmemberdecl methoddecl
classcreateexpr NEW name LPAREN arglist RPAREN
emptystmnt SEMI
expr corexpr
expr assign
constexpr expr
fieldaccess primary DOT ID
fielddecl modifiers type variabledeclors SEMI
file packagedecl importdecls typedecl
for FOR LBRACE forinit SEMI expr SEMI forupdate RBRACE stmnt
forinit
forinit stmntexpr
forinit localvardecl
forupdate
forupdate stmntexpr
ifthen IF LPAREN expr RPAREN stmnt
ifthenelse IF LPAREN expr RPAREN stmntnoshort ELSE stmnt
ifthenelsenoshort IF LPAREN expr RPAREN stmntnoshort ELSE stmntnoshort
stmntnoshort stmntwotrail
stmntnoshort ifthenelsenoshort
stmntnoshort whilenoshort
stmntnoshort fornoshort
importdecls
importdecls importdecls importdecl
importdecl singletypeimport
importdecl ondemandimport
interfacedecl modifiers INTERFACE ID extendsinterfaces LBRACE RBRACE
lefthand name
lefthand fieldaccess
lefthand arrayaccess
literal INTLIT
literal BOOLLIT
literal CHARLIT
literal STRINGLIT
literal NULL
localvardecl type variabledeclors
localvardeclstmnt localvardecl SEMI
methodbody block
methodbody SEMI
methoddecl methodhead methodbody
methodhead modifiers type methoddeclor
methodhead modifiers VOID methoddeclor
methoddeclor ID LPAREN params RPAREN
methodinvoke name LPAREN arglist RPAREN
methodinvoke primary DOT ID LPAREN arglist RPAREN
modifier PUBLIC
modifier PROTECTED
modifier STATIC
modifier ABSTRACT
modifier FINAL
modifier NATIVE
modifiers
modifiers modifiers modifier
name simplename
name qualifiedname
simplename ID
numerictype BYTE
numerictype SHORT
numerictype INT
numerictype CHAR
ondemandimport IMPORT name DOT STAR SEMI
packagedecl
packagedecl PACKAGE name SEMI
param type variabledeclid
params
params param
params params COMMA param
primary primnoarray
primary arraycreate
primitivetype numerictype
primitivetype BOOLEAN
primnoarray literal
primnoarray THIS
primnoarray LPAREN expr RPAREN
primnoarray classcreateexpr
primnoarray fieldaccess
primnoarray methodinvoke
primnoarray arrayaccess
qualifiedname name DOT ID
referencetype name
referencetype arraytype
retstmnt RETURN SEMI
retstmnt RETURN expr SEMI
singletypeimport IMPORT name SEMI
stmnt stmntwotrail
stmnt ifthen
stmnt ifthenelse
stmnt while
stmnt for
stmntexpr assign
stmntexpr methodinvoke
stmntexpr classcreateexpr
stmntwotrail block
stmntwotrail emptystmnt
stmntwotrail exprstmnt
stmntwotrail retstmnt
exprstmnt stmntexpr SEMI
type primitivetype
type referencetype
typedecl
typedecl classdecl
typedecl interfacedecl
typedecl SEMI
unaryexpr primary
unaryexpr name
unaryexpr NOT unaryexpr
unaryexpr castexpr
castexpr LPAREN primitivetype dims RPAREN unaryexpr
castexpr LPAREN expr RPAREN unaryexpr
castexpr LPAREN name dim RPAREN unaryexpr
multiexpr unaryexpr
multiexpr multiexpr STAR unaryexpr
multiexpr multiexpr SLASH unaryexpr
multiexpr multiexpr PERCENT unaryexpr
addiexpr multiexpr
addiexpr addiexpr PLUS multiexpr
addiexpr addiexpr MINUS multiexpr
relationexpr addiexpr
relationexpr relationexpr LT addiexpr
relationexpr relationexpr GT addiexpr
relationexpr relationexpr LEQ addiexpr
relationexpr relationexpr GEQ addiexpr
relationexpr relationexpr INSTANCEOF addiexpr
equalexpr relationexpr
equalexpr equalexpr EQ relationexpr
equalexpr equalexpr NEQ relationexpr
candexpr equalexpr
candexpr candexpr AND equalexpr
corexpr candexpr
corexpr corexpr OR candexpr
variabledeclor variabledeclid
variabledeclor variabledeclid BECOME variableinit
variabledeclid ID
variabledeclid variabledeclid LBRACK RBRACK
variabledeclors variabledeclor
variabledeclors variabledeclors COMMA variabledeclor
variableinit expr
while WHILE LPAREN expr RPAREN stmnt
whilenoshort WHILE LPAREN expr RPAREN stmntnoshort
